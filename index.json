{
  "api/MonoMod.RuntimeDetour.html": {
    "href": "api/MonoMod.RuntimeDetour.html",
    "title": "Namespace MonoMod.RuntimeDetour | MonoMod",
    "keywords": "Namespace MonoMod.RuntimeDetour Classes Detour A fully managed detour. Multiple Detours for a method to detour from can exist at any given time. Detours can be layered. If you're writing your own detour manager or need to detour native functions, it's better to create instances of NativeDetour instead. Detour<T> DetourConfig DetourContext DetourHelper DetourModManager HarmonyDetourBridge HarmonyDetourBridge.Type Hook Hook<T> Hook<TFrom, TTo> HookConfig ILHook ILHookConfig NativeDetour A \"raw\" native detour, acting as a wrapper around NativeDetourData with a few helpers. Only one NativeDetour for a method to detour from can exist at any given time. NativeDetours cannot be layered. If you don't need the trampoline generator or any of the management helpers, use DetourManager.Native directly. Unless you're writing your own detour manager or need to detour native functions, it's better to create instances of Detour instead. NativeDetourConfig NativeDetourData The data forming a \"raw\" native detour, created and consumed by DetourManager.Native. Interfaces IDetour IDetourNativePlatform IDetourRuntimePlatform ISortableDetour"
  },
  "api/MonoMod.RuntimeDetour.Platforms.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.html",
    "title": "Namespace MonoMod.RuntimeDetour.Platforms | MonoMod",
    "keywords": "Namespace MonoMod.RuntimeDetour.Platforms Classes DetourNativeARMPlatform DetourNativeARMPlatform.DetourType DetourNativeLibcPlatform DetourNativeMonoPlatform DetourNativeMonoPosixPlatform DetourNativeMonoPosixPlatform.Errno DetourNativeMonoPosixPlatform.SysconfName DetourNativeWindowsPlatform DetourNativeX86Platform DetourNativeX86Platform.DetourType DetourRuntimeILPlatform DetourRuntimeILPlatform.MethodPin DetourRuntimeMonoPlatform DetourRuntimeNETPlatform"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourNativeX86Platform.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourNativeX86Platform.html",
    "title": "Class DetourNativeX86Platform | MonoMod",
    "keywords": "Class DetourNativeX86Platform Inheritance System.Object DetourNativeX86Platform Implements IDetourNativePlatform Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourNativeX86Platform : Object, IDetourNativePlatform Constructors DetourNativeX86Platform() Declaration public DetourNativeX86Platform() Methods Apply(NativeDetourData) Declaration public void Apply(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour Copy(IntPtr, IntPtr, Byte) Declaration public void Copy(IntPtr src, IntPtr dst, byte type) Parameters Type Name Description System.IntPtr src System.IntPtr dst System.Byte type Create(IntPtr, IntPtr, Nullable<Byte>) Declaration public NativeDetourData Create(IntPtr from, IntPtr to, Nullable<byte> type) Parameters Type Name Description System.IntPtr from System.IntPtr to System.Nullable < System.Byte > type Returns Type Description NativeDetourData FlushICache(IntPtr, UInt32) Declaration public void FlushICache(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size Free(NativeDetourData) Declaration public void Free(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour MakeExecutable(IntPtr, UInt32) Declaration public void MakeExecutable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MakeWritable(IntPtr, UInt32) Declaration public void MakeWritable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MemAlloc(UInt32) Declaration public IntPtr MemAlloc(uint size) Parameters Type Name Description System.UInt32 size Returns Type Description System.IntPtr MemFree(IntPtr) Declaration public void MemFree(IntPtr ptr) Parameters Type Name Description System.IntPtr ptr Implements IDetourNativePlatform"
  },
  "api/MonoMod.RuntimeDetour.IDetourNativePlatform.html": {
    "href": "api/MonoMod.RuntimeDetour.IDetourNativePlatform.html",
    "title": "Interface IDetourNativePlatform | MonoMod",
    "keywords": "Interface IDetourNativePlatform Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public interface IDetourNativePlatform Methods Apply(NativeDetourData) Declaration void Apply(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour Copy(IntPtr, IntPtr, Byte) Declaration void Copy(IntPtr src, IntPtr dst, byte type) Parameters Type Name Description System.IntPtr src System.IntPtr dst System.Byte type Create(IntPtr, IntPtr, Nullable<Byte>) Declaration NativeDetourData Create(IntPtr from, IntPtr to, Nullable<byte> type = null) Parameters Type Name Description System.IntPtr from System.IntPtr to System.Nullable < System.Byte > type Returns Type Description NativeDetourData FlushICache(IntPtr, UInt32) Declaration void FlushICache(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size Free(NativeDetourData) Declaration void Free(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour MakeExecutable(IntPtr, UInt32) Declaration void MakeExecutable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MakeWritable(IntPtr, UInt32) Declaration void MakeWritable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MemAlloc(UInt32) Declaration IntPtr MemAlloc(uint size) Parameters Type Name Description System.UInt32 size Returns Type Description System.IntPtr MemFree(IntPtr) Declaration void MemFree(IntPtr ptr) Parameters Type Name Description System.IntPtr ptr Extension Methods DetourHelper.MakeWritable(IDetourNativePlatform, NativeDetourData) DetourHelper.MakeExecutable(IDetourNativePlatform, NativeDetourData) DetourHelper.FlushICache(IDetourNativePlatform, NativeDetourData)"
  },
  "api/MonoMod.RuntimeDetour.IDetour.html": {
    "href": "api/MonoMod.RuntimeDetour.IDetour.html",
    "title": "Interface IDetour | MonoMod",
    "keywords": "Interface IDetour Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public interface IDetour : IDisposable Properties IsApplied Declaration bool IsApplied { get; } Property Value Type Description System.Boolean IsValid Declaration bool IsValid { get; } Property Value Type Description System.Boolean Methods Apply() Declaration void Apply() Free() Declaration void Free() GenerateTrampoline(MethodBase) Declaration MethodBase GenerateTrampoline(MethodBase signature = null) Parameters Type Name Description System.Reflection.MethodBase signature Returns Type Description System.Reflection.MethodBase GenerateTrampoline<T>() Declaration T GenerateTrampoline<T>() where T : Delegate Returns Type Description T Type Parameters Name Description T Undo() Declaration void Undo()"
  },
  "api/MonoMod.RuntimeDetour.HookGen.html": {
    "href": "api/MonoMod.RuntimeDetour.HookGen.html",
    "title": "Namespace MonoMod.RuntimeDetour.HookGen | MonoMod",
    "keywords": "Namespace MonoMod.RuntimeDetour.HookGen Classes HookEndpointManager HookGenerator"
  },
  "api/MonoMod.RuntimeDetour.Hook-2.html": {
    "href": "api/MonoMod.RuntimeDetour.Hook-2.html",
    "title": "Class Hook<TFrom, TTo> | MonoMod",
    "keywords": "Class Hook<TFrom, TTo> Inheritance System.Object Hook Hook<TFrom, TTo> Implements IDetour System.IDisposable Inherited Members Hook.OnDetour Hook.OnUndo Hook.OnGenerateTrampoline Hook.Method Hook.Target Hook.TargetReal Hook.DelegateTarget Hook.Apply() Hook.Undo() Hook.Free() Hook.Dispose() Hook.GenerateTrampoline(MethodBase) Hook.GenerateTrampoline<T>() Hook.IsValid Hook.IsApplied Hook.Detour Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public class Hook<TFrom, TTo> : Hook, IDetour, IDisposable Type Parameters Name Description TFrom TTo Constructors Hook(TFrom, TTo) Declaration public Hook(TFrom from, TTo to) Parameters Type Name Description TFrom from TTo to Hook(TFrom, TTo, HookConfig) Declaration public Hook(TFrom from, TTo to, HookConfig config) Parameters Type Name Description TFrom from TTo to HookConfig config Hook(TFrom, TTo, ref HookConfig) Declaration public Hook(TFrom from, TTo to, ref HookConfig config) Parameters Type Name Description TFrom from TTo to HookConfig config Hook(Expression<Func<TFrom>>, TTo) Declaration public Hook(Expression<Func<TFrom>> from, TTo to) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TFrom>> from TTo to Hook(Expression<Func<TFrom>>, TTo, HookConfig) Declaration public Hook(Expression<Func<TFrom>> from, TTo to, HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TFrom>> from TTo to HookConfig config Hook(Expression<Func<TFrom>>, TTo, ref HookConfig) Declaration public Hook(Expression<Func<TFrom>> from, TTo to, ref HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TFrom>> from TTo to HookConfig config Implements IDetour System.IDisposable"
  },
  "api/MonoMod.MonoModder.html": {
    "href": "api/MonoMod.MonoModder.html",
    "title": "Class MonoModder | MonoMod",
    "keywords": "Class MonoModder Inheritance System.Object MonoModder Implements System.IDisposable Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModder : Object, IDisposable Constructors MonoModder() Declaration public MonoModder() Fields _assemblyResolver Declaration protected IAssemblyResolver _assemblyResolver Field Value Type Description Mono.Cecil.IAssemblyResolver _GACPaths Declaration protected string[] _GACPaths Field Value Type Description System.String [] _mmAddedCtor Declaration protected MethodDefinition _mmAddedCtor Field Value Type Description Mono.Cecil.MethodDefinition _mmOriginalCtor Declaration protected MethodDefinition _mmOriginalCtor Field Value Type Description Mono.Cecil.MethodDefinition _mmOriginalNameCtor Declaration protected MethodDefinition _mmOriginalNameCtor Field Value Type Description Mono.Cecil.MethodDefinition _mmPatchCtor Declaration protected MethodDefinition _mmPatchCtor Field Value Type Description Mono.Cecil.MethodDefinition _readerParameters Declaration protected ReaderParameters _readerParameters Field Value Type Description Mono.Cecil.ReaderParameters _writerParameters Declaration protected WriterParameters _writerParameters Field Value Type Description Mono.Cecil.WriterParameters CleanupEnabled Declaration public bool CleanupEnabled Field Value Type Description System.Boolean CurrentRID Declaration public int CurrentRID Field Value Type Description System.Int32 CustomAttributeHandlers Declaration public Dictionary<string, Action<object, object[]>> CustomAttributeHandlers Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Action < System.Object , System.Object []>> CustomMethodAttributeHandlers Declaration public Dictionary<string, Action<object, object[]>> CustomMethodAttributeHandlers Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Action < System.Object , System.Object []>> DebugSymbolOutputFormat Declaration public DebugSymbolFormat DebugSymbolOutputFormat Field Value Type Description DebugSymbolFormat DependencyCache Declaration public Dictionary<string, ModuleDefinition> DependencyCache Field Value Type Description System.Collections.Generic.Dictionary < System.String , Mono.Cecil.ModuleDefinition > DependencyDirs Declaration public List<string> DependencyDirs Field Value Type Description System.Collections.Generic.List < System.String > DependencyMap Declaration public Dictionary<ModuleDefinition, List<ModuleDefinition>> DependencyMap Field Value Type Description System.Collections.Generic.Dictionary < Mono.Cecil.ModuleDefinition , System.Collections.Generic.List < Mono.Cecil.ModuleDefinition >> ForceCallMap Declaration public Dictionary<string, OpCode> ForceCallMap Field Value Type Description System.Collections.Generic.Dictionary < System.String , Mono.Cecil.Cil.OpCode > Input Declaration public Stream Input Field Value Type Description System.IO.Stream InputPath Declaration public string InputPath Field Value Type Description System.String IsMono Declaration public static readonly bool IsMono Field Value Type Description System.Boolean LogVerboseEnabled Declaration public bool LogVerboseEnabled Field Value Type Description System.Boolean MethodBodyRewriter Declaration public MethodBodyRewriter MethodBodyRewriter Field Value Type Description MethodBodyRewriter MethodParser Declaration public MethodParser MethodParser Field Value Type Description MethodParser MethodRewriter Declaration public MethodRewriter MethodRewriter Field Value Type Description MethodRewriter MissingDependencyResolver Declaration public MissingDependencyResolver MissingDependencyResolver Field Value Type Description MissingDependencyResolver MissingDependencyThrow Declaration public bool MissingDependencyThrow Field Value Type Description System.Boolean Mods Declaration public List<ModuleReference> Mods Field Value Type Description System.Collections.Generic.List < Mono.Cecil.ModuleReference > Module Declaration public ModuleDefinition Module Field Value Type Description Mono.Cecil.ModuleDefinition OnReadMod Declaration public ModReadEventHandler OnReadMod Field Value Type Description ModReadEventHandler Output Declaration public Stream Output Field Value Type Description System.IO.Stream OutputPath Declaration public string OutputPath Field Value Type Description System.String PostProcessors Declaration public PostProcessor PostProcessors Field Value Type Description PostProcessor PreventInline Declaration public bool PreventInline Field Value Type Description System.Boolean PublicEverything Declaration public bool PublicEverything Field Value Type Description System.Boolean ReadingMode Declaration public ReadingMode ReadingMode Field Value Type Description Mono.Cecil.ReadingMode RelinkerCacheEnabled Declaration public bool RelinkerCacheEnabled Field Value Type Description System.Boolean RelinkMap Declaration public Dictionary<string, object> RelinkMap Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > RelinkMapCache Declaration public Dictionary<string, IMetadataTokenProvider> RelinkMapCache Field Value Type Description System.Collections.Generic.Dictionary < System.String , Mono.Cecil.IMetadataTokenProvider > RelinkModuleMap Declaration public Dictionary<string, ModuleDefinition> RelinkModuleMap Field Value Type Description System.Collections.Generic.Dictionary < System.String , Mono.Cecil.ModuleDefinition > RelinkModuleMapCache Declaration public Dictionary<string, TypeReference> RelinkModuleMapCache Field Value Type Description System.Collections.Generic.Dictionary < System.String , Mono.Cecil.TypeReference > RemovePatchReferences Declaration public bool RemovePatchReferences Field Value Type Description System.Boolean SharedData Declaration public Dictionary<string, object> SharedData Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > ShouldCleanupAttrib Declaration public Func<ICustomAttributeProvider, TypeReference, bool> ShouldCleanupAttrib Field Value Type Description System.Func < Mono.Cecil.ICustomAttributeProvider , Mono.Cecil.TypeReference , System.Boolean > SkipList Declaration public HashSet<string> SkipList Field Value Type Description System.Collections.Generic.HashSet < System.String > Strict Declaration public bool Strict Field Value Type Description System.Boolean UpgradeMSCORLIB Declaration public Nullable<bool> UpgradeMSCORLIB Field Value Type Description System.Nullable < System.Boolean > Version Declaration public static readonly Version Version Field Value Type Description System.Version Properties AssemblyResolver Declaration public virtual IAssemblyResolver AssemblyResolver { get; set; } Property Value Type Description Mono.Cecil.IAssemblyResolver GACPaths Declaration public string[] GACPaths { get; set; } Property Value Type Description System.String [] ReaderParameters Declaration public virtual ReaderParameters ReaderParameters { get; set; } Property Value Type Description Mono.Cecil.ReaderParameters WriterParameters Declaration public virtual WriterParameters WriterParameters { get; set; } Property Value Type Description Mono.Cecil.WriterParameters Methods AllowedSpecialName(MethodDefinition, TypeDefinition) Checks if the method has a special name that is \"allowed\" to be patched. Declaration public virtual bool AllowedSpecialName(MethodDefinition method, TypeDefinition targetType = null) Parameters Type Name Description Mono.Cecil.MethodDefinition method Method to check. Mono.Cecil.TypeDefinition targetType Type to which the method will be added. Returns Type Description System.Boolean true if the special name used in the method is allowed, false otherwise. AutoPatch() Automatically mods the module, loading Input, writing the modded module to Output. Declaration public virtual void AutoPatch() Cleanup(ICustomAttributeProvider, Boolean) Declaration public virtual void Cleanup(ICustomAttributeProvider cap, bool all = false) Parameters Type Name Description Mono.Cecil.ICustomAttributeProvider cap System.Boolean all Cleanup(Boolean) Declaration public virtual void Cleanup(bool all = false) Parameters Type Name Description System.Boolean all CleanupType(TypeDefinition, Boolean) Declaration public virtual void CleanupType(TypeDefinition type, bool all = false) Parameters Type Name Description Mono.Cecil.TypeDefinition type System.Boolean all ClearCaches(Boolean, Boolean, Boolean) Declaration public virtual void ClearCaches(bool all = false, bool shareable = false, bool moduleSpecific = false) Parameters Type Name Description System.Boolean all System.Boolean shareable System.Boolean moduleSpecific DefaultMissingDependencyResolver(MonoModder, ModuleDefinition, String, String) Declaration public virtual ModuleDefinition DefaultMissingDependencyResolver(MonoModder mod, ModuleDefinition main, string name, string fullName) Parameters Type Name Description MonoModder mod Mono.Cecil.ModuleDefinition main System.String name System.String fullName Returns Type Description Mono.Cecil.ModuleDefinition DefaultParser(MonoModder, MethodBody, Instruction, ref Int32) Declaration public virtual bool DefaultParser(MonoModder mod, MethodBody body, Instruction instr, ref int instri) Parameters Type Name Description MonoModder mod Mono.Cecil.Cil.MethodBody body Mono.Cecil.Cil.Instruction instr System.Int32 instri Returns Type Description System.Boolean DefaultPostProcessor(MonoModder) Declaration public virtual void DefaultPostProcessor(MonoModder modder) Parameters Type Name Description MonoModder modder DefaultPostProcessType(TypeDefinition) Declaration public virtual void DefaultPostProcessType(TypeDefinition type) Parameters Type Name Description Mono.Cecil.TypeDefinition type Dispose() Declaration public virtual void Dispose() FindType(ModuleDefinition, String, Stack<ModuleDefinition>) Declaration protected virtual TypeReference FindType(ModuleDefinition main, string fullName, Stack<ModuleDefinition> crawled) Parameters Type Name Description Mono.Cecil.ModuleDefinition main System.String fullName System.Collections.Generic.Stack < Mono.Cecil.ModuleDefinition > crawled Returns Type Description Mono.Cecil.TypeReference FindType(String) Declaration public virtual TypeReference FindType(string name) Parameters Type Name Description System.String name Returns Type Description Mono.Cecil.TypeReference FindType(String, Boolean) Declaration public virtual TypeReference FindType(string name, bool runtimeName) Parameters Type Name Description System.String name System.Boolean runtimeName Returns Type Description Mono.Cecil.TypeReference FindTypeDeep(String) Declaration public virtual TypeReference FindTypeDeep(string name) Parameters Type Name Description System.String name Returns Type Description Mono.Cecil.TypeReference GenReaderParameters(Boolean, String) Declaration public virtual ReaderParameters GenReaderParameters(bool mainModule, string path = null) Parameters Type Name Description System.Boolean mainModule System.String path Returns Type Description Mono.Cecil.ReaderParameters GetMetadataToken(TokenType) Creates a new non-conflicting MetadataToken. Declaration public virtual MetadataToken GetMetadataToken(TokenType type) Parameters Type Name Description Mono.Cecil.TokenType type The type of the new token. Returns Type Description Mono.Cecil.MetadataToken A MetadataToken with an unique RID for the target module. GetMonoModAddedCtor() Declaration public virtual MethodReference GetMonoModAddedCtor() Returns Type Description Mono.Cecil.MethodReference GetMonoModOriginalCtor() Declaration public virtual MethodReference GetMonoModOriginalCtor() Returns Type Description Mono.Cecil.MethodReference GetMonoModOriginalNameCtor() Declaration public virtual MethodReference GetMonoModOriginalNameCtor() Returns Type Description Mono.Cecil.MethodReference GetMonoModPatchCtor() Declaration public virtual MethodReference GetMonoModPatchCtor() Returns Type Description Mono.Cecil.MethodReference Log(Object) Declaration public virtual void Log(object value) Parameters Type Name Description System.Object value Log(String) Declaration public virtual void Log(string text) Parameters Type Name Description System.String text LogVerbose(Object) Declaration public virtual void LogVerbose(object value) Parameters Type Name Description System.Object value LogVerbose(String) Declaration public virtual void LogVerbose(string text) Parameters Type Name Description System.String text MainRelinker(IMetadataTokenProvider, IGenericParameterProvider) Declaration public virtual IMetadataTokenProvider MainRelinker(IMetadataTokenProvider mtp, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IGenericParameterProvider context Returns Type Description Mono.Cecil.IMetadataTokenProvider MapDependencies() Declaration public virtual void MapDependencies() MapDependencies(ModuleDefinition) Declaration public virtual void MapDependencies(ModuleDefinition main) Parameters Type Name Description Mono.Cecil.ModuleDefinition main MapDependency(ModuleDefinition, AssemblyNameReference) Declaration public virtual void MapDependency(ModuleDefinition main, AssemblyNameReference depRef) Parameters Type Name Description Mono.Cecil.ModuleDefinition main Mono.Cecil.AssemblyNameReference depRef MapDependency(ModuleDefinition, String, String, AssemblyNameReference) Declaration public virtual void MapDependency(ModuleDefinition main, string name, string fullName = null, AssemblyNameReference depRef = null) Parameters Type Name Description Mono.Cecil.ModuleDefinition main System.String name System.String fullName Mono.Cecil.AssemblyNameReference depRef ParseLinkFrom(MemberReference, CustomAttribute) Declaration public virtual void ParseLinkFrom(MemberReference target, CustomAttribute hook) Parameters Type Name Description Mono.Cecil.MemberReference target Mono.Cecil.CustomAttribute hook ParseLinkTo(MemberReference, CustomAttribute) Declaration public virtual void ParseLinkTo(MemberReference from, CustomAttribute hook) Parameters Type Name Description Mono.Cecil.MemberReference from Mono.Cecil.CustomAttribute hook ParseRules(ModuleDefinition) Declaration public virtual void ParseRules(ModuleDefinition mod) Parameters Type Name Description Mono.Cecil.ModuleDefinition mod ParseRulesInType(TypeDefinition, Type) Declaration public virtual void ParseRulesInType(TypeDefinition type, Type rulesTypeMMILRT = null) Parameters Type Name Description Mono.Cecil.TypeDefinition type System.Type rulesTypeMMILRT PatchEvent(TypeDefinition, EventDefinition, HashSet<MethodDefinition>) Declaration public virtual void PatchEvent(TypeDefinition targetType, EventDefinition srcEvent, HashSet<MethodDefinition> propMethods = null) Parameters Type Name Description Mono.Cecil.TypeDefinition targetType Mono.Cecil.EventDefinition srcEvent System.Collections.Generic.HashSet < Mono.Cecil.MethodDefinition > propMethods PatchField(TypeDefinition, FieldDefinition) Declaration public virtual void PatchField(TypeDefinition targetType, FieldDefinition field) Parameters Type Name Description Mono.Cecil.TypeDefinition targetType Mono.Cecil.FieldDefinition field PatchMethod(TypeDefinition, MethodDefinition) Declaration public virtual MethodDefinition PatchMethod(TypeDefinition targetType, MethodDefinition method) Parameters Type Name Description Mono.Cecil.TypeDefinition targetType Mono.Cecil.MethodDefinition method Returns Type Description Mono.Cecil.MethodDefinition PatchModule(ModuleDefinition) Patches the module (adds new type members). Declaration public virtual void PatchModule(ModuleDefinition mod) Parameters Type Name Description Mono.Cecil.ModuleDefinition mod Mod to patch into the input module. PatchNested(TypeDefinition) Declaration protected virtual void PatchNested(TypeDefinition type) Parameters Type Name Description Mono.Cecil.TypeDefinition type PatchProperty(TypeDefinition, PropertyDefinition, HashSet<MethodDefinition>) Declaration public virtual void PatchProperty(TypeDefinition targetType, PropertyDefinition prop, HashSet<MethodDefinition> propMethods = null) Parameters Type Name Description Mono.Cecil.TypeDefinition targetType Mono.Cecil.PropertyDefinition prop System.Collections.Generic.HashSet < Mono.Cecil.MethodDefinition > propMethods PatchRefs() Declaration public virtual void PatchRefs() PatchRefs(ModuleDefinition) Declaration public virtual void PatchRefs(ModuleDefinition mod) Parameters Type Name Description Mono.Cecil.ModuleDefinition mod PatchRefsInMethod(MethodDefinition) Declaration public virtual void PatchRefsInMethod(MethodDefinition method) Parameters Type Name Description Mono.Cecil.MethodDefinition method PatchRefsInType(TypeDefinition) Declaration public virtual void PatchRefsInType(TypeDefinition type) Parameters Type Name Description Mono.Cecil.TypeDefinition type PatchType(TypeDefinition) Patches the type (adds new members). Declaration public virtual void PatchType(TypeDefinition type) Parameters Type Name Description Mono.Cecil.TypeDefinition type Type to patch into the input module. PatchWasHere() Declaration public virtual TypeDefinition PatchWasHere() Returns Type Description Mono.Cecil.TypeDefinition PostRelinker(IMetadataTokenProvider, IGenericParameterProvider) Declaration public virtual IMetadataTokenProvider PostRelinker(IMetadataTokenProvider mtp, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IGenericParameterProvider context Returns Type Description Mono.Cecil.IMetadataTokenProvider PrePatchModule(ModuleDefinition) Pre-Patches the module (adds new types, module references, resources, ...). Declaration public virtual void PrePatchModule(ModuleDefinition mod) Parameters Type Name Description Mono.Cecil.ModuleDefinition mod Mod to patch into the input module. PrePatchNested(TypeDefinition) Declaration protected virtual void PrePatchNested(TypeDefinition type) Parameters Type Name Description Mono.Cecil.TypeDefinition type PrePatchType(TypeDefinition, Boolean) Patches the type (adds new types). Declaration public virtual void PrePatchType(TypeDefinition type, bool forceAdd = false) Parameters Type Name Description Mono.Cecil.TypeDefinition type Type to patch into the input module. System.Boolean forceAdd Forcibly add the type, no matter if it already exists or if it's MonoModRules. Read() Reads the main module from the Input stream / InputPath file to Module. Declaration public virtual void Read() ReadMod(Stream) Declaration public virtual void ReadMod(Stream stream) Parameters Type Name Description System.IO.Stream stream ReadMod(String) Declaration public virtual void ReadMod(string path) Parameters Type Name Description System.String path Relinker(IMetadataTokenProvider, IGenericParameterProvider) Declaration public virtual IMetadataTokenProvider Relinker(IMetadataTokenProvider mtp, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IGenericParameterProvider context Returns Type Description Mono.Cecil.IMetadataTokenProvider ResolveRelinkTarget(IMetadataTokenProvider, Boolean, Boolean) Declaration public virtual IMetadataTokenProvider ResolveRelinkTarget(IMetadataTokenProvider mtp, bool relink = true, bool relinkModule = true) Parameters Type Name Description Mono.Cecil.IMetadataTokenProvider mtp System.Boolean relink System.Boolean relinkModule Returns Type Description Mono.Cecil.IMetadataTokenProvider RunCustomAttributeHandlers(ICustomAttributeProvider) Declaration public virtual void RunCustomAttributeHandlers(ICustomAttributeProvider cap) Parameters Type Name Description Mono.Cecil.ICustomAttributeProvider cap Write(Stream, String) Write the modded module to the given stream or the default output. Declaration public virtual void Write(Stream output = null, string outputPath = null) Parameters Type Name Description System.IO.Stream output Output stream. If none given, outputPath or default Output will be used. System.String outputPath Output path. If none given, output or default OutputPath will be used. Implements System.IDisposable Extension Methods MonoModRulesManager.ExecuteRules(MonoModder, TypeDefinition)"
  },
  "api/MonoMod.MonoModConstructor.html": {
    "href": "api/MonoMod.MonoModConstructor.html",
    "title": "Class MonoModConstructor | MonoMod",
    "keywords": "Class MonoModConstructor MonoMod constructor attribute. Apply it onto a constructor and it will be patched by MonoMod. Or apply it onto a method and it will be handled like a constructor. Inheritance System.Object MonoModConstructor Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModConstructor : Attribute Constructors MonoModConstructor() Declaration public MonoModConstructor()"
  },
  "api/MonoMod.MonoModAdded.html": {
    "href": "api/MonoMod.MonoModAdded.html",
    "title": "Class MonoModAdded | MonoMod",
    "keywords": "Class MonoModAdded MonoMod \"added\" attribute. Will be applied by MonoMod automatically on patched types / members. Inheritance System.Object MonoModAdded Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModAdded : Attribute Constructors MonoModAdded() Declaration public MonoModAdded()"
  },
  "api/MonoMod.ModInterop.ModExportNameAttribute.html": {
    "href": "api/MonoMod.ModInterop.ModExportNameAttribute.html",
    "title": "Class ModExportNameAttribute | MonoMod",
    "keywords": "Class ModExportNameAttribute Inheritance System.Object ModExportNameAttribute Namespace : MonoMod.ModInterop Assembly : MonoMod.Utils.dll Syntax public sealed class ModExportNameAttribute : Attribute Constructors ModExportNameAttribute(String) Declaration public ModExportNameAttribute(string name) Parameters Type Name Description System.String name Fields Name Declaration public string Name Field Value Type Description System.String"
  },
  "api/MonoMod.MethodParser.html": {
    "href": "api/MonoMod.MethodParser.html",
    "title": "Class MethodParser | MonoMod",
    "keywords": "Class MethodParser Inheritance System.Object MethodParser Namespace : MonoMod Assembly : MonoMod.dll Syntax public sealed class MethodParser : MulticastDelegate Constructors MethodParser(Object, IntPtr) Declaration public MethodParser(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(MonoModder, MethodBody, Instruction, ref Int32, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(MonoModder modder, MethodBody body, Instruction instr, ref int instri, AsyncCallback callback, object object) Parameters Type Name Description MonoModder modder Mono.Cecil.Cil.MethodBody body Mono.Cecil.Cil.Instruction instr System.Int32 instri System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(ref Int32, IAsyncResult) Declaration public virtual bool EndInvoke(ref int instri, IAsyncResult result) Parameters Type Name Description System.Int32 instri System.IAsyncResult result Returns Type Description System.Boolean Invoke(MonoModder, MethodBody, Instruction, ref Int32) Declaration public virtual bool Invoke(MonoModder modder, MethodBody body, Instruction instr, ref int instri) Parameters Type Name Description MonoModder modder Mono.Cecil.Cil.MethodBody body Mono.Cecil.Cil.Instruction instr System.Int32 instri Returns Type Description System.Boolean"
  },
  "api/MonoMod.InlineRT.MonoModRulesManager.html": {
    "href": "api/MonoMod.InlineRT.MonoModRulesManager.html",
    "title": "Class MonoModRulesManager | MonoMod",
    "keywords": "Class MonoModRulesManager Inheritance System.Object MonoModRulesManager Namespace : MonoMod.InlineRT Assembly : MonoMod.dll Syntax public static class MonoModRulesManager : Object Properties Modder Declaration public static MonoModder Modder { get; } Property Value Type Description MonoModder RuleType Declaration public static Type RuleType { get; } Property Value Type Description System.Type Methods ExecuteRules(MonoModder, TypeDefinition) Declaration public static Type ExecuteRules(this MonoModder self, TypeDefinition orig) Parameters Type Name Description MonoModder self Mono.Cecil.TypeDefinition orig Returns Type Description System.Type GetId(MonoModder) Declaration public static long GetId(MonoModder self) Parameters Type Name Description MonoModder self Returns Type Description System.Int64 GetModder(String) Declaration public static MonoModder GetModder(string asmName) Parameters Type Name Description System.String asmName Returns Type Description MonoModder Register(MonoModder) Declaration public static void Register(MonoModder self) Parameters Type Name Description MonoModder self"
  },
  "api/MonoMod.DebugIL.DebugILGeneratorExt.html": {
    "href": "api/MonoMod.DebugIL.DebugILGeneratorExt.html",
    "title": "Class DebugILGeneratorExt | MonoMod",
    "keywords": "Class DebugILGeneratorExt Inheritance System.Object DebugILGeneratorExt Namespace : MonoMod.DebugIL Assembly : MonoMod.DebugIL.dll Syntax public static class DebugILGeneratorExt : Object Fields t_MetadataType Declaration public static readonly Type t_MetadataType Field Value Type Description System.Type Methods GenerateVariableName(VariableDefinition, MethodDefinition, Int32) Declaration public static string GenerateVariableName(this VariableDefinition var, MethodDefinition method = null, int i = -1) Parameters Type Name Description Mono.Cecil.Cil.VariableDefinition var Mono.Cecil.MethodDefinition method System.Int32 i Returns Type Description System.String GetOrAddScope(MethodDebugInformation) Declaration public static ScopeDebugInformation GetOrAddScope(this MethodDebugInformation mdi) Parameters Type Name Description Mono.Cecil.Cil.MethodDebugInformation mdi Returns Type Description Mono.Cecil.Cil.ScopeDebugInformation ToRelativeString(Instruction) Declaration public static string ToRelativeString(this Instruction self) Parameters Type Name Description Mono.Cecil.Cil.Instruction self Returns Type Description System.String"
  },
  "api/MonoMod.Cil.html": {
    "href": "api/MonoMod.Cil.html",
    "title": "Namespace MonoMod.Cil | MonoMod",
    "keywords": "Namespace MonoMod.Cil Classes ILContext An IL manipulation \"context\" with various helpers and direct access to the MethodBody. ILContext.Manipulator The manipulator callback, accepted by the Invoke method. ILCursor A cursor used to manipulate a method body in an ILContext. ILLabel A label to be used in ILContexts. ILPatternMatchingExt MoveType Specifies where a ILCursor should be positioned in relation to the target of a search function NopILReferenceBag The default IL reference bag. Throws NotSupportedException for every operation. RuntimeILReferenceBag An IL reference bag implementation to be used for runtime-generated methods. SearchTarget Indicates whether the position of a ILCursor is the result of a search function and if the next search should ignore the instruction preceeding or following this cursor. SearchTarget.Next is the result of searching with MoveType.Before, and SearchTarget.Prev from MoveType.After Interfaces IILReferenceBag An IL inline reference bag used for ILContexts."
  },
  "api/MonoMod.Cil.ILContext.html": {
    "href": "api/MonoMod.Cil.ILContext.html",
    "title": "Class ILContext | MonoMod",
    "keywords": "Class ILContext An IL manipulation \"context\" with various helpers and direct access to the MethodBody. Inheritance System.Object ILContext Implements System.IDisposable Namespace : MonoMod.Cil Assembly : MonoMod.Utils.dll Syntax public class ILContext : Object, IDisposable Constructors ILContext(MethodDefinition) Declaration public ILContext(MethodDefinition method) Parameters Type Name Description Mono.Cecil.MethodDefinition method Fields ReferenceBag The current reference bag. Used for methods such as EmitReference and EmitDelegate. Declaration public IILReferenceBag ReferenceBag Field Value Type Description IILReferenceBag Properties Body The manipulated method body. Declaration public MethodBody Body { get; } Property Value Type Description Mono.Cecil.Cil.MethodBody IL The manipulated method's IL processor. Declaration public ILProcessor IL { get; } Property Value Type Description Mono.Cecil.Cil.ILProcessor Instrs The manipulated method instructions. Declaration public Collection<Instruction> Instrs { get; } Property Value Type Description Mono.Collections.Generic.Collection < Mono.Cecil.Cil.Instruction > IsReadOnly Has the context been made read-only? No further method access is possible, but the context has not yet been disposed. Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Labels A readonly list of all defined labels. Declaration public ReadOnlyCollection<ILLabel> Labels { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < ILLabel > Method The manipulated method. Declaration public MethodDefinition Method { get; } Property Value Type Description Mono.Cecil.MethodDefinition Module The manipulated method's module. Declaration public ModuleDefinition Module { get; } Property Value Type Description Mono.Cecil.ModuleDefinition Methods AddReference<T>(T) Bind an arbitary object to an ILContext for static retrieval. Declaration public int AddReference<T>(T t) Parameters Type Name Description T t The object to store. Returns Type Description System.Int32 The id to use in combination with the typeparam for object retrieval. Type Parameters Name Description T The type of the object. The combination of typeparam and id provides the unique static reference. At(Instruction) Declaration public ILCursor At(Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description ILCursor At(ILLabel) Declaration public ILCursor At(ILLabel label) Parameters Type Name Description ILLabel label Returns Type Description ILCursor At(Int32) Declaration public ILCursor At(int index) Parameters Type Name Description System.Int32 index Returns Type Description ILCursor DefineLabel() Define a new label to be marked with a cursor. Declaration public ILLabel DefineLabel() Returns Type Description ILLabel A label without a target instruction. DefineLabel(Instruction) Define a new label pointing at a given instruction. Declaration public ILLabel DefineLabel(Instruction target) Parameters Type Name Description Mono.Cecil.Cil.Instruction target The instruction the label will point at. Returns Type Description ILLabel A label pointing at the given instruction. Dispose() Dispose this context, making it read-only and invoking all OnDispose event listeners. Declaration public void Dispose() GetIncomingLabels(Instruction) Obtain all labels pointing at the given instruction. Declaration public IEnumerable<ILLabel> GetIncomingLabels(Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr The instruction to get all labels for. Returns Type Description System.Collections.Generic.IEnumerable < ILLabel > All labels targeting the given instruction. Import(FieldInfo) See Mono.Cecil.ModuleDefinition.ImportReference(System.Reflection.FieldInfo) Declaration public FieldReference Import(FieldInfo field) Parameters Type Name Description System.Reflection.FieldInfo field Returns Type Description Mono.Cecil.FieldReference Import(MethodBase) See Mono.Cecil.ModuleDefinition.ImportReference(System.Reflection.MethodBase) Declaration public MethodReference Import(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Returns Type Description Mono.Cecil.MethodReference Import(Type) See Mono.Cecil.ModuleDefinition.ImportReference(System.Type) Declaration public TypeReference Import(Type type) Parameters Type Name Description System.Type type Returns Type Description Mono.Cecil.TypeReference IndexOf(Instruction) Determine the index of a given instruction. Declaration public int IndexOf(Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr The instruction to get the index of. Returns Type Description System.Int32 The instruction index, or the end of the method body if it hasn't been found. Invoke(ILContext.Manipulator) Invoke a given manipulator callback. Declaration public void Invoke(ILContext.Manipulator manip) Parameters Type Name Description ILContext.Manipulator manip The manipulator to run in this context. MakeReadOnly() Mark this ILContext as read-only and prevent this context from further accessing the originally passed method. Declaration public void MakeReadOnly() Remarks If the method is altered prior to calling MakeReadOnly or afterwards by accessing the method directly, the results are undefined. ToString() Obtain a string representation of this context (method ID and body). Declaration public override string ToString() Returns Type Description System.String A string representation of this context. Events OnDispose Events which run when the context will be disposed. Declaration public event Action OnDispose Event Type Type Description System.Action Implements System.IDisposable"
  },
  "api/MonoMod.Cil.MoveType.html": {
    "href": "api/MonoMod.Cil.MoveType.html",
    "title": "Class MoveType | MonoMod",
    "keywords": "Class MoveType Specifies where a ILCursor should be positioned in relation to the target of a search function Inheritance System.Object MoveType Namespace : MonoMod.Cil Assembly : MonoMod.Utils.dll Syntax public sealed class MoveType : Enum Fields After Move the cursor after the last instruction in the match Declaration public const MoveType After Field Value Type Description MoveType AfterLabel Equivalent to Before with cursor.MoveAfterLabels() causing emitted instructions to become the target of incoming labels Declaration public const MoveType AfterLabel Field Value Type Description MoveType Before Move the cursor before the first instruction in the match Declaration public const MoveType Before Field Value Type Description MoveType value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/MonoMod.Cil.ILLabel.html": {
    "href": "api/MonoMod.Cil.ILLabel.html",
    "title": "Class ILLabel | MonoMod",
    "keywords": "Class ILLabel A label to be used in ILContexts. Inheritance System.Object ILLabel Namespace : MonoMod.Cil Assembly : MonoMod.Utils.dll Syntax public sealed class ILLabel : Object Fields Target The target instruction this label points at. Declaration public Instruction Target Field Value Type Description Mono.Cecil.Cil.Instruction Properties Branches All instructions using this label. Declaration public IEnumerable<Instruction> Branches { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Mono.Cecil.Cil.Instruction >"
  },
  "api/MonoMod.Utils.DMDEmitDynamicMethodGenerator.html": {
    "href": "api/MonoMod.Utils.DMDEmitDynamicMethodGenerator.html",
    "title": "Class DMDEmitDynamicMethodGenerator | MonoMod",
    "keywords": "Class DMDEmitDynamicMethodGenerator Inheritance System.Object DMDGenerator < DMDEmitDynamicMethodGenerator > DMDEmitDynamicMethodGenerator Inherited Members DMDGenerator<DMDEmitDynamicMethodGenerator>.Generate(DynamicMethodDefinition, Object) Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class DMDEmitDynamicMethodGenerator : DMDGenerator<DMDEmitDynamicMethodGenerator>, _IDMDGenerator Constructors DMDEmitDynamicMethodGenerator() Declaration public DMDEmitDynamicMethodGenerator() Methods _Generate(DynamicMethodDefinition, Object) Declaration protected override MethodInfo _Generate(DynamicMethodDefinition dmd, object context) Parameters Type Name Description DynamicMethodDefinition dmd System.Object context Returns Type Description System.Reflection.MethodInfo Overrides MonoMod.Utils.DMDGenerator<MonoMod.Utils.DMDEmitDynamicMethodGenerator>._Generate(MonoMod.Utils.DynamicMethodDefinition, System.Object)"
  },
  "api/MonoMod.Utils.DMDCecilGenerator.html": {
    "href": "api/MonoMod.Utils.DMDCecilGenerator.html",
    "title": "Class DMDCecilGenerator | MonoMod",
    "keywords": "Class DMDCecilGenerator A DMDGenerator implementation using Mono.Cecil to build an in-memory assembly. Inheritance System.Object DMDGenerator < DMDCecilGenerator > DMDCecilGenerator Inherited Members DMDGenerator<DMDCecilGenerator>.Generate(DynamicMethodDefinition, Object) Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class DMDCecilGenerator : DMDGenerator<DMDCecilGenerator>, _IDMDGenerator Constructors DMDCecilGenerator() Declaration public DMDCecilGenerator() Methods _Generate(DynamicMethodDefinition, Object) Declaration protected override MethodInfo _Generate(DynamicMethodDefinition dmd, object context) Parameters Type Name Description DynamicMethodDefinition dmd System.Object context Returns Type Description System.Reflection.MethodInfo Overrides MonoMod.Utils.DMDGenerator<MonoMod.Utils.DMDCecilGenerator>._Generate(MonoMod.Utils.DynamicMethodDefinition, System.Object)"
  },
  "api/MonoMod.Utils.Cil.html": {
    "href": "api/MonoMod.Utils.Cil.html",
    "title": "Namespace MonoMod.Utils.Cil | MonoMod",
    "keywords": "Namespace MonoMod.Utils.Cil Classes CecilILGenerator A variant of ILGenerator which uses Mono.Cecil under the hood. ILGeneratorShim Abstract version of System.Reflection.Emit.ILGenerator. See System.Reflection.Emit.ILGenerator for proper documentation."
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourRuntimeNETPlatform.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourRuntimeNETPlatform.html",
    "title": "Class DetourRuntimeNETPlatform | MonoMod",
    "keywords": "Class DetourRuntimeNETPlatform Inheritance System.Object DetourRuntimeILPlatform DetourRuntimeNETPlatform Implements IDetourRuntimePlatform Inherited Members DetourRuntimeILPlatform.PinnedMethods DetourRuntimeILPlatform.GetFunctionPointer(RuntimeMethodHandle) DetourRuntimeILPlatform.PrepareMethod(RuntimeMethodHandle) DetourRuntimeILPlatform.GetNativeStart(MethodBase) DetourRuntimeILPlatform.Pin(MethodBase) DetourRuntimeILPlatform.Unpin(MethodBase) DetourRuntimeILPlatform.CreateCopy(MethodBase) DetourRuntimeILPlatform.TryCreateCopy(MethodBase, MethodInfo) DetourRuntimeILPlatform.GetDetourTarget(MethodBase, MethodBase) Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourRuntimeNETPlatform : DetourRuntimeILPlatform, IDetourRuntimePlatform Constructors DetourRuntimeNETPlatform() Declaration public DetourRuntimeNETPlatform() Methods GetMethodHandle(MethodBase) Declaration protected override RuntimeMethodHandle GetMethodHandle(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Returns Type Description System.RuntimeMethodHandle Overrides DetourRuntimeILPlatform.GetMethodHandle(MethodBase) Implements IDetourRuntimePlatform"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourRuntimeMonoPlatform.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourRuntimeMonoPlatform.html",
    "title": "Class DetourRuntimeMonoPlatform | MonoMod",
    "keywords": "Class DetourRuntimeMonoPlatform Inheritance System.Object DetourRuntimeILPlatform DetourRuntimeMonoPlatform Implements IDetourRuntimePlatform Inherited Members DetourRuntimeILPlatform.PinnedMethods DetourRuntimeILPlatform.GetFunctionPointer(RuntimeMethodHandle) DetourRuntimeILPlatform.PrepareMethod(RuntimeMethodHandle) DetourRuntimeILPlatform.GetNativeStart(MethodBase) DetourRuntimeILPlatform.Pin(MethodBase) DetourRuntimeILPlatform.Unpin(MethodBase) DetourRuntimeILPlatform.CreateCopy(MethodBase) DetourRuntimeILPlatform.TryCreateCopy(MethodBase, MethodInfo) DetourRuntimeILPlatform.GetDetourTarget(MethodBase, MethodBase) Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourRuntimeMonoPlatform : DetourRuntimeILPlatform, IDetourRuntimePlatform Constructors DetourRuntimeMonoPlatform() Declaration public DetourRuntimeMonoPlatform() Methods GetMethodHandle(MethodBase) Declaration protected override RuntimeMethodHandle GetMethodHandle(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Returns Type Description System.RuntimeMethodHandle Overrides DetourRuntimeILPlatform.GetMethodHandle(MethodBase) Implements IDetourRuntimePlatform"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourRuntimeILPlatform.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourRuntimeILPlatform.html",
    "title": "Class DetourRuntimeILPlatform | MonoMod",
    "keywords": "Class DetourRuntimeILPlatform Inheritance System.Object DetourRuntimeILPlatform DetourRuntimeMonoPlatform DetourRuntimeNETPlatform Implements IDetourRuntimePlatform Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public abstract class DetourRuntimeILPlatform : Object, IDetourRuntimePlatform Constructors DetourRuntimeILPlatform() Declaration public DetourRuntimeILPlatform() Fields PinnedMethods Declaration protected Dictionary<MethodBase, DetourRuntimeILPlatform.MethodPin> PinnedMethods Field Value Type Description System.Collections.Generic.Dictionary < System.Reflection.MethodBase , DetourRuntimeILPlatform.MethodPin > Methods CreateCopy(MethodBase) Declaration public MethodInfo CreateCopy(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Returns Type Description System.Reflection.MethodInfo GetDetourTarget(MethodBase, MethodBase) Declaration public MethodBase GetDetourTarget(MethodBase from, MethodBase to) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodBase to Returns Type Description System.Reflection.MethodBase GetFunctionPointer(RuntimeMethodHandle) Declaration protected virtual IntPtr GetFunctionPointer(RuntimeMethodHandle handle) Parameters Type Name Description System.RuntimeMethodHandle handle Returns Type Description System.IntPtr GetMethodHandle(MethodBase) Declaration protected abstract RuntimeMethodHandle GetMethodHandle(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Returns Type Description System.RuntimeMethodHandle GetNativeStart(MethodBase) Declaration public IntPtr GetNativeStart(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Returns Type Description System.IntPtr Pin(MethodBase) Declaration public void Pin(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method PrepareMethod(RuntimeMethodHandle) Declaration protected virtual void PrepareMethod(RuntimeMethodHandle handle) Parameters Type Name Description System.RuntimeMethodHandle handle TryCreateCopy(MethodBase, out MethodInfo) Declaration public bool TryCreateCopy(MethodBase method, out MethodInfo dm) Parameters Type Name Description System.Reflection.MethodBase method System.Reflection.MethodInfo dm Returns Type Description System.Boolean Unpin(MethodBase) Declaration public void Unpin(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Implements IDetourRuntimePlatform"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourRuntimeILPlatform.MethodPin.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourRuntimeILPlatform.MethodPin.html",
    "title": "Class DetourRuntimeILPlatform.MethodPin | MonoMod",
    "keywords": "Class DetourRuntimeILPlatform.MethodPin Inheritance System.Object DetourRuntimeILPlatform.MethodPin Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax protected class MethodPin : Object Constructors MethodPin() Declaration public MethodPin() Fields Count Declaration public int Count Field Value Type Description System.Int32 Handle Declaration public RuntimeMethodHandle Handle Field Value Type Description System.RuntimeMethodHandle"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourNativeMonoPosixPlatform.SysconfName.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourNativeMonoPosixPlatform.SysconfName.html",
    "title": "Class DetourNativeMonoPosixPlatform.SysconfName | MonoMod",
    "keywords": "Class DetourNativeMonoPosixPlatform.SysconfName Inheritance System.Object DetourNativeMonoPosixPlatform.SysconfName Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class SysconfName : Enum Fields _SC_2_C_BIND Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_C_BIND Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_C_DEV Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_C_DEV Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_C_VERSION Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_C_VERSION Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_CHAR_TERM Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_CHAR_TERM Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_FORT_DEV Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_FORT_DEV Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_FORT_RUN Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_FORT_RUN Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_LOCALEDEF Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_LOCALEDEF Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS_ACCOUNTING Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS_ACCOUNTING Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS_CHECKPOINT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS_CHECKPOINT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS_LOCATE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS_LOCATE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS_MESSAGE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS_MESSAGE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS_TRACK Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_PBS_TRACK Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_SW_DEV Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_SW_DEV Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_UPE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_UPE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_2_VERSION Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_2_VERSION Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_ADVISORY_INFO Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_ADVISORY_INFO Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_AIO_LISTIO_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_AIO_LISTIO_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_AIO_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_AIO_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_AIO_PRIO_DELTA_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_AIO_PRIO_DELTA_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_ARG_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_ARG_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_ASYNCHRONOUS_IO Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_ASYNCHRONOUS_IO Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_ATEXIT_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_ATEXIT_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_AVPHYS_PAGES Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_AVPHYS_PAGES Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_BARRIERS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_BARRIERS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_BASE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_BASE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_BC_BASE_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_BC_BASE_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_BC_DIM_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_BC_DIM_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_BC_SCALE_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_BC_SCALE_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_BC_STRING_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_BC_STRING_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_C_LANG_SUPPORT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_C_LANG_SUPPORT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_C_LANG_SUPPORT_R Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_C_LANG_SUPPORT_R Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_CHAR_BIT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_CHAR_BIT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_CHAR_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_CHAR_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_CHAR_MIN Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_CHAR_MIN Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_CHARCLASS_NAME_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_CHARCLASS_NAME_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_CHILD_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_CHILD_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_CLK_TCK Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_CLK_TCK Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_CLOCK_SELECTION Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_CLOCK_SELECTION Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_COLL_WEIGHTS_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_COLL_WEIGHTS_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_CPUTIME Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_CPUTIME Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_DELAYTIMER_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_DELAYTIMER_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_DEVICE_IO Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_DEVICE_IO Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_DEVICE_SPECIFIC Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_DEVICE_SPECIFIC Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_DEVICE_SPECIFIC_R Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_DEVICE_SPECIFIC_R Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_EQUIV_CLASS_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_EQUIV_CLASS_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_EXPR_NEST_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_EXPR_NEST_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_FD_MGMT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_FD_MGMT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_FIFO Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_FIFO Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_FILE_ATTRIBUTES Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_FILE_ATTRIBUTES Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_FILE_LOCKING Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_FILE_LOCKING Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_FILE_SYSTEM Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_FILE_SYSTEM Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_FSYNC Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_FSYNC Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_GETGR_R_SIZE_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_GETGR_R_SIZE_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_GETPW_R_SIZE_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_GETPW_R_SIZE_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_HOST_NAME_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_HOST_NAME_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_INT_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_INT_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_INT_MIN Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_INT_MIN Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_IOV_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_IOV_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_JOB_CONTROL Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_JOB_CONTROL Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_DCACHE_ASSOC Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_DCACHE_ASSOC Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_DCACHE_LINESIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_DCACHE_LINESIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_DCACHE_SIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_DCACHE_SIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_ICACHE_ASSOC Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_ICACHE_ASSOC Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_ICACHE_LINESIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_ICACHE_LINESIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_ICACHE_SIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL1_ICACHE_SIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL2_CACHE_ASSOC Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL2_CACHE_ASSOC Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL2_CACHE_LINESIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL2_CACHE_LINESIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL2_CACHE_SIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL2_CACHE_SIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL3_CACHE_ASSOC Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL3_CACHE_ASSOC Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL3_CACHE_LINESIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL3_CACHE_LINESIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL3_CACHE_SIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL3_CACHE_SIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL4_CACHE_ASSOC Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL4_CACHE_ASSOC Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL4_CACHE_LINESIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL4_CACHE_LINESIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL4_CACHE_SIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LEVEL4_CACHE_SIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LINE_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LINE_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LOGIN_NAME_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LOGIN_NAME_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_LONG_BIT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_LONG_BIT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_MAPPED_FILES Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_MAPPED_FILES Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_MB_LEN_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_MB_LEN_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_MEMLOCK Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_MEMLOCK Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_MEMLOCK_RANGE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_MEMLOCK_RANGE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_MEMORY_PROTECTION Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_MEMORY_PROTECTION Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_MESSAGE_PASSING Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_MESSAGE_PASSING Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_MONOTONIC_CLOCK Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_MONOTONIC_CLOCK Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_MQ_OPEN_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_MQ_OPEN_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_MQ_PRIO_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_MQ_PRIO_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_MULTI_PROCESS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_MULTI_PROCESS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NETWORKING Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NETWORKING Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NGROUPS_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NGROUPS_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NL_ARGMAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NL_ARGMAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NL_LANGMAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NL_LANGMAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NL_MSGMAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NL_MSGMAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NL_NMAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NL_NMAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NL_SETMAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NL_SETMAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NL_TEXTMAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NL_TEXTMAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NPROCESSORS_CONF Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NPROCESSORS_CONF Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NPROCESSORS_ONLN Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NPROCESSORS_ONLN Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_NZERO Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_NZERO Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_OPEN_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_OPEN_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PAGESIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PAGESIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PASS_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PASS_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PHYS_PAGES Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PHYS_PAGES Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PII Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PII Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PII_INTERNET Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PII_INTERNET Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PII_INTERNET_DGRAM Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PII_INTERNET_DGRAM Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PII_INTERNET_STREAM Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PII_INTERNET_STREAM Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PII_OSI Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PII_OSI Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PII_OSI_CLTS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PII_OSI_CLTS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PII_OSI_COTS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PII_OSI_COTS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PII_OSI_M Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PII_OSI_M Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PII_SOCKET Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PII_SOCKET Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PII_XTI Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PII_XTI Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PIPE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PIPE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_POLL Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_POLL Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PRIORITIZED_IO Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PRIORITIZED_IO Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_PRIORITY_SCHEDULING Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_PRIORITY_SCHEDULING Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_RE_DUP_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_RE_DUP_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_READER_WRITER_LOCKS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_READER_WRITER_LOCKS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_REALTIME_SIGNALS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_REALTIME_SIGNALS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_REGEX_VERSION Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_REGEX_VERSION Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_REGEXP Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_REGEXP Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_RTSIG_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_RTSIG_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SAVED_IDS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SAVED_IDS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SCHAR_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SCHAR_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SCHAR_MIN Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SCHAR_MIN Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SELECT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SELECT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SEM_NSEMS_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SEM_NSEMS_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SEM_VALUE_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SEM_VALUE_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SEMAPHORES Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SEMAPHORES Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SHARED_MEMORY_OBJECTS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SHARED_MEMORY_OBJECTS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SHELL Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SHELL Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SHRT_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SHRT_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SHRT_MIN Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SHRT_MIN Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SIGNALS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SIGNALS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SIGQUEUE_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SIGQUEUE_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SINGLE_PROCESS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SINGLE_PROCESS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SPAWN Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SPAWN Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SPIN_LOCKS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SPIN_LOCKS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SPORADIC_SERVER Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SPORADIC_SERVER Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SSIZE_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SSIZE_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_STREAM_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_STREAM_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_STREAMS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_STREAMS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SYMLOOP_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SYMLOOP_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SYNCHRONIZED_IO Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SYNCHRONIZED_IO Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SYSTEM_DATABASE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SYSTEM_DATABASE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_SYSTEM_DATABASE_R Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_SYSTEM_DATABASE_R Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_T_IOV_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_T_IOV_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_ATTR_STACKADDR Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_ATTR_STACKADDR Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_ATTR_STACKSIZE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_ATTR_STACKSIZE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_CPUTIME Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_CPUTIME Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_DESTRUCTOR_ITERATIONS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_DESTRUCTOR_ITERATIONS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_KEYS_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_KEYS_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_PRIO_INHERIT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_PRIO_INHERIT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_PRIO_PROTECT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_PRIO_PROTECT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_PRIORITY_SCHEDULING Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_PRIORITY_SCHEDULING Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_PROCESS_SHARED Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_PROCESS_SHARED Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_SAFE_FUNCTIONS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_SAFE_FUNCTIONS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_SPORADIC_SERVER Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_SPORADIC_SERVER Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_STACK_MIN Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_STACK_MIN Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_THREADS_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREAD_THREADS_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_THREADS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_THREADS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_TIMEOUTS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_TIMEOUTS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_TIMER_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_TIMER_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_TIMERS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_TIMERS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_TRACE Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_TRACE Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_TRACE_EVENT_FILTER Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_TRACE_EVENT_FILTER Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_TRACE_INHERIT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_TRACE_INHERIT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_TRACE_LOG Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_TRACE_LOG Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_TTY_NAME_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_TTY_NAME_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_TYPED_MEMORY_OBJECTS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_TYPED_MEMORY_OBJECTS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_TZNAME_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_TZNAME_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_UCHAR_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_UCHAR_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_UINT_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_UINT_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_UIO_MAXIOV Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_UIO_MAXIOV Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_ULONG_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_ULONG_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_USER_GROUPS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_USER_GROUPS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_USER_GROUPS_R Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_USER_GROUPS_R Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_USHRT_MAX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_USHRT_MAX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_V6_ILP32_OFF32 Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_V6_ILP32_OFF32 Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_V6_ILP32_OFFBIG Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_V6_ILP32_OFFBIG Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_V6_LP64_OFF64 Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_V6_LP64_OFF64 Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_V6_LPBIG_OFFBIG Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_V6_LPBIG_OFFBIG Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_VERSION Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_VERSION Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_WORD_BIT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_WORD_BIT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XBS5_ILP32_OFF32 Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XBS5_ILP32_OFF32 Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XBS5_ILP32_OFFBIG Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XBS5_ILP32_OFFBIG Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XBS5_LP64_OFF64 Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XBS5_LP64_OFF64 Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XBS5_LPBIG_OFFBIG Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XBS5_LPBIG_OFFBIG Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_CRYPT Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_CRYPT Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_ENH_I18N Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_ENH_I18N Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_LEGACY Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_LEGACY Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_REALTIME Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_REALTIME Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_REALTIME_THREADS Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_REALTIME_THREADS Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_SHM Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_SHM Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_UNIX Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_UNIX Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_VERSION Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_VERSION Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_XCU_VERSION Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_XCU_VERSION Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_XPG2 Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_XPG2 Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_XPG3 Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_XPG3 Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_XPG4 Declaration public const DetourNativeMonoPosixPlatform.SysconfName _SC_XOPEN_XPG4 Field Value Type Description DetourNativeMonoPosixPlatform.SysconfName value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourNativeMonoPosixPlatform.Errno.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourNativeMonoPosixPlatform.Errno.html",
    "title": "Class DetourNativeMonoPosixPlatform.Errno | MonoMod",
    "keywords": "Class DetourNativeMonoPosixPlatform.Errno Inheritance System.Object DetourNativeMonoPosixPlatform.Errno Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class Errno : Enum Fields E2BIG Declaration public const DetourNativeMonoPosixPlatform.Errno E2BIG Field Value Type Description DetourNativeMonoPosixPlatform.Errno EACCES Declaration public const DetourNativeMonoPosixPlatform.Errno EACCES Field Value Type Description DetourNativeMonoPosixPlatform.Errno EADDRINUSE Declaration public const DetourNativeMonoPosixPlatform.Errno EADDRINUSE Field Value Type Description DetourNativeMonoPosixPlatform.Errno EADDRNOTAVAIL Declaration public const DetourNativeMonoPosixPlatform.Errno EADDRNOTAVAIL Field Value Type Description DetourNativeMonoPosixPlatform.Errno EADV Declaration public const DetourNativeMonoPosixPlatform.Errno EADV Field Value Type Description DetourNativeMonoPosixPlatform.Errno EAFNOSUPPORT Declaration public const DetourNativeMonoPosixPlatform.Errno EAFNOSUPPORT Field Value Type Description DetourNativeMonoPosixPlatform.Errno EAGAIN Declaration public const DetourNativeMonoPosixPlatform.Errno EAGAIN Field Value Type Description DetourNativeMonoPosixPlatform.Errno EALREADY Declaration public const DetourNativeMonoPosixPlatform.Errno EALREADY Field Value Type Description DetourNativeMonoPosixPlatform.Errno EAUTH Declaration public const DetourNativeMonoPosixPlatform.Errno EAUTH Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADARCH Declaration public const DetourNativeMonoPosixPlatform.Errno EBADARCH Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADE Declaration public const DetourNativeMonoPosixPlatform.Errno EBADE Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADEXEC Declaration public const DetourNativeMonoPosixPlatform.Errno EBADEXEC Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADF Declaration public const DetourNativeMonoPosixPlatform.Errno EBADF Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADFD Declaration public const DetourNativeMonoPosixPlatform.Errno EBADFD Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADMACHO Declaration public const DetourNativeMonoPosixPlatform.Errno EBADMACHO Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADMSG Declaration public const DetourNativeMonoPosixPlatform.Errno EBADMSG Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADR Declaration public const DetourNativeMonoPosixPlatform.Errno EBADR Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADRPC Declaration public const DetourNativeMonoPosixPlatform.Errno EBADRPC Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADRQC Declaration public const DetourNativeMonoPosixPlatform.Errno EBADRQC Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBADSLT Declaration public const DetourNativeMonoPosixPlatform.Errno EBADSLT Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBFONT Declaration public const DetourNativeMonoPosixPlatform.Errno EBFONT Field Value Type Description DetourNativeMonoPosixPlatform.Errno EBUSY Declaration public const DetourNativeMonoPosixPlatform.Errno EBUSY Field Value Type Description DetourNativeMonoPosixPlatform.Errno ECANCELED Declaration public const DetourNativeMonoPosixPlatform.Errno ECANCELED Field Value Type Description DetourNativeMonoPosixPlatform.Errno ECHILD Declaration public const DetourNativeMonoPosixPlatform.Errno ECHILD Field Value Type Description DetourNativeMonoPosixPlatform.Errno ECHRNG Declaration public const DetourNativeMonoPosixPlatform.Errno ECHRNG Field Value Type Description DetourNativeMonoPosixPlatform.Errno ECOMM Declaration public const DetourNativeMonoPosixPlatform.Errno ECOMM Field Value Type Description DetourNativeMonoPosixPlatform.Errno ECONNABORTED Declaration public const DetourNativeMonoPosixPlatform.Errno ECONNABORTED Field Value Type Description DetourNativeMonoPosixPlatform.Errno ECONNREFUSED Declaration public const DetourNativeMonoPosixPlatform.Errno ECONNREFUSED Field Value Type Description DetourNativeMonoPosixPlatform.Errno ECONNRESET Declaration public const DetourNativeMonoPosixPlatform.Errno ECONNRESET Field Value Type Description DetourNativeMonoPosixPlatform.Errno EDEADLK Declaration public const DetourNativeMonoPosixPlatform.Errno EDEADLK Field Value Type Description DetourNativeMonoPosixPlatform.Errno EDEADLOCK Declaration public const DetourNativeMonoPosixPlatform.Errno EDEADLOCK Field Value Type Description DetourNativeMonoPosixPlatform.Errno EDESTADDRREQ Declaration public const DetourNativeMonoPosixPlatform.Errno EDESTADDRREQ Field Value Type Description DetourNativeMonoPosixPlatform.Errno EDEVERR Declaration public const DetourNativeMonoPosixPlatform.Errno EDEVERR Field Value Type Description DetourNativeMonoPosixPlatform.Errno EDOM Declaration public const DetourNativeMonoPosixPlatform.Errno EDOM Field Value Type Description DetourNativeMonoPosixPlatform.Errno EDOTDOT Declaration public const DetourNativeMonoPosixPlatform.Errno EDOTDOT Field Value Type Description DetourNativeMonoPosixPlatform.Errno EDQUOT Declaration public const DetourNativeMonoPosixPlatform.Errno EDQUOT Field Value Type Description DetourNativeMonoPosixPlatform.Errno EEXIST Declaration public const DetourNativeMonoPosixPlatform.Errno EEXIST Field Value Type Description DetourNativeMonoPosixPlatform.Errno EFAULT Declaration public const DetourNativeMonoPosixPlatform.Errno EFAULT Field Value Type Description DetourNativeMonoPosixPlatform.Errno EFBIG Declaration public const DetourNativeMonoPosixPlatform.Errno EFBIG Field Value Type Description DetourNativeMonoPosixPlatform.Errno EFTYPE Declaration public const DetourNativeMonoPosixPlatform.Errno EFTYPE Field Value Type Description DetourNativeMonoPosixPlatform.Errno EHOSTDOWN Declaration public const DetourNativeMonoPosixPlatform.Errno EHOSTDOWN Field Value Type Description DetourNativeMonoPosixPlatform.Errno EHOSTUNREACH Declaration public const DetourNativeMonoPosixPlatform.Errno EHOSTUNREACH Field Value Type Description DetourNativeMonoPosixPlatform.Errno EIDRM Declaration public const DetourNativeMonoPosixPlatform.Errno EIDRM Field Value Type Description DetourNativeMonoPosixPlatform.Errno EILSEQ Declaration public const DetourNativeMonoPosixPlatform.Errno EILSEQ Field Value Type Description DetourNativeMonoPosixPlatform.Errno EINPROGRESS Declaration public const DetourNativeMonoPosixPlatform.Errno EINPROGRESS Field Value Type Description DetourNativeMonoPosixPlatform.Errno EINTR Declaration public const DetourNativeMonoPosixPlatform.Errno EINTR Field Value Type Description DetourNativeMonoPosixPlatform.Errno EINVAL Declaration public const DetourNativeMonoPosixPlatform.Errno EINVAL Field Value Type Description DetourNativeMonoPosixPlatform.Errno EIO Declaration public const DetourNativeMonoPosixPlatform.Errno EIO Field Value Type Description DetourNativeMonoPosixPlatform.Errno EISCONN Declaration public const DetourNativeMonoPosixPlatform.Errno EISCONN Field Value Type Description DetourNativeMonoPosixPlatform.Errno EISDIR Declaration public const DetourNativeMonoPosixPlatform.Errno EISDIR Field Value Type Description DetourNativeMonoPosixPlatform.Errno EISNAM Declaration public const DetourNativeMonoPosixPlatform.Errno EISNAM Field Value Type Description DetourNativeMonoPosixPlatform.Errno EKEYEXPIRED Declaration public const DetourNativeMonoPosixPlatform.Errno EKEYEXPIRED Field Value Type Description DetourNativeMonoPosixPlatform.Errno EKEYREJECTED Declaration public const DetourNativeMonoPosixPlatform.Errno EKEYREJECTED Field Value Type Description DetourNativeMonoPosixPlatform.Errno EKEYREVOKED Declaration public const DetourNativeMonoPosixPlatform.Errno EKEYREVOKED Field Value Type Description DetourNativeMonoPosixPlatform.Errno EL2HLT Declaration public const DetourNativeMonoPosixPlatform.Errno EL2HLT Field Value Type Description DetourNativeMonoPosixPlatform.Errno EL2NSYNC Declaration public const DetourNativeMonoPosixPlatform.Errno EL2NSYNC Field Value Type Description DetourNativeMonoPosixPlatform.Errno EL3HLT Declaration public const DetourNativeMonoPosixPlatform.Errno EL3HLT Field Value Type Description DetourNativeMonoPosixPlatform.Errno EL3RST Declaration public const DetourNativeMonoPosixPlatform.Errno EL3RST Field Value Type Description DetourNativeMonoPosixPlatform.Errno ELIBACC Declaration public const DetourNativeMonoPosixPlatform.Errno ELIBACC Field Value Type Description DetourNativeMonoPosixPlatform.Errno ELIBBAD Declaration public const DetourNativeMonoPosixPlatform.Errno ELIBBAD Field Value Type Description DetourNativeMonoPosixPlatform.Errno ELIBEXEC Declaration public const DetourNativeMonoPosixPlatform.Errno ELIBEXEC Field Value Type Description DetourNativeMonoPosixPlatform.Errno ELIBMAX Declaration public const DetourNativeMonoPosixPlatform.Errno ELIBMAX Field Value Type Description DetourNativeMonoPosixPlatform.Errno ELIBSCN Declaration public const DetourNativeMonoPosixPlatform.Errno ELIBSCN Field Value Type Description DetourNativeMonoPosixPlatform.Errno ELNRNG Declaration public const DetourNativeMonoPosixPlatform.Errno ELNRNG Field Value Type Description DetourNativeMonoPosixPlatform.Errno ELOOP Declaration public const DetourNativeMonoPosixPlatform.Errno ELOOP Field Value Type Description DetourNativeMonoPosixPlatform.Errno EMEDIUMTYPE Declaration public const DetourNativeMonoPosixPlatform.Errno EMEDIUMTYPE Field Value Type Description DetourNativeMonoPosixPlatform.Errno EMFILE Declaration public const DetourNativeMonoPosixPlatform.Errno EMFILE Field Value Type Description DetourNativeMonoPosixPlatform.Errno EMLINK Declaration public const DetourNativeMonoPosixPlatform.Errno EMLINK Field Value Type Description DetourNativeMonoPosixPlatform.Errno EMSGSIZE Declaration public const DetourNativeMonoPosixPlatform.Errno EMSGSIZE Field Value Type Description DetourNativeMonoPosixPlatform.Errno EMULTIHOP Declaration public const DetourNativeMonoPosixPlatform.Errno EMULTIHOP Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENAMETOOLONG Declaration public const DetourNativeMonoPosixPlatform.Errno ENAMETOOLONG Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENAVAIL Declaration public const DetourNativeMonoPosixPlatform.Errno ENAVAIL Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENEEDAUTH Declaration public const DetourNativeMonoPosixPlatform.Errno ENEEDAUTH Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENETDOWN Declaration public const DetourNativeMonoPosixPlatform.Errno ENETDOWN Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENETRESET Declaration public const DetourNativeMonoPosixPlatform.Errno ENETRESET Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENETUNREACH Declaration public const DetourNativeMonoPosixPlatform.Errno ENETUNREACH Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENFILE Declaration public const DetourNativeMonoPosixPlatform.Errno ENFILE Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOANO Declaration public const DetourNativeMonoPosixPlatform.Errno ENOANO Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOATTR Declaration public const DetourNativeMonoPosixPlatform.Errno ENOATTR Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOBUFS Declaration public const DetourNativeMonoPosixPlatform.Errno ENOBUFS Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOCSI Declaration public const DetourNativeMonoPosixPlatform.Errno ENOCSI Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENODATA Declaration public const DetourNativeMonoPosixPlatform.Errno ENODATA Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENODEV Declaration public const DetourNativeMonoPosixPlatform.Errno ENODEV Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOENT Declaration public const DetourNativeMonoPosixPlatform.Errno ENOENT Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOEXEC Declaration public const DetourNativeMonoPosixPlatform.Errno ENOEXEC Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOKEY Declaration public const DetourNativeMonoPosixPlatform.Errno ENOKEY Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOLCK Declaration public const DetourNativeMonoPosixPlatform.Errno ENOLCK Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOLINK Declaration public const DetourNativeMonoPosixPlatform.Errno ENOLINK Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOMEDIUM Declaration public const DetourNativeMonoPosixPlatform.Errno ENOMEDIUM Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOMEM Declaration public const DetourNativeMonoPosixPlatform.Errno ENOMEM Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOMSG Declaration public const DetourNativeMonoPosixPlatform.Errno ENOMSG Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENONET Declaration public const DetourNativeMonoPosixPlatform.Errno ENONET Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOPKG Declaration public const DetourNativeMonoPosixPlatform.Errno ENOPKG Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOPOLICY Declaration public const DetourNativeMonoPosixPlatform.Errno ENOPOLICY Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOPROTOOPT Declaration public const DetourNativeMonoPosixPlatform.Errno ENOPROTOOPT Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOSPC Declaration public const DetourNativeMonoPosixPlatform.Errno ENOSPC Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOSR Declaration public const DetourNativeMonoPosixPlatform.Errno ENOSR Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOSTR Declaration public const DetourNativeMonoPosixPlatform.Errno ENOSTR Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOSYS Declaration public const DetourNativeMonoPosixPlatform.Errno ENOSYS Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOTBLK Declaration public const DetourNativeMonoPosixPlatform.Errno ENOTBLK Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOTCONN Declaration public const DetourNativeMonoPosixPlatform.Errno ENOTCONN Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOTDIR Declaration public const DetourNativeMonoPosixPlatform.Errno ENOTDIR Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOTEMPTY Declaration public const DetourNativeMonoPosixPlatform.Errno ENOTEMPTY Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOTNAM Declaration public const DetourNativeMonoPosixPlatform.Errno ENOTNAM Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOTRECOVERABLE Declaration public const DetourNativeMonoPosixPlatform.Errno ENOTRECOVERABLE Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOTSOCK Declaration public const DetourNativeMonoPosixPlatform.Errno ENOTSOCK Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOTTY Declaration public const DetourNativeMonoPosixPlatform.Errno ENOTTY Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENOTUNIQ Declaration public const DetourNativeMonoPosixPlatform.Errno ENOTUNIQ Field Value Type Description DetourNativeMonoPosixPlatform.Errno ENXIO Declaration public const DetourNativeMonoPosixPlatform.Errno ENXIO Field Value Type Description DetourNativeMonoPosixPlatform.Errno EOPNOTSUPP Declaration public const DetourNativeMonoPosixPlatform.Errno EOPNOTSUPP Field Value Type Description DetourNativeMonoPosixPlatform.Errno EOVERFLOW Declaration public const DetourNativeMonoPosixPlatform.Errno EOVERFLOW Field Value Type Description DetourNativeMonoPosixPlatform.Errno EOWNERDEAD Declaration public const DetourNativeMonoPosixPlatform.Errno EOWNERDEAD Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPERM Declaration public const DetourNativeMonoPosixPlatform.Errno EPERM Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPFNOSUPPORT Declaration public const DetourNativeMonoPosixPlatform.Errno EPFNOSUPPORT Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPIPE Declaration public const DetourNativeMonoPosixPlatform.Errno EPIPE Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPROCLIM Declaration public const DetourNativeMonoPosixPlatform.Errno EPROCLIM Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPROCUNAVAIL Declaration public const DetourNativeMonoPosixPlatform.Errno EPROCUNAVAIL Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPROGMISMATCH Declaration public const DetourNativeMonoPosixPlatform.Errno EPROGMISMATCH Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPROGUNAVAIL Declaration public const DetourNativeMonoPosixPlatform.Errno EPROGUNAVAIL Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPROTO Declaration public const DetourNativeMonoPosixPlatform.Errno EPROTO Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPROTONOSUPPORT Declaration public const DetourNativeMonoPosixPlatform.Errno EPROTONOSUPPORT Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPROTOTYPE Declaration public const DetourNativeMonoPosixPlatform.Errno EPROTOTYPE Field Value Type Description DetourNativeMonoPosixPlatform.Errno EPWROFF Declaration public const DetourNativeMonoPosixPlatform.Errno EPWROFF Field Value Type Description DetourNativeMonoPosixPlatform.Errno ERANGE Declaration public const DetourNativeMonoPosixPlatform.Errno ERANGE Field Value Type Description DetourNativeMonoPosixPlatform.Errno EREMCHG Declaration public const DetourNativeMonoPosixPlatform.Errno EREMCHG Field Value Type Description DetourNativeMonoPosixPlatform.Errno EREMOTE Declaration public const DetourNativeMonoPosixPlatform.Errno EREMOTE Field Value Type Description DetourNativeMonoPosixPlatform.Errno EREMOTEIO Declaration public const DetourNativeMonoPosixPlatform.Errno EREMOTEIO Field Value Type Description DetourNativeMonoPosixPlatform.Errno ERESTART Declaration public const DetourNativeMonoPosixPlatform.Errno ERESTART Field Value Type Description DetourNativeMonoPosixPlatform.Errno EROFS Declaration public const DetourNativeMonoPosixPlatform.Errno EROFS Field Value Type Description DetourNativeMonoPosixPlatform.Errno ERPCMISMATCH Declaration public const DetourNativeMonoPosixPlatform.Errno ERPCMISMATCH Field Value Type Description DetourNativeMonoPosixPlatform.Errno ESHLIBVERS Declaration public const DetourNativeMonoPosixPlatform.Errno ESHLIBVERS Field Value Type Description DetourNativeMonoPosixPlatform.Errno ESHUTDOWN Declaration public const DetourNativeMonoPosixPlatform.Errno ESHUTDOWN Field Value Type Description DetourNativeMonoPosixPlatform.Errno ESOCKTNOSUPPORT Declaration public const DetourNativeMonoPosixPlatform.Errno ESOCKTNOSUPPORT Field Value Type Description DetourNativeMonoPosixPlatform.Errno ESPIPE Declaration public const DetourNativeMonoPosixPlatform.Errno ESPIPE Field Value Type Description DetourNativeMonoPosixPlatform.Errno ESRCH Declaration public const DetourNativeMonoPosixPlatform.Errno ESRCH Field Value Type Description DetourNativeMonoPosixPlatform.Errno ESRMNT Declaration public const DetourNativeMonoPosixPlatform.Errno ESRMNT Field Value Type Description DetourNativeMonoPosixPlatform.Errno ESTALE Declaration public const DetourNativeMonoPosixPlatform.Errno ESTALE Field Value Type Description DetourNativeMonoPosixPlatform.Errno ESTRPIPE Declaration public const DetourNativeMonoPosixPlatform.Errno ESTRPIPE Field Value Type Description DetourNativeMonoPosixPlatform.Errno ETIME Declaration public const DetourNativeMonoPosixPlatform.Errno ETIME Field Value Type Description DetourNativeMonoPosixPlatform.Errno ETIMEDOUT Declaration public const DetourNativeMonoPosixPlatform.Errno ETIMEDOUT Field Value Type Description DetourNativeMonoPosixPlatform.Errno ETOOMANYREFS Declaration public const DetourNativeMonoPosixPlatform.Errno ETOOMANYREFS Field Value Type Description DetourNativeMonoPosixPlatform.Errno ETXTBSY Declaration public const DetourNativeMonoPosixPlatform.Errno ETXTBSY Field Value Type Description DetourNativeMonoPosixPlatform.Errno EUCLEAN Declaration public const DetourNativeMonoPosixPlatform.Errno EUCLEAN Field Value Type Description DetourNativeMonoPosixPlatform.Errno EUNATCH Declaration public const DetourNativeMonoPosixPlatform.Errno EUNATCH Field Value Type Description DetourNativeMonoPosixPlatform.Errno EUSERS Declaration public const DetourNativeMonoPosixPlatform.Errno EUSERS Field Value Type Description DetourNativeMonoPosixPlatform.Errno EWOULDBLOCK Declaration public const DetourNativeMonoPosixPlatform.Errno EWOULDBLOCK Field Value Type Description DetourNativeMonoPosixPlatform.Errno EXDEV Declaration public const DetourNativeMonoPosixPlatform.Errno EXDEV Field Value Type Description DetourNativeMonoPosixPlatform.Errno EXFULL Declaration public const DetourNativeMonoPosixPlatform.Errno EXFULL Field Value Type Description DetourNativeMonoPosixPlatform.Errno value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourNativeMonoPlatform.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourNativeMonoPlatform.html",
    "title": "Class DetourNativeMonoPlatform | MonoMod",
    "keywords": "Class DetourNativeMonoPlatform Inheritance System.Object DetourNativeMonoPlatform Implements IDetourNativePlatform Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourNativeMonoPlatform : Object, IDetourNativePlatform Constructors DetourNativeMonoPlatform(IDetourNativePlatform, String) Declaration public DetourNativeMonoPlatform(IDetourNativePlatform inner, string libmono) Parameters Type Name Description IDetourNativePlatform inner System.String libmono Methods Apply(NativeDetourData) Declaration public void Apply(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour Copy(IntPtr, IntPtr, Byte) Declaration public void Copy(IntPtr src, IntPtr dst, byte type) Parameters Type Name Description System.IntPtr src System.IntPtr dst System.Byte type Create(IntPtr, IntPtr, Nullable<Byte>) Declaration public NativeDetourData Create(IntPtr from, IntPtr to, Nullable<byte> type) Parameters Type Name Description System.IntPtr from System.IntPtr to System.Nullable < System.Byte > type Returns Type Description NativeDetourData FlushICache(IntPtr, UInt32) Declaration public void FlushICache(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size Free(NativeDetourData) Declaration public void Free(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour MakeExecutable(IntPtr, UInt32) Declaration public void MakeExecutable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MakeWritable(IntPtr, UInt32) Declaration public void MakeWritable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MemAlloc(UInt32) Declaration public IntPtr MemAlloc(uint size) Parameters Type Name Description System.UInt32 size Returns Type Description System.IntPtr MemFree(IntPtr) Declaration public void MemFree(IntPtr ptr) Parameters Type Name Description System.IntPtr ptr Implements IDetourNativePlatform"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourNativeLibcPlatform.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourNativeLibcPlatform.html",
    "title": "Class DetourNativeLibcPlatform | MonoMod",
    "keywords": "Class DetourNativeLibcPlatform Inheritance System.Object DetourNativeLibcPlatform Implements IDetourNativePlatform Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourNativeLibcPlatform : Object, IDetourNativePlatform Constructors DetourNativeLibcPlatform(IDetourNativePlatform) Declaration public DetourNativeLibcPlatform(IDetourNativePlatform inner) Parameters Type Name Description IDetourNativePlatform inner Methods Apply(NativeDetourData) Declaration public void Apply(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour Copy(IntPtr, IntPtr, Byte) Declaration public void Copy(IntPtr src, IntPtr dst, byte type) Parameters Type Name Description System.IntPtr src System.IntPtr dst System.Byte type Create(IntPtr, IntPtr, Nullable<Byte>) Declaration public NativeDetourData Create(IntPtr from, IntPtr to, Nullable<byte> type) Parameters Type Name Description System.IntPtr from System.IntPtr to System.Nullable < System.Byte > type Returns Type Description NativeDetourData FlushICache(IntPtr, UInt32) Declaration public void FlushICache(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size Free(NativeDetourData) Declaration public void Free(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour MakeExecutable(IntPtr, UInt32) Declaration public void MakeExecutable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MakeWritable(IntPtr, UInt32) Declaration public void MakeWritable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MemAlloc(UInt32) Declaration public IntPtr MemAlloc(uint size) Parameters Type Name Description System.UInt32 size Returns Type Description System.IntPtr MemFree(IntPtr) Declaration public void MemFree(IntPtr ptr) Parameters Type Name Description System.IntPtr ptr Implements IDetourNativePlatform"
  },
  "api/MonoMod.RuntimeDetour.NativeDetour.html": {
    "href": "api/MonoMod.RuntimeDetour.NativeDetour.html",
    "title": "Class NativeDetour | MonoMod",
    "keywords": "Class NativeDetour A \"raw\" native detour, acting as a wrapper around NativeDetourData with a few helpers. Only one NativeDetour for a method to detour from can exist at any given time. NativeDetours cannot be layered. If you don't need the trampoline generator or any of the management helpers, use DetourManager.Native directly. Unless you're writing your own detour manager or need to detour native functions, it's better to create instances of Detour instead. Inheritance System.Object NativeDetour Implements IDetour System.IDisposable Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public class NativeDetour : Object, IDetour, IDisposable Constructors NativeDetour(Delegate, Delegate) Declaration public NativeDetour(Delegate from, Delegate to) Parameters Type Name Description System.Delegate from System.Delegate to NativeDetour(Delegate, Delegate, NativeDetourConfig) Declaration public NativeDetour(Delegate from, Delegate to, NativeDetourConfig config) Parameters Type Name Description System.Delegate from System.Delegate to NativeDetourConfig config NativeDetour(Delegate, Delegate, ref NativeDetourConfig) Declaration public NativeDetour(Delegate from, Delegate to, ref NativeDetourConfig config) Parameters Type Name Description System.Delegate from System.Delegate to NativeDetourConfig config NativeDetour(Delegate, IntPtr) Declaration public NativeDetour(Delegate from, IntPtr to) Parameters Type Name Description System.Delegate from System.IntPtr to NativeDetour(Delegate, IntPtr, NativeDetourConfig) Declaration public NativeDetour(Delegate from, IntPtr to, NativeDetourConfig config) Parameters Type Name Description System.Delegate from System.IntPtr to NativeDetourConfig config NativeDetour(Delegate, IntPtr, ref NativeDetourConfig) Declaration public NativeDetour(Delegate from, IntPtr to, ref NativeDetourConfig config) Parameters Type Name Description System.Delegate from System.IntPtr to NativeDetourConfig config NativeDetour(IntPtr, Delegate) Declaration public NativeDetour(IntPtr from, Delegate to) Parameters Type Name Description System.IntPtr from System.Delegate to NativeDetour(IntPtr, Delegate, NativeDetourConfig) Declaration public NativeDetour(IntPtr from, Delegate to, NativeDetourConfig config) Parameters Type Name Description System.IntPtr from System.Delegate to NativeDetourConfig config NativeDetour(IntPtr, Delegate, ref NativeDetourConfig) Declaration public NativeDetour(IntPtr from, Delegate to, ref NativeDetourConfig config) Parameters Type Name Description System.IntPtr from System.Delegate to NativeDetourConfig config NativeDetour(IntPtr, IntPtr) Declaration public NativeDetour(IntPtr from, IntPtr to) Parameters Type Name Description System.IntPtr from System.IntPtr to NativeDetour(IntPtr, IntPtr, NativeDetourConfig) Declaration public NativeDetour(IntPtr from, IntPtr to, NativeDetourConfig config) Parameters Type Name Description System.IntPtr from System.IntPtr to NativeDetourConfig config NativeDetour(IntPtr, IntPtr, ref NativeDetourConfig) Declaration public NativeDetour(IntPtr from, IntPtr to, ref NativeDetourConfig config) Parameters Type Name Description System.IntPtr from System.IntPtr to NativeDetourConfig config NativeDetour(IntPtr, MethodBase) Declaration public NativeDetour(IntPtr from, MethodBase to) Parameters Type Name Description System.IntPtr from System.Reflection.MethodBase to NativeDetour(IntPtr, MethodBase, NativeDetourConfig) Declaration public NativeDetour(IntPtr from, MethodBase to, NativeDetourConfig config) Parameters Type Name Description System.IntPtr from System.Reflection.MethodBase to NativeDetourConfig config NativeDetour(IntPtr, MethodBase, ref NativeDetourConfig) Declaration public NativeDetour(IntPtr from, MethodBase to, ref NativeDetourConfig config) Parameters Type Name Description System.IntPtr from System.Reflection.MethodBase to NativeDetourConfig config NativeDetour(MethodBase, IntPtr) Declaration public NativeDetour(MethodBase from, IntPtr to) Parameters Type Name Description System.Reflection.MethodBase from System.IntPtr to NativeDetour(MethodBase, IntPtr, NativeDetourConfig) Declaration public NativeDetour(MethodBase from, IntPtr to, NativeDetourConfig config) Parameters Type Name Description System.Reflection.MethodBase from System.IntPtr to NativeDetourConfig config NativeDetour(MethodBase, IntPtr, ref NativeDetourConfig) Declaration public NativeDetour(MethodBase from, IntPtr to, ref NativeDetourConfig config) Parameters Type Name Description System.Reflection.MethodBase from System.IntPtr to NativeDetourConfig config NativeDetour(MethodBase, IntPtr, IntPtr) Declaration public NativeDetour(MethodBase method, IntPtr from, IntPtr to) Parameters Type Name Description System.Reflection.MethodBase method System.IntPtr from System.IntPtr to NativeDetour(MethodBase, IntPtr, IntPtr, NativeDetourConfig) Declaration public NativeDetour(MethodBase method, IntPtr from, IntPtr to, NativeDetourConfig config) Parameters Type Name Description System.Reflection.MethodBase method System.IntPtr from System.IntPtr to NativeDetourConfig config NativeDetour(MethodBase, IntPtr, IntPtr, ref NativeDetourConfig) Declaration public NativeDetour(MethodBase method, IntPtr from, IntPtr to, ref NativeDetourConfig config) Parameters Type Name Description System.Reflection.MethodBase method System.IntPtr from System.IntPtr to NativeDetourConfig config NativeDetour(MethodBase, MethodBase) Declaration public NativeDetour(MethodBase from, MethodBase to) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodBase to NativeDetour(MethodBase, MethodBase, NativeDetourConfig) Declaration public NativeDetour(MethodBase from, MethodBase to, NativeDetourConfig config) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodBase to NativeDetourConfig config NativeDetour(MethodBase, MethodBase, ref NativeDetourConfig) Declaration public NativeDetour(MethodBase from, MethodBase to, ref NativeDetourConfig config) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodBase to NativeDetourConfig config Fields Data Declaration public readonly NativeDetourData Data Field Value Type Description NativeDetourData Method Declaration public readonly MethodBase Method Field Value Type Description System.Reflection.MethodBase OnDetour Declaration public static Func<NativeDetour, MethodBase, IntPtr, IntPtr, bool> OnDetour Field Value Type Description System.Func < NativeDetour , System.Reflection.MethodBase , System.IntPtr , System.IntPtr , System.Boolean > OnGenerateTrampoline Declaration public static Func<NativeDetour, MethodBase, MethodBase> OnGenerateTrampoline Field Value Type Description System.Func < NativeDetour , System.Reflection.MethodBase , System.Reflection.MethodBase > OnUndo Declaration public static Func<NativeDetour, bool> OnUndo Field Value Type Description System.Func < NativeDetour , System.Boolean > Properties IsApplied Declaration public bool IsApplied { get; } Property Value Type Description System.Boolean IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean Methods Apply() Apply the native detour. This can be done automatically when creating an instance. Declaration public void Apply() Dispose() Undo and free this temporary detour. Declaration public void Dispose() Free() Free the detour's data without undoing it. This makes any further operations on this detour invalid. Declaration public void Free() GenerateTrampoline(MethodBase) Generate a new DynamicMethod with which you can invoke the previous state. If the NativeDetour holds a reference to a managed method, a copy of the original method is returned. If the NativeDetour holds a reference to a native function, an \"undo-call-redo\" trampoline with a matching signature is returned. Declaration public MethodBase GenerateTrampoline(MethodBase signature = null) Parameters Type Name Description System.Reflection.MethodBase signature Returns Type Description System.Reflection.MethodBase GenerateTrampoline<T>() Generate a new delegate with which you can invoke the previous state. If the NativeDetour holds a reference to a managed method, a copy of the original method is returned. If the NativeDetour holds a reference to a native function, an \"undo-call-redo\" trampoline with a matching signature is returned. Declaration public T GenerateTrampoline<T>() where T : Delegate Returns Type Description T Type Parameters Name Description T Undo() Undo the native detour without freeing the detour native data, allowing you to reapply it later. Declaration public void Undo() Implements IDetour System.IDisposable"
  },
  "api/MonoMod.RuntimeDetour.ISortableDetour.html": {
    "href": "api/MonoMod.RuntimeDetour.ISortableDetour.html",
    "title": "Interface ISortableDetour | MonoMod",
    "keywords": "Interface ISortableDetour Inherited Members IDetour.Apply() IDetour.Undo() IDetour.Free() IDetour.GenerateTrampoline(MethodBase) IDetour.GenerateTrampoline<T>() IDetour.IsValid IDetour.IsApplied Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public interface ISortableDetour : IDetour, IDisposable Properties After Declaration IEnumerable<string> After { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Before Declaration IEnumerable<string> Before { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > GlobalIndex Declaration uint GlobalIndex { get; } Property Value Type Description System.UInt32 ID Declaration string ID { get; set; } Property Value Type Description System.String Priority Declaration int Priority { get; set; } Property Value Type Description System.Int32"
  },
  "api/MonoMod.RuntimeDetour.ILHookConfig.html": {
    "href": "api/MonoMod.RuntimeDetour.ILHookConfig.html",
    "title": "Class ILHookConfig | MonoMod",
    "keywords": "Class ILHookConfig Inheritance System.Object ILHookConfig Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class ILHookConfig : ValueType Fields After Declaration public IEnumerable<string> After Field Value Type Description System.Collections.Generic.IEnumerable < System.String > Before Declaration public IEnumerable<string> Before Field Value Type Description System.Collections.Generic.IEnumerable < System.String > ID Declaration public string ID Field Value Type Description System.String ManualApply Declaration public bool ManualApply Field Value Type Description System.Boolean Priority Declaration public int Priority Field Value Type Description System.Int32"
  },
  "api/MonoMod.RuntimeDetour.ILHook.html": {
    "href": "api/MonoMod.RuntimeDetour.ILHook.html",
    "title": "Class ILHook | MonoMod",
    "keywords": "Class ILHook Inheritance System.Object ILHook Implements ISortableDetour IDetour System.IDisposable Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public class ILHook : Object, ISortableDetour, IDetour, IDisposable Constructors ILHook(MethodBase, ILContext.Manipulator) Declaration public ILHook(MethodBase from, ILContext.Manipulator manipulator) Parameters Type Name Description System.Reflection.MethodBase from ILContext.Manipulator manipulator ILHook(MethodBase, ILContext.Manipulator, ILHookConfig) Declaration public ILHook(MethodBase from, ILContext.Manipulator manipulator, ILHookConfig config) Parameters Type Name Description System.Reflection.MethodBase from ILContext.Manipulator manipulator ILHookConfig config ILHook(MethodBase, ILContext.Manipulator, ref ILHookConfig) Declaration public ILHook(MethodBase from, ILContext.Manipulator manipulator, ref ILHookConfig config) Parameters Type Name Description System.Reflection.MethodBase from ILContext.Manipulator manipulator ILHookConfig config Fields Manipulator Declaration public readonly ILContext.Manipulator Manipulator Field Value Type Description ILContext.Manipulator Method Declaration public readonly MethodBase Method Field Value Type Description System.Reflection.MethodBase OnDetour Declaration public static Func<ILHook, MethodBase, ILContext.Manipulator, bool> OnDetour Field Value Type Description System.Func < ILHook , System.Reflection.MethodBase , ILContext.Manipulator , System.Boolean > OnUndo Declaration public static Func<ILHook, bool> OnUndo Field Value Type Description System.Func < ILHook , System.Boolean > Properties After Declaration public IEnumerable<string> After { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Before Declaration public IEnumerable<string> Before { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > GlobalIndex Declaration public uint GlobalIndex { get; } Property Value Type Description System.UInt32 ID Declaration public string ID { get; set; } Property Value Type Description System.String Index Declaration public int Index { get; } Property Value Type Description System.Int32 IsApplied Declaration public bool IsApplied { get; } Property Value Type Description System.Boolean IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean MaxIndex Declaration public int MaxIndex { get; } Property Value Type Description System.Int32 Priority Declaration public int Priority { get; set; } Property Value Type Description System.Int32 Methods Apply() Declaration public void Apply() Dispose() Declaration public void Dispose() Free() Declaration public void Free() GenerateTrampoline(MethodBase) Declaration public MethodBase GenerateTrampoline(MethodBase signature = null) Parameters Type Name Description System.Reflection.MethodBase signature Returns Type Description System.Reflection.MethodBase GenerateTrampoline<T>() Declaration public T GenerateTrampoline<T>() where T : Delegate Returns Type Description T Type Parameters Name Description T Undo() Declaration public void Undo() Implements ISortableDetour IDetour System.IDisposable"
  },
  "api/MonoMod.RuntimeDetour.HookGen.HookGenerator.html": {
    "href": "api/MonoMod.RuntimeDetour.HookGen.HookGenerator.html",
    "title": "Class HookGenerator | MonoMod",
    "keywords": "Class HookGenerator Inheritance System.Object HookGenerator Namespace : MonoMod.RuntimeDetour.HookGen Assembly : MonoMod.RuntimeDetour.HookGen.dll Syntax public class HookGenerator : Object Constructors HookGenerator(MonoModder, String) Declaration public HookGenerator(MonoModder modder, string name) Parameters Type Name Description MonoModder modder System.String name Fields HookExtName Declaration public string HookExtName Field Value Type Description System.String HookOrig Declaration public bool HookOrig Field Value Type Description System.Boolean HookPrivate Declaration public bool HookPrivate Field Value Type Description System.Boolean m_Add Declaration public MethodReference m_Add Field Value Type Description Mono.Cecil.MethodReference m_EditorBrowsableAttribute_ctor Declaration public MethodReference m_EditorBrowsableAttribute_ctor Field Value Type Description Mono.Cecil.MethodReference m_GetMethodFromHandle Declaration public MethodReference m_GetMethodFromHandle Field Value Type Description Mono.Cecil.MethodReference m_Modify Declaration public MethodReference m_Modify Field Value Type Description Mono.Cecil.MethodReference m_Object_ctor Declaration public MethodReference m_Object_ctor Field Value Type Description Mono.Cecil.MethodReference m_ObsoleteAttribute_ctor Declaration public MethodReference m_ObsoleteAttribute_ctor Field Value Type Description Mono.Cecil.MethodReference m_Remove Declaration public MethodReference m_Remove Field Value Type Description Mono.Cecil.MethodReference m_Unmodify Declaration public MethodReference m_Unmodify Field Value Type Description Mono.Cecil.MethodReference Modder Declaration public MonoModder Modder Field Value Type Description MonoModder module_RuntimeDetour Declaration public ModuleDefinition module_RuntimeDetour Field Value Type Description Mono.Cecil.ModuleDefinition module_Utils Declaration public ModuleDefinition module_Utils Field Value Type Description Mono.Cecil.ModuleDefinition Namespace Declaration public string Namespace Field Value Type Description System.String NamespaceIL Declaration public string NamespaceIL Field Value Type Description System.String OutputModule Declaration public ModuleDefinition OutputModule Field Value Type Description Mono.Cecil.ModuleDefinition t_AsyncCallback Declaration public TypeReference t_AsyncCallback Field Value Type Description Mono.Cecil.TypeReference t_EditorBrowsableState Declaration public TypeReference t_EditorBrowsableState Field Value Type Description Mono.Cecil.TypeReference t_IAsyncResult Declaration public TypeReference t_IAsyncResult Field Value Type Description Mono.Cecil.TypeReference t_ILManipulator Declaration public TypeReference t_ILManipulator Field Value Type Description Mono.Cecil.TypeReference t_MethodBase Declaration public TypeReference t_MethodBase Field Value Type Description Mono.Cecil.TypeReference t_MulticastDelegate Declaration public TypeReference t_MulticastDelegate Field Value Type Description Mono.Cecil.TypeReference t_RuntimeMethodHandle Declaration public TypeReference t_RuntimeMethodHandle Field Value Type Description Mono.Cecil.TypeReference Methods Generate() Declaration public void Generate() GenerateDelegateFor(MethodDefinition) Declaration public TypeDefinition GenerateDelegateFor(MethodDefinition method) Parameters Type Name Description Mono.Cecil.MethodDefinition method Returns Type Description Mono.Cecil.TypeDefinition GenerateFor(TypeDefinition, TypeDefinition, MethodDefinition) Declaration public bool GenerateFor(TypeDefinition hookType, TypeDefinition hookILType, MethodDefinition method) Parameters Type Name Description Mono.Cecil.TypeDefinition hookType Mono.Cecil.TypeDefinition hookILType Mono.Cecil.MethodDefinition method Returns Type Description System.Boolean GenerateFor(TypeDefinition, out TypeDefinition, out TypeDefinition) Declaration public void GenerateFor(TypeDefinition type, out TypeDefinition hookType, out TypeDefinition hookILType) Parameters Type Name Description Mono.Cecil.TypeDefinition type Mono.Cecil.TypeDefinition hookType Mono.Cecil.TypeDefinition hookILType"
  },
  "api/MonoMod.RuntimeDetour.HookGen.HookEndpointManager.html": {
    "href": "api/MonoMod.RuntimeDetour.HookGen.HookEndpointManager.html",
    "title": "Class HookEndpointManager | MonoMod",
    "keywords": "Class HookEndpointManager Inheritance System.Object HookEndpointManager Namespace : MonoMod.RuntimeDetour.HookGen Assembly : MonoMod.RuntimeDetour.dll Syntax public static class HookEndpointManager : Object Methods Add(MethodBase, Delegate) Declaration public static void Add(MethodBase method, Delegate hookDelegate) Parameters Type Name Description System.Reflection.MethodBase method System.Delegate hookDelegate Add<T>(MethodBase, Delegate) Declaration public static void Add<T>(MethodBase method, Delegate hookDelegate) where T : Delegate Parameters Type Name Description System.Reflection.MethodBase method System.Delegate hookDelegate Type Parameters Name Description T GetOwner(Delegate) Declaration public static object GetOwner(Delegate hook) Parameters Type Name Description System.Delegate hook Returns Type Description System.Object Modify(MethodBase, Delegate) Declaration public static void Modify(MethodBase method, Delegate callback) Parameters Type Name Description System.Reflection.MethodBase method System.Delegate callback Modify<T>(MethodBase, Delegate) Declaration public static void Modify<T>(MethodBase method, Delegate callback) where T : Delegate Parameters Type Name Description System.Reflection.MethodBase method System.Delegate callback Type Parameters Name Description T Remove(MethodBase, Delegate) Declaration public static void Remove(MethodBase method, Delegate hookDelegate) Parameters Type Name Description System.Reflection.MethodBase method System.Delegate hookDelegate Remove<T>(MethodBase, Delegate) Declaration public static void Remove<T>(MethodBase method, Delegate hookDelegate) where T : Delegate Parameters Type Name Description System.Reflection.MethodBase method System.Delegate hookDelegate Type Parameters Name Description T RemoveAllOwnedBy(Object) Declaration public static void RemoveAllOwnedBy(object owner) Parameters Type Name Description System.Object owner Unmodify(MethodBase, Delegate) Declaration public static void Unmodify(MethodBase method, Delegate callback) Parameters Type Name Description System.Reflection.MethodBase method System.Delegate callback Unmodify<T>(MethodBase, Delegate) Declaration public static void Unmodify<T>(MethodBase method, Delegate callback) Parameters Type Name Description System.Reflection.MethodBase method System.Delegate callback Type Parameters Name Description T Events OnAdd Declaration public static event Func<MethodBase, Delegate, bool> OnAdd Event Type Type Description System.Func < System.Reflection.MethodBase , System.Delegate , System.Boolean > OnGetOwner Declaration public static event Func<Delegate, object> OnGetOwner Event Type Type Description System.Func < System.Delegate , System.Object > OnModify Declaration public static event Func<MethodBase, Delegate, bool> OnModify Event Type Type Description System.Func < System.Reflection.MethodBase , System.Delegate , System.Boolean > OnRemove Declaration public static event Func<MethodBase, Delegate, bool> OnRemove Event Type Type Description System.Func < System.Reflection.MethodBase , System.Delegate , System.Boolean > OnRemoveAllOwnedBy Declaration public static event Func<object, bool> OnRemoveAllOwnedBy Event Type Type Description System.Func < System.Object , System.Boolean > OnUnmodify Declaration public static event Func<MethodBase, Delegate, bool> OnUnmodify Event Type Type Description System.Func < System.Reflection.MethodBase , System.Delegate , System.Boolean >"
  },
  "api/MonoMod.RuntimeDetour.HookConfig.html": {
    "href": "api/MonoMod.RuntimeDetour.HookConfig.html",
    "title": "Class HookConfig | MonoMod",
    "keywords": "Class HookConfig Inheritance System.Object HookConfig Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class HookConfig : ValueType Fields After Declaration public IEnumerable<string> After Field Value Type Description System.Collections.Generic.IEnumerable < System.String > Before Declaration public IEnumerable<string> Before Field Value Type Description System.Collections.Generic.IEnumerable < System.String > ID Declaration public string ID Field Value Type Description System.String ManualApply Declaration public bool ManualApply Field Value Type Description System.Boolean Priority Declaration public int Priority Field Value Type Description System.Int32"
  },
  "api/MonoMod.RuntimeDetour.Hook.html": {
    "href": "api/MonoMod.RuntimeDetour.Hook.html",
    "title": "Class Hook | MonoMod",
    "keywords": "Class Hook Inheritance System.Object Hook Hook<T> Hook<TFrom, TTo> Implements IDetour System.IDisposable Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public class Hook : Object, IDetour, IDisposable Constructors Hook(Delegate, Delegate) Declaration public Hook(Delegate from, Delegate to) Parameters Type Name Description System.Delegate from System.Delegate to Hook(Delegate, Delegate, HookConfig) Declaration public Hook(Delegate from, Delegate to, HookConfig config) Parameters Type Name Description System.Delegate from System.Delegate to HookConfig config Hook(Delegate, Delegate, ref HookConfig) Declaration public Hook(Delegate from, Delegate to, ref HookConfig config) Parameters Type Name Description System.Delegate from System.Delegate to HookConfig config Hook(Delegate, IntPtr) Declaration public Hook(Delegate from, IntPtr to) Parameters Type Name Description System.Delegate from System.IntPtr to Hook(Delegate, IntPtr, HookConfig) Declaration public Hook(Delegate from, IntPtr to, HookConfig config) Parameters Type Name Description System.Delegate from System.IntPtr to HookConfig config Hook(Delegate, IntPtr, ref HookConfig) Declaration public Hook(Delegate from, IntPtr to, ref HookConfig config) Parameters Type Name Description System.Delegate from System.IntPtr to HookConfig config Hook(Expression, Delegate) Declaration public Hook(Expression from, Delegate to) Parameters Type Name Description System.Linq.Expressions.Expression from System.Delegate to Hook(Expression, Delegate, HookConfig) Declaration public Hook(Expression from, Delegate to, HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression from System.Delegate to HookConfig config Hook(Expression, Delegate, ref HookConfig) Declaration public Hook(Expression from, Delegate to, ref HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression from System.Delegate to HookConfig config Hook(Expression, IntPtr) Declaration public Hook(Expression from, IntPtr to) Parameters Type Name Description System.Linq.Expressions.Expression from System.IntPtr to Hook(Expression, IntPtr, HookConfig) Declaration public Hook(Expression from, IntPtr to, HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression from System.IntPtr to HookConfig config Hook(Expression, IntPtr, ref HookConfig) Declaration public Hook(Expression from, IntPtr to, ref HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression from System.IntPtr to HookConfig config Hook(Expression<Action>, Delegate) Declaration public Hook(Expression<Action> from, Delegate to) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.Delegate to Hook(Expression<Action>, Delegate, HookConfig) Declaration public Hook(Expression<Action> from, Delegate to, HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.Delegate to HookConfig config Hook(Expression<Action>, Delegate, ref HookConfig) Declaration public Hook(Expression<Action> from, Delegate to, ref HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.Delegate to HookConfig config Hook(Expression<Action>, IntPtr) Declaration public Hook(Expression<Action> from, IntPtr to) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.IntPtr to Hook(Expression<Action>, IntPtr, HookConfig) Declaration public Hook(Expression<Action> from, IntPtr to, HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.IntPtr to HookConfig config Hook(Expression<Action>, IntPtr, ref HookConfig) Declaration public Hook(Expression<Action> from, IntPtr to, ref HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.IntPtr to HookConfig config Hook(MethodBase, Delegate) Declaration public Hook(MethodBase method, Delegate to) Parameters Type Name Description System.Reflection.MethodBase method System.Delegate to Hook(MethodBase, Delegate, HookConfig) Declaration public Hook(MethodBase method, Delegate to, HookConfig config) Parameters Type Name Description System.Reflection.MethodBase method System.Delegate to HookConfig config Hook(MethodBase, Delegate, ref HookConfig) Declaration public Hook(MethodBase method, Delegate to, ref HookConfig config) Parameters Type Name Description System.Reflection.MethodBase method System.Delegate to HookConfig config Hook(MethodBase, IntPtr) Declaration public Hook(MethodBase method, IntPtr to) Parameters Type Name Description System.Reflection.MethodBase method System.IntPtr to Hook(MethodBase, IntPtr, HookConfig) Declaration public Hook(MethodBase method, IntPtr to, HookConfig config) Parameters Type Name Description System.Reflection.MethodBase method System.IntPtr to HookConfig config Hook(MethodBase, IntPtr, ref HookConfig) Declaration public Hook(MethodBase method, IntPtr to, ref HookConfig config) Parameters Type Name Description System.Reflection.MethodBase method System.IntPtr to HookConfig config Hook(MethodBase, MethodInfo) Declaration public Hook(MethodBase from, MethodInfo to) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodInfo to Hook(MethodBase, MethodInfo, HookConfig) Declaration public Hook(MethodBase from, MethodInfo to, HookConfig config) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodInfo to HookConfig config Hook(MethodBase, MethodInfo, ref HookConfig) Declaration public Hook(MethodBase from, MethodInfo to, ref HookConfig config) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodInfo to HookConfig config Hook(MethodBase, MethodInfo, Object) Declaration public Hook(MethodBase from, MethodInfo to, object target) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodInfo to System.Object target Hook(MethodBase, MethodInfo, Object, HookConfig) Declaration public Hook(MethodBase from, MethodInfo to, object target, HookConfig config) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodInfo to System.Object target HookConfig config Hook(MethodBase, MethodInfo, Object, ref HookConfig) Declaration public Hook(MethodBase from, MethodInfo to, object target, ref HookConfig config) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodInfo to System.Object target HookConfig config Fields DelegateTarget Declaration public readonly object DelegateTarget Field Value Type Description System.Object Method Declaration public readonly MethodBase Method Field Value Type Description System.Reflection.MethodBase OnDetour Declaration public static Func<Hook, MethodBase, MethodBase, object, bool> OnDetour Field Value Type Description System.Func < Hook , System.Reflection.MethodBase , System.Reflection.MethodBase , System.Object , System.Boolean > OnGenerateTrampoline Declaration public static Func<Hook, MethodBase, MethodBase> OnGenerateTrampoline Field Value Type Description System.Func < Hook , System.Reflection.MethodBase , System.Reflection.MethodBase > OnUndo Declaration public static Func<Hook, bool> OnUndo Field Value Type Description System.Func < Hook , System.Boolean > Target Declaration public readonly MethodBase Target Field Value Type Description System.Reflection.MethodBase TargetReal Declaration public readonly MethodBase TargetReal Field Value Type Description System.Reflection.MethodBase Properties Detour Declaration public Detour Detour { get; } Property Value Type Description Detour IsApplied Declaration public bool IsApplied { get; } Property Value Type Description System.Boolean IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean Methods Apply() Declaration public void Apply() Dispose() Declaration public void Dispose() Free() Declaration public void Free() GenerateTrampoline(MethodBase) Declaration public MethodBase GenerateTrampoline(MethodBase signature = null) Parameters Type Name Description System.Reflection.MethodBase signature Returns Type Description System.Reflection.MethodBase GenerateTrampoline<T>() Generate a new DynamicMethod with which you can invoke the previous state. Declaration public T GenerateTrampoline<T>() where T : Delegate Returns Type Description T Type Parameters Name Description T Undo() Declaration public void Undo() Implements IDetour System.IDisposable"
  },
  "api/MonoMod.RuntimeDetour.DetourModManager.html": {
    "href": "api/MonoMod.RuntimeDetour.DetourModManager.html",
    "title": "Class DetourModManager | MonoMod",
    "keywords": "Class DetourModManager Inheritance System.Object DetourModManager Implements System.IDisposable Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourModManager : Object, IDisposable Constructors DetourModManager() Declaration public DetourModManager() Fields Ignored Declaration public HashSet<Assembly> Ignored Field Value Type Description System.Collections.Generic.HashSet < System.Reflection.Assembly > Methods Dispose() Declaration public void Dispose() Unload(Assembly) Declaration public void Unload(Assembly asm) Parameters Type Name Description System.Reflection.Assembly asm Events OnDetour Declaration public event Action<Assembly, MethodBase, MethodBase> OnDetour Event Type Type Description System.Action < System.Reflection.Assembly , System.Reflection.MethodBase , System.Reflection.MethodBase > OnHook Declaration public event Action<Assembly, MethodBase, MethodBase, object> OnHook Event Type Type Description System.Action < System.Reflection.Assembly , System.Reflection.MethodBase , System.Reflection.MethodBase , System.Object > OnILHook Declaration public event Action<Assembly, MethodBase, ILContext.Manipulator> OnILHook Event Type Type Description System.Action < System.Reflection.Assembly , System.Reflection.MethodBase , ILContext.Manipulator > OnNativeDetour Declaration public event Action<Assembly, MethodBase, IntPtr, IntPtr> OnNativeDetour Event Type Type Description System.Action < System.Reflection.Assembly , System.Reflection.MethodBase , System.IntPtr , System.IntPtr > Implements System.IDisposable"
  },
  "api/MonoMod.RuntimeDetour.DetourHelper.html": {
    "href": "api/MonoMod.RuntimeDetour.DetourHelper.html",
    "title": "Class DetourHelper | MonoMod",
    "keywords": "Class DetourHelper Inheritance System.Object DetourHelper Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public static class DetourHelper : Object Properties Native Declaration public static IDetourNativePlatform Native { get; set; } Property Value Type Description IDetourNativePlatform Runtime Declaration public static IDetourRuntimePlatform Runtime { get; set; } Property Value Type Description IDetourRuntimePlatform Methods CreateILCopy(MethodBase) Declaration public static MethodInfo CreateILCopy(this MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Returns Type Description System.Reflection.MethodInfo EmitDetourApply(ILProcessor, NativeDetourData) Emit a call to DetourManager.Native.Apply using a copy of the given data. Declaration public static void EmitDetourApply(this ILProcessor il, NativeDetourData data) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il NativeDetourData data EmitDetourCopy(ILProcessor, IntPtr, IntPtr, Byte) Emit a call to DetourManager.Native.Copy using the given parameters. Declaration public static void EmitDetourCopy(this ILProcessor il, IntPtr src, IntPtr dst, byte type) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il System.IntPtr src System.IntPtr dst System.Byte type FlushICache(IDetourNativePlatform, NativeDetourData) Declaration public static void FlushICache(this IDetourNativePlatform plat, NativeDetourData detour) Parameters Type Name Description IDetourNativePlatform plat NativeDetourData detour GenerateNativeProxy(IntPtr, MethodBase) Generate a DynamicMethod to easily call the given native function from another DynamicMethod. Declaration public static MethodInfo GenerateNativeProxy(IntPtr target, MethodBase signature) Parameters Type Name Description System.IntPtr target The pointer to the native function to call. System.Reflection.MethodBase signature A MethodBase with the target function's signature. Returns Type Description System.Reflection.MethodInfo The detoured DynamicMethod. GetNativeStart(Delegate) Declaration public static IntPtr GetNativeStart(this Delegate method) Parameters Type Name Description System.Delegate method Returns Type Description System.IntPtr GetNativeStart(Expression) Declaration public static IntPtr GetNativeStart(this Expression method) Parameters Type Name Description System.Linq.Expressions.Expression method Returns Type Description System.IntPtr GetNativeStart(MethodBase) Declaration public static IntPtr GetNativeStart(this MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Returns Type Description System.IntPtr MakeExecutable(IDetourNativePlatform, NativeDetourData) Declaration public static void MakeExecutable(this IDetourNativePlatform plat, NativeDetourData detour) Parameters Type Name Description IDetourNativePlatform plat NativeDetourData detour MakeWritable(IDetourNativePlatform, NativeDetourData) Declaration public static void MakeWritable(this IDetourNativePlatform plat, NativeDetourData detour) Parameters Type Name Description IDetourNativePlatform plat NativeDetourData detour Pin<T>(T) Declaration public static T Pin<T>(this T method) where T : MethodBase Parameters Type Name Description T method Returns Type Description T Type Parameters Name Description T StubCriticalDetour(DynamicMethodDefinition) Fill the DynamicMethodDefinition with a throw. Declaration public static DynamicMethodDefinition StubCriticalDetour(this DynamicMethodDefinition dm) Parameters Type Name Description DynamicMethodDefinition dm Returns Type Description DynamicMethodDefinition TryCreateILCopy(MethodBase, out MethodInfo) Declaration public static bool TryCreateILCopy(this MethodBase method, out MethodInfo dm) Parameters Type Name Description System.Reflection.MethodBase method System.Reflection.MethodInfo dm Returns Type Description System.Boolean Unpin<T>(T) Declaration public static T Unpin<T>(this T method) where T : MethodBase Parameters Type Name Description T method Returns Type Description T Type Parameters Name Description T Write(IntPtr, ref Int32, Byte) Write the given value at the address to + offs, afterwards advancing offs by sizeof(byte). Declaration public static void Write(this IntPtr to, ref int offs, byte value) Parameters Type Name Description System.IntPtr to System.Int32 offs System.Byte value Write(IntPtr, ref Int32, UInt16) Write the given value at the address to + offs, afterwards advancing offs by sizeof(ushort). Declaration public static void Write(this IntPtr to, ref int offs, ushort value) Parameters Type Name Description System.IntPtr to System.Int32 offs System.UInt16 value Write(IntPtr, ref Int32, UInt32) Write the given value at the address to + offs, afterwards advancing offs by sizeof(ushort). Declaration public static void Write(this IntPtr to, ref int offs, uint value) Parameters Type Name Description System.IntPtr to System.Int32 offs System.UInt32 value Write(IntPtr, ref Int32, UInt64) Write the given value at the address to + offs, afterwards advancing offs by sizeof(ulong). Declaration public static void Write(this IntPtr to, ref int offs, ulong value) Parameters Type Name Description System.IntPtr to System.Int32 offs System.UInt64 value"
  },
  "api/MonoMod.RuntimeDetour.DetourContext.html": {
    "href": "api/MonoMod.RuntimeDetour.DetourContext.html",
    "title": "Class DetourContext | MonoMod",
    "keywords": "Class DetourContext Inheritance System.Object DetourContext Implements System.IDisposable Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourContext : Object, IDisposable Constructors DetourContext() Declaration public DetourContext() DetourContext(Int32) Declaration public DetourContext(int priority) Parameters Type Name Description System.Int32 priority DetourContext(Int32, String) Declaration public DetourContext(int priority, string id) Parameters Type Name Description System.Int32 priority System.String id DetourContext(String) Declaration public DetourContext(string id) Parameters Type Name Description System.String id Fields After Declaration public List<string> After Field Value Type Description System.Collections.Generic.List < System.String > Before Declaration public List<string> Before Field Value Type Description System.Collections.Generic.List < System.String > Priority Declaration public int Priority Field Value Type Description System.Int32 Properties DetourConfig Declaration public DetourConfig DetourConfig { get; } Property Value Type Description DetourConfig HookConfig Declaration public HookConfig HookConfig { get; } Property Value Type Description HookConfig ID Declaration public string ID { get; set; } Property Value Type Description System.String ILHookConfig Declaration public ILHookConfig ILHookConfig { get; } Property Value Type Description ILHookConfig Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/MonoMod.RuntimeDetour.DetourConfig.html": {
    "href": "api/MonoMod.RuntimeDetour.DetourConfig.html",
    "title": "Class DetourConfig | MonoMod",
    "keywords": "Class DetourConfig Inheritance System.Object DetourConfig Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourConfig : ValueType Fields After Declaration public IEnumerable<string> After Field Value Type Description System.Collections.Generic.IEnumerable < System.String > Before Declaration public IEnumerable<string> Before Field Value Type Description System.Collections.Generic.IEnumerable < System.String > ID Declaration public string ID Field Value Type Description System.String ManualApply Declaration public bool ManualApply Field Value Type Description System.Boolean Priority Declaration public int Priority Field Value Type Description System.Int32"
  },
  "api/MonoMod.MonoModTargetModule.html": {
    "href": "api/MonoMod.MonoModTargetModule.html",
    "title": "Class MonoModTargetModule | MonoMod",
    "keywords": "Class MonoModTargetModule MonoMod target module attribute. Apply it onto a type and it will only be patched in the target module. Important: This attribute acts as a filter. It doesn't affect any other module than the input module. For example, one can define the target assembly version using MonoModTargetModule, or use the same MonoMod mod on multiple differing input assemblies. Inheritance System.Object MonoModTargetModule Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModTargetModule : Attribute Constructors MonoModTargetModule(String) Declaration public MonoModTargetModule(string name) Parameters Type Name Description System.String name"
  },
  "api/MonoMod.MonoModReplace.html": {
    "href": "api/MonoMod.MonoModReplace.html",
    "title": "Class MonoModReplace | MonoMod",
    "keywords": "Class MonoModReplace MonoMod replace attribute. Apply it onto a method and no orig_ method will be generated by MonoMod. Apply it onto a field and its attributes and field type will be replaced. Apply it onto a property and it will be removed first, as if you're just adding your own. Apply it onto a type and the original type will be removed first. Inheritance System.Object MonoModReplace Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModReplace : Attribute Constructors MonoModReplace() Declaration public MonoModReplace()"
  },
  "api/MonoMod.MonoModRemove.html": {
    "href": "api/MonoMod.MonoModRemove.html",
    "title": "Class MonoModRemove | MonoMod",
    "keywords": "Class MonoModRemove MonoMod remove attribute. Apply it onto a field / method / type and it will be removed by MonoMod. Inheritance System.Object MonoModRemove Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModRemove : Attribute Constructors MonoModRemove() Declaration public MonoModRemove()"
  },
  "api/MonoMod.MonoModPublic.html": {
    "href": "api/MonoMod.MonoModPublic.html",
    "title": "Class MonoModPublic | MonoMod",
    "keywords": "Class MonoModPublic MonoMod ignore attribute. Apply it onto a method / field / property / type and it will be made public by MonoMod. Inheritance System.Object MonoModPublic Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModPublic : Attribute Constructors MonoModPublic() Declaration public MonoModPublic()"
  },
  "api/MonoMod.MonoModOriginal.html": {
    "href": "api/MonoMod.MonoModOriginal.html",
    "title": "Class MonoModOriginal | MonoMod",
    "keywords": "Class MonoModOriginal MonoMod original method attribute. Will be applied by MonoMod automatically on original methods. Use this (or MonoModIgnore) manually to mark non-\"orig_\" originals! Inheritance System.Object MonoModOriginal Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModOriginal : Attribute Constructors MonoModOriginal() Declaration public MonoModOriginal()"
  },
  "api/MonoMod.MonoModOnPlatform.html": {
    "href": "api/MonoMod.MonoModOnPlatform.html",
    "title": "Class MonoModOnPlatform | MonoMod",
    "keywords": "Class MonoModOnPlatform MonoMod on platform (\"#ifdef PLATFORM\") attribute. Apply it onto a type / method / field and it gets ignored on non-matching platforms. Inheritance System.Object MonoModOnPlatform Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModOnPlatform : Attribute Constructors MonoModOnPlatform(Platform[]) Declaration public MonoModOnPlatform(params Platform[] p) Parameters Type Name Description Platform [] p"
  },
  "api/MonoMod.MonoModLinkFrom.html": {
    "href": "api/MonoMod.MonoModLinkFrom.html",
    "title": "Class MonoModLinkFrom | MonoMod",
    "keywords": "Class MonoModLinkFrom MonoMod \"static hook\" attribute. Apply it onto a type / method / field and calls to the item it hooks will be relinked to the item the attribute gets applied to. Inheritance System.Object MonoModLinkFrom Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModLinkFrom : Attribute Constructors MonoModLinkFrom(String) Declaration public MonoModLinkFrom(string findableID) Parameters Type Name Description System.String findableID MonoModLinkFrom(Type) Declaration public MonoModLinkFrom(Type type) Parameters Type Name Description System.Type type Fields FindableID Declaration public string FindableID Field Value Type Description System.String Type Declaration public Type Type Field Value Type Description System.Type"
  },
  "api/MonoMod.MonoModIgnore.html": {
    "href": "api/MonoMod.MonoModIgnore.html",
    "title": "Class MonoModIgnore | MonoMod",
    "keywords": "Class MonoModIgnore MonoMod ignore attribute. Apply it onto a method / type and it (except its MonoMod custom attributes) will be ignored by MonoMod. Inheritance System.Object MonoModIgnore Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModIgnore : Attribute Constructors MonoModIgnore() Declaration public MonoModIgnore()"
  },
  "api/MonoMod.MonoModForceCallvirt.html": {
    "href": "api/MonoMod.MonoModForceCallvirt.html",
    "title": "Class MonoModForceCallvirt | MonoMod",
    "keywords": "Class MonoModForceCallvirt MonoMod force callvirt attribute. Apply it onto a method and all calls to it will be forcibly replaced with the callvirt instruction. Inheritance System.Object MonoModForceCallvirt Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModForceCallvirt : Attribute Constructors MonoModForceCallvirt() Declaration public MonoModForceCallvirt()"
  },
  "api/MonoMod.MonoModForceCall.html": {
    "href": "api/MonoMod.MonoModForceCall.html",
    "title": "Class MonoModForceCall | MonoMod",
    "keywords": "Class MonoModForceCall MonoMod force call attribute. Apply it onto a method and all calls to it will be forcibly replaced with the call instruction. Inheritance System.Object MonoModForceCall Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModForceCall : Attribute Constructors MonoModForceCall() Declaration public MonoModForceCall()"
  },
  "api/MonoMod.MonoModCustomMethodAttributeAttribute.html": {
    "href": "api/MonoMod.MonoModCustomMethodAttributeAttribute.html",
    "title": "Class MonoModCustomMethodAttributeAttribute | MonoMod",
    "keywords": "Class MonoModCustomMethodAttributeAttribute MonoMod \"custom method attribute\" attribute. Apply it onto a custom attribute type and the supplied handler in your MonoModRules will handle it. Replaces MMIL.Rule.RegisterCustomMethodAttribute in MonoModRules constructor. Inheritance System.Object MonoModCustomMethodAttributeAttribute Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModCustomMethodAttributeAttribute : Attribute Constructors MonoModCustomMethodAttributeAttribute(String) Declaration public MonoModCustomMethodAttributeAttribute(string h) Parameters Type Name Description System.String h"
  },
  "api/MonoMod.MonoModCustomAttributeAttribute.html": {
    "href": "api/MonoMod.MonoModCustomAttributeAttribute.html",
    "title": "Class MonoModCustomAttributeAttribute | MonoMod",
    "keywords": "Class MonoModCustomAttributeAttribute MonoMod \"custom attribute\" attribute. Apply it onto a custom attribute type and the supplied handler in your MonoModRules will handle it. Replaces MMIL.Rule.RegisterCustomAttribute in MonoModRules constructor. Inheritance System.Object MonoModCustomAttributeAttribute Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModCustomAttributeAttribute : Attribute Constructors MonoModCustomAttributeAttribute(String) Declaration public MonoModCustomAttributeAttribute(string h) Parameters Type Name Description System.String h"
  },
  "api/MonoMod.ModReadEventHandler.html": {
    "href": "api/MonoMod.ModReadEventHandler.html",
    "title": "Class ModReadEventHandler | MonoMod",
    "keywords": "Class ModReadEventHandler Inheritance System.Object ModReadEventHandler Namespace : MonoMod Assembly : MonoMod.dll Syntax public sealed class ModReadEventHandler : MulticastDelegate Constructors ModReadEventHandler(Object, IntPtr) Declaration public ModReadEventHandler(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(MonoModder, ModuleDefinition, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(MonoModder modder, ModuleDefinition mod, AsyncCallback callback, object object) Parameters Type Name Description MonoModder modder Mono.Cecil.ModuleDefinition mod System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(MonoModder, ModuleDefinition) Declaration public virtual void Invoke(MonoModder modder, ModuleDefinition mod) Parameters Type Name Description MonoModder modder Mono.Cecil.ModuleDefinition mod"
  },
  "api/MonoMod.ModInterop.html": {
    "href": "api/MonoMod.ModInterop.html",
    "title": "Namespace MonoMod.ModInterop | MonoMod",
    "keywords": "Namespace MonoMod.ModInterop Classes ModExportNameAttribute ModImportNameAttribute ModInteropManager"
  },
  "api/MonoMod.ModInterop.ModInteropManager.html": {
    "href": "api/MonoMod.ModInterop.ModInteropManager.html",
    "title": "Class ModInteropManager | MonoMod",
    "keywords": "Class ModInteropManager Inheritance System.Object ModInteropManager Namespace : MonoMod.ModInterop Assembly : MonoMod.Utils.dll Syntax public static class ModInteropManager : Object Methods ModInterop(Type) Declaration public static void ModInterop(this Type type) Parameters Type Name Description System.Type type RegisterModExport(MethodInfo, String) Declaration public static void RegisterModExport(this MethodInfo method, string prefix = null) Parameters Type Name Description System.Reflection.MethodInfo method System.String prefix"
  },
  "api/MonoMod.ModInterop.ModImportNameAttribute.html": {
    "href": "api/MonoMod.ModInterop.ModImportNameAttribute.html",
    "title": "Class ModImportNameAttribute | MonoMod",
    "keywords": "Class ModImportNameAttribute Inheritance System.Object ModImportNameAttribute Namespace : MonoMod.ModInterop Assembly : MonoMod.Utils.dll Syntax public sealed class ModImportNameAttribute : Attribute Constructors ModImportNameAttribute(String) Declaration public ModImportNameAttribute(string name) Parameters Type Name Description System.String name Fields Name Declaration public string Name Field Value Type Description System.String"
  },
  "api/MonoMod.MethodBodyRewriter.html": {
    "href": "api/MonoMod.MethodBodyRewriter.html",
    "title": "Class MethodBodyRewriter | MonoMod",
    "keywords": "Class MethodBodyRewriter Inheritance System.Object MethodBodyRewriter Namespace : MonoMod Assembly : MonoMod.dll Syntax public sealed class MethodBodyRewriter : MulticastDelegate Constructors MethodBodyRewriter(Object, IntPtr) Declaration public MethodBodyRewriter(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(MonoModder, MethodBody, Instruction, Int32, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(MonoModder modder, MethodBody body, Instruction instr, int instri, AsyncCallback callback, object object) Parameters Type Name Description MonoModder modder Mono.Cecil.Cil.MethodBody body Mono.Cecil.Cil.Instruction instr System.Int32 instri System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(MonoModder, MethodBody, Instruction, Int32) Declaration public virtual void Invoke(MonoModder modder, MethodBody body, Instruction instr, int instri) Parameters Type Name Description MonoModder modder Mono.Cecil.Cil.MethodBody body Mono.Cecil.Cil.Instruction instr System.Int32 instri"
  },
  "api/MonoMod.Cil.ILCursor.html": {
    "href": "api/MonoMod.Cil.ILCursor.html",
    "title": "Class ILCursor | MonoMod",
    "keywords": "Class ILCursor A cursor used to manipulate a method body in an ILContext. Inheritance System.Object ILCursor Namespace : MonoMod.Cil Assembly : MonoMod.Utils.dll Syntax public class ILCursor : Object Constructors ILCursor(ILContext) Declaration public ILCursor(ILContext context) Parameters Type Name Description ILContext context ILCursor(ILCursor) Declaration public ILCursor(ILCursor c) Parameters Type Name Description ILCursor c Properties Body See Body Declaration public MethodBody Body { get; } Property Value Type Description Mono.Cecil.Cil.MethodBody Context The context to which this cursor belongs to. Declaration public ILContext Context { get; } Property Value Type Description ILContext IL See IL Declaration public ILProcessor IL { get; } Property Value Type Description Mono.Cecil.Cil.ILProcessor IncomingLabels Enumerates all labels which point to the current instruction ( label.Target == Next ) Declaration public IEnumerable<ILLabel> IncomingLabels { get; } Property Value Type Description System.Collections.Generic.IEnumerable < ILLabel > Index The index of the instruction immediately following the cursor position. Range: 0 to Instrs.Count Setter accepts negative indexing by adding Instrs.Count to the operand Declaration public int Index { get; set; } Property Value Type Description System.Int32 Instrs See Instrs Declaration public Collection<Instruction> Instrs { get; } Property Value Type Description Mono.Collections.Generic.Collection < Mono.Cecil.Cil.Instruction > Method See Method Declaration public MethodDefinition Method { get; } Property Value Type Description Mono.Cecil.MethodDefinition Module See Module Declaration public ModuleDefinition Module { get; } Property Value Type Description Mono.Cecil.ModuleDefinition Next The instruction immediately following the cursor position or null if the cursor is at the end of the instruction list. Declaration public Instruction Next { get; set; } Property Value Type Description Mono.Cecil.Cil.Instruction Prev The instruction immediately preceding the cursor position or null if the cursor is at the start of the instruction list. Declaration public Instruction Prev { get; set; } Property Value Type Description Mono.Cecil.Cil.Instruction Previous The instruction immediately preceding the cursor position or null if the cursor is at the start of the instruction list. Declaration public Instruction Previous { get; set; } Property Value Type Description Mono.Cecil.Cil.Instruction SearchTarget Indicates whether the position of a MMILCursor is the result of a search function and if the next search should ignore the instruction preceeding or following this cursor. See SearchTarget Declaration public SearchTarget SearchTarget { get; set; } Property Value Type Description SearchTarget Methods AddReference<T>(T) Bind an arbitary object to an ILContext for static retrieval. See AddReference<T>(T) Declaration public int AddReference<T>(T t) Parameters Type Name Description T t Returns Type Description System.Int32 Type Parameters Name Description T Clone() Create a clone of this cursor. Declaration public ILCursor Clone() Returns Type Description ILCursor The cloned cursor. DefineLabel() Create a new label for use with MarkLabel(ILLabel) Declaration public ILLabel DefineLabel() Returns Type Description ILLabel A new label with no target Emit(OpCode) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. Returns Type Description ILCursor this Emit(OpCode, CallSite) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, CallSite site) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. Mono.Cecil.CallSite site The instruction operand. Returns Type Description ILCursor this Emit(OpCode, Instruction) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, Instruction target) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. Mono.Cecil.Cil.Instruction target The instruction operand. Returns Type Description ILCursor this Emit(OpCode, Instruction[]) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, Instruction[] targets) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. Mono.Cecil.Cil.Instruction [] targets The instruction operand. Returns Type Description ILCursor this Emit(OpCode, VariableDefinition) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, VariableDefinition variable) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. Mono.Cecil.Cil.VariableDefinition variable The instruction operand. Returns Type Description ILCursor this Emit(OpCode, FieldReference) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, FieldReference field) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. Mono.Cecil.FieldReference field The instruction operand. Returns Type Description ILCursor this Emit(OpCode, MethodReference) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, MethodReference method) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. Mono.Cecil.MethodReference method The instruction operand. Returns Type Description ILCursor this Emit(OpCode, ParameterDefinition) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, ParameterDefinition parameter) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. Mono.Cecil.ParameterDefinition parameter The instruction operand. Returns Type Description ILCursor this Emit(OpCode, TypeReference) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, TypeReference type) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. Mono.Cecil.TypeReference type The instruction operand. Returns Type Description ILCursor this Emit(OpCode, Byte) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, byte value) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.Byte value The instruction operand. Returns Type Description ILCursor this Emit(OpCode, Double) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, double value) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.Double value The instruction operand. Returns Type Description ILCursor this Emit(OpCode, Int32) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, int value) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.Int32 value The instruction operand. Returns Type Description ILCursor this Emit(OpCode, Int64) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, long value) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.Int64 value The instruction operand. Returns Type Description ILCursor this Emit(OpCode, Object) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, object operand) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.Object operand The instruction operand. Returns Type Description ILCursor this Emit(OpCode, FieldInfo) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, FieldInfo field) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.Reflection.FieldInfo field The instruction operand. Returns Type Description ILCursor this Emit(OpCode, MethodBase) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, MethodBase method) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.Reflection.MethodBase method The instruction operand. Returns Type Description ILCursor this Emit(OpCode, SByte) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, sbyte value) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.SByte value The instruction operand. Returns Type Description ILCursor this Emit(OpCode, Single) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, float value) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.Single value The instruction operand. Returns Type Description ILCursor this Emit(OpCode, String) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, string value) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.String value The instruction operand. Returns Type Description ILCursor this Emit(OpCode, Type) Emit a new instruction at this cursor's current position. Declaration public ILCursor Emit(OpCode opcode, Type type) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.Type type The instruction operand. Returns Type Description ILCursor this Emit<T>(OpCode, String) Emit a new instruction at this cursor's current position, accessing a given member. Declaration public ILCursor Emit<T>(OpCode opcode, string memberName) Parameters Type Name Description Mono.Cecil.Cil.OpCode opcode The instruction opcode. System.String memberName The accessed member name. Returns Type Description ILCursor this Type Parameters Name Description T The type in which the member is defined. EmitDelegate<T>(T) Emit the IL to invoke a delegate as if it were a method. Stack behaviour matches OpCodes.Call Declaration public int EmitDelegate<T>(T cb) where T : Delegate Parameters Type Name Description T cb Returns Type Description System.Int32 Type Parameters Name Description T EmitGetReference<T>(Int32) Emit the IL to retrieve a stored reference of type T with the given id and place it on the stack. Declaration public void EmitGetReference<T>(int id) Parameters Type Name Description System.Int32 id Type Parameters Name Description T EmitReference<T>(T) Store an object in the reference store, and emit the IL to retrieve it and place it on the stack. Declaration public int EmitReference<T>(T t) Parameters Type Name Description T t Returns Type Description System.Int32 Type Parameters Name Description T FindNext(out ILCursor[], Func<Instruction, Boolean>[]) Find the next occurences of a series of instructions matching the given set of predicates with gaps permitted. Declaration public void FindNext(out ILCursor[] cursors, params Func<Instruction, bool>[] predicates) Parameters Type Name Description ILCursor [] cursors An array of cursors corresponding to each found instruction (MoveType.Before) System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Exceptions Type Condition System.Collections.Generic.KeyNotFoundException If no match is found FindPrev(out ILCursor[], Func<Instruction, Boolean>[]) Search backwards for occurences of a series of instructions matching the given set of predicates with gaps permitted. Declaration public void FindPrev(out ILCursor[] cursors, params Func<Instruction, bool>[] predicates) Parameters Type Name Description ILCursor [] cursors An array of cursors corresponding to each found instruction (MoveType.Before) System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Exceptions Type Condition System.Collections.Generic.KeyNotFoundException If no match is found Goto(Instruction, MoveType, Boolean) Move the cursor to a target instruction. All other movements go through this. Declaration public ILCursor Goto(Instruction insn, MoveType moveType, bool setTarget = false) Parameters Type Name Description Mono.Cecil.Cil.Instruction insn The target instruction MoveType moveType Where to move in relation to the target instruction and incoming labels (branches) System.Boolean setTarget Whether to set the SearchTarget and skip the target instruction with the next search function Returns Type Description ILCursor this Goto(Int32, MoveType, Boolean) Move the cursor to a target index. Supports negative indexing. See Goto(Instruction, MoveType, Boolean) Declaration public ILCursor Goto(int index, MoveType moveType, bool setTarget = false) Parameters Type Name Description System.Int32 index MoveType moveType System.Boolean setTarget Returns Type Description ILCursor this GotoLabel(ILLabel, MoveType, Boolean) Overload for Goto(label.Target) . moveType defaults to MoveType.AfterLabel Declaration public ILCursor GotoLabel(ILLabel label, MoveType moveType, bool setTarget = false) Parameters Type Name Description ILLabel label MoveType moveType System.Boolean setTarget Returns Type Description ILCursor this GotoNext(MoveType, Func<Instruction, Boolean>[]) Search forward and moves the cursor to the next sequence of instructions matching the corresponding predicates. See also TryGotoNext(MoveType, Func<Instruction, Boolean>[]) Declaration public ILCursor GotoNext(MoveType moveType, params Func<Instruction, bool>[] predicates) Parameters Type Name Description MoveType moveType System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Returns Type Description ILCursor this Exceptions Type Condition System.Collections.Generic.KeyNotFoundException If no match is found GotoNext(Func<Instruction, Boolean>[]) Declaration public ILCursor GotoNext(params Func<Instruction, bool>[] predicates) Parameters Type Name Description System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Returns Type Description ILCursor GotoPrev(MoveType, Func<Instruction, Boolean>[]) Search backward and moves the cursor to the next sequence of instructions matching the corresponding predicates. See also TryGotoPrev(MoveType, Func<Instruction, Boolean>[]) Declaration public ILCursor GotoPrev(MoveType moveType, params Func<Instruction, bool>[] predicates) Parameters Type Name Description MoveType moveType System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Returns Type Description ILCursor this Exceptions Type Condition System.Collections.Generic.KeyNotFoundException If no match is found GotoPrev(Func<Instruction, Boolean>[]) Declaration public ILCursor GotoPrev(params Func<Instruction, bool>[] predicates) Parameters Type Name Description System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Returns Type Description ILCursor IsAfter(Instruction) Is this cursor after the given instruction? Declaration public bool IsAfter(Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr The instruction to check. Returns Type Description System.Boolean True if this cursor is after the given instruction, false otherwise. IsBefore(Instruction) Is this cursor before the given instruction? Declaration public bool IsBefore(Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr The instruction to check. Returns Type Description System.Boolean True if this cursor is before the given instruction, false otherwise. MarkLabel() Create a new label targetting the current position ( label.Target = Next ) and moves after it. Declaration public ILLabel MarkLabel() Returns Type Description ILLabel The newly created label MarkLabel(ILLabel) Set the target of a label to the current position ( label.Target = Next ) and moves after it. Declaration public void MarkLabel(ILLabel label) Parameters Type Name Description ILLabel label The label to mark MoveAfterLabels() Move the cursor after incoming labels (branches). If an instruction is emitted, all labels which currently point to Next, will point to the newly emitted instruction. Declaration public ILCursor MoveAfterLabels() Returns Type Description ILCursor this MoveBeforeLabels() Move the cursor before incoming labels (branches). This is the default behaviour. Emitted instructions will not cause labels to change targets. Declaration public ILCursor MoveBeforeLabels() Returns Type Description ILCursor this Remove() Remove the Next instruction Declaration public ILCursor Remove() Returns Type Description ILCursor RemoveRange(Int32) Remove several instructions Declaration public ILCursor RemoveRange(int num) Parameters Type Name Description System.Int32 num Returns Type Description ILCursor ToString() Obtain a string representation of this cursor (method ID, index, search target, surrounding instructions). Declaration public override string ToString() Returns Type Description System.String A string representation of this cursor. TryFindNext(out ILCursor[], Func<Instruction, Boolean>[]) Find the next occurences of a series of instructions matching the given set of predicates with gaps permitted. Declaration public bool TryFindNext(out ILCursor[] cursors, params Func<Instruction, bool>[] predicates) Parameters Type Name Description ILCursor [] cursors An array of cursors corresponding to each found instruction (MoveType.Before) System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Returns Type Description System.Boolean True if a match was found TryFindPrev(out ILCursor[], Func<Instruction, Boolean>[]) Search backwards for occurences of a series of instructions matching the given set of predicates with gaps permitted. Declaration public bool TryFindPrev(out ILCursor[] cursors, params Func<Instruction, bool>[] predicates) Parameters Type Name Description ILCursor [] cursors An array of cursors corresponding to each found instruction (MoveType.Before) System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Returns Type Description System.Boolean True if a match was found TryGotoNext(MoveType, Func<Instruction, Boolean>[]) Search forward and moves the cursor to the next sequence of instructions matching the corresponding predicates. Declaration public bool TryGotoNext(MoveType moveType, params Func<Instruction, bool>[] predicates) Parameters Type Name Description MoveType moveType System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Returns Type Description System.Boolean True if a match was found TryGotoNext(Func<Instruction, Boolean>[]) Declaration public bool TryGotoNext(params Func<Instruction, bool>[] predicates) Parameters Type Name Description System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Returns Type Description System.Boolean TryGotoPrev(MoveType, Func<Instruction, Boolean>[]) Search backward and moves the cursor to the next sequence of instructions matching the corresponding predicates. Declaration public bool TryGotoPrev(MoveType moveType, params Func<Instruction, bool>[] predicates) Parameters Type Name Description MoveType moveType System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Returns Type Description System.Boolean True if a match was found TryGotoPrev(Func<Instruction, Boolean>[]) Declaration public bool TryGotoPrev(params Func<Instruction, bool>[] predicates) Parameters Type Name Description System.Func < Mono.Cecil.Cil.Instruction , System.Boolean >[] predicates Returns Type Description System.Boolean"
  },
  "api/MonoMod.Cil.ILContext.Manipulator.html": {
    "href": "api/MonoMod.Cil.ILContext.Manipulator.html",
    "title": "Class ILContext.Manipulator | MonoMod",
    "keywords": "Class ILContext.Manipulator The manipulator callback, accepted by the Invoke method. Inheritance System.Object ILContext.Manipulator Namespace : MonoMod.Cil Assembly : MonoMod.Utils.dll Syntax public sealed class Manipulator : MulticastDelegate Constructors Manipulator(Object, IntPtr) Declaration public Manipulator(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(ILContext, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(ILContext il, AsyncCallback callback, object object) Parameters Type Name Description ILContext il System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(ILContext) Declaration public virtual void Invoke(ILContext il) Parameters Type Name Description ILContext il"
  },
  "api/MonoMod.Cil.IILReferenceBag.html": {
    "href": "api/MonoMod.Cil.IILReferenceBag.html",
    "title": "Interface IILReferenceBag | MonoMod",
    "keywords": "Interface IILReferenceBag An IL inline reference bag used for ILContexts. Namespace : MonoMod.Cil Assembly : MonoMod.Utils.dll Syntax public interface IILReferenceBag Methods Clear<T>(Int32) Remove the object with the given ID from the bag, essentially clearing the ID's slot. Declaration void Clear<T>(int id) Parameters Type Name Description System.Int32 id The object ID. Type Parameters Name Description T The object type. Get<T>(Int32) Get the object for the given ID. Declaration T Get<T>(int id) Parameters Type Name Description System.Int32 id The object ID. Returns Type Description T The stored object. Type Parameters Name Description T The object type. GetDelegateInvoker<T>() Get a MethodInfo invoking a delegate of the given type, with the delegate at the top of the stack. Used by EmitDelegate<T>(T) . Declaration MethodInfo GetDelegateInvoker<T>() where T : Delegate Returns Type Description System.Reflection.MethodInfo A MethodInfo invoking a delegate of the given type. Type Parameters Name Description T The delegate type. GetGetter<T>() Get a MethodInfo for the getter. Declaration MethodInfo GetGetter<T>() Returns Type Description System.Reflection.MethodInfo The getter method. Type Parameters Name Description T The object type. Store<T>(T) Store a new object. Declaration int Store<T>(T t) Parameters Type Name Description T t The object to be stored. Returns Type Description System.Int32 An ID to be used for all further operations. Type Parameters Name Description T The object type."
  },
  "api/MonoMod.Utils.Platform.html": {
    "href": "api/MonoMod.Utils.Platform.html",
    "title": "Class Platform | MonoMod",
    "keywords": "Class Platform Generic platform enum. Inheritance System.Object Platform Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class Platform : Enum Fields Android Android, using the Linux kernel. Declaration public const Platform Android Field Value Type Description Platform ARM On demand ARM platform bit. Declaration public const Platform ARM Field Value Type Description Platform Bits64 On demand 64-bit platform bit. Declaration public const Platform Bits64 Field Value Type Description Platform iOS iOS, sharing components with macOS. Declaration public const Platform iOS Field Value Type Description Platform Linux Linux. Declaration public const Platform Linux Field Value Type Description Platform MacOS macOS, using the Darwin kernel. Declaration public const Platform MacOS Field Value Type Description Platform NT Applied to all NT and NT-oid platforms (Windows). Declaration public const Platform NT Field Value Type Description Platform OS Bit applied to all OSes (Unknown, Windows, MacOS, ...). Declaration public const Platform OS Field Value Type Description Platform Unix Applied to all Unix and Unix-oid platforms (macOS, Linux, ...). Declaration public const Platform Unix Field Value Type Description Platform Unknown Unknown OS. Declaration public const Platform Unknown Field Value Type Description Platform value__ Declaration public int value__ Field Value Type Description System.Int32 Windows Windows, using the NT kernel. Declaration public const Platform Windows Field Value Type Description Platform"
  },
  "api/MonoMod.Utils.Cil.CecilILGenerator.html": {
    "href": "api/MonoMod.Utils.Cil.CecilILGenerator.html",
    "title": "Class CecilILGenerator | MonoMod",
    "keywords": "Class CecilILGenerator A variant of ILGenerator which uses Mono.Cecil under the hood. Inheritance System.Object ILGeneratorShim CecilILGenerator Inherited Members ILGeneratorShim.GetProxy() ILGeneratorShim.GetProxyType<TShim>() ILGeneratorShim.GetProxyType(Type) ILGeneratorShim.ProxyType Namespace : MonoMod.Utils.Cil Assembly : MonoMod.Utils.dll Syntax public sealed class CecilILGenerator : ILGeneratorShim Constructors CecilILGenerator(ILProcessor) Declaration public CecilILGenerator(ILProcessor il) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Fields IL The underlying Mono.Cecil.Cil.ILProcessor. Declaration public readonly ILProcessor IL Field Value Type Description Mono.Cecil.Cil.ILProcessor Properties ILOffset Declaration public override int ILOffset { get; } Property Value Type Description System.Int32 Overrides ILGeneratorShim.ILOffset Methods BeginCatchBlock(Type) Declaration public override void BeginCatchBlock(Type exceptionType) Parameters Type Name Description System.Type exceptionType Overrides ILGeneratorShim.BeginCatchBlock(Type) BeginExceptFilterBlock() Declaration public override void BeginExceptFilterBlock() Overrides ILGeneratorShim.BeginExceptFilterBlock() BeginExceptionBlock() Declaration public override Label BeginExceptionBlock() Returns Type Description System.Reflection.Emit.Label Overrides ILGeneratorShim.BeginExceptionBlock() BeginFaultBlock() Declaration public override void BeginFaultBlock() Overrides ILGeneratorShim.BeginFaultBlock() BeginFinallyBlock() Declaration public override void BeginFinallyBlock() Overrides ILGeneratorShim.BeginFinallyBlock() BeginScope() Declaration public override void BeginScope() Overrides ILGeneratorShim.BeginScope() DeclareLocal(Type) Declaration public override LocalBuilder DeclareLocal(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Reflection.Emit.LocalBuilder Overrides ILGeneratorShim.DeclareLocal(Type) DeclareLocal(Type, Boolean) Declaration public override LocalBuilder DeclareLocal(Type type, bool pinned) Parameters Type Name Description System.Type type System.Boolean pinned Returns Type Description System.Reflection.Emit.LocalBuilder Overrides ILGeneratorShim.DeclareLocal(Type, Boolean) DefineLabel() Declaration public override Label DefineLabel() Returns Type Description System.Reflection.Emit.Label Overrides ILGeneratorShim.DefineLabel() Emit(OpCode) Declaration public override void Emit(OpCode opcode) Parameters Type Name Description System.Reflection.Emit.OpCode opcode Overrides ILGeneratorShim.Emit(OpCode) Emit(OpCode, Byte) Declaration public override void Emit(OpCode opcode, byte arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Byte arg Overrides ILGeneratorShim.Emit(OpCode, Byte) Emit(OpCode, Double) Declaration public override void Emit(OpCode opcode, double arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Double arg Overrides ILGeneratorShim.Emit(OpCode, Double) Emit(OpCode, Int16) Declaration public override void Emit(OpCode opcode, short arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Int16 arg Overrides ILGeneratorShim.Emit(OpCode, Int16) Emit(OpCode, Int32) Declaration public override void Emit(OpCode opcode, int arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Int32 arg Overrides ILGeneratorShim.Emit(OpCode, Int32) Emit(OpCode, Int64) Declaration public override void Emit(OpCode opcode, long arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Int64 arg Overrides ILGeneratorShim.Emit(OpCode, Int64) Emit(OpCode, ConstructorInfo) Declaration public override void Emit(OpCode opcode, ConstructorInfo arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.ConstructorInfo arg Overrides ILGeneratorShim.Emit(OpCode, ConstructorInfo) Emit(OpCode, Label) Declaration public override void Emit(OpCode opcode, Label label) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.Emit.Label label Overrides ILGeneratorShim.Emit(OpCode, Label) Emit(OpCode, Label[]) Declaration public override void Emit(OpCode opcode, Label[] labels) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.Emit.Label [] labels Overrides ILGeneratorShim.Emit(OpCode, Label[]) Emit(OpCode, LocalBuilder) Declaration public override void Emit(OpCode opcode, LocalBuilder local) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.Emit.LocalBuilder local Overrides ILGeneratorShim.Emit(OpCode, LocalBuilder) Emit(OpCode, SignatureHelper) Declaration public override void Emit(OpCode opcode, SignatureHelper signature) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.Emit.SignatureHelper signature Overrides ILGeneratorShim.Emit(OpCode, SignatureHelper) Emit(OpCode, FieldInfo) Declaration public override void Emit(OpCode opcode, FieldInfo arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.FieldInfo arg Overrides ILGeneratorShim.Emit(OpCode, FieldInfo) Emit(OpCode, MethodInfo) Declaration public override void Emit(OpCode opcode, MethodInfo arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.MethodInfo arg Overrides ILGeneratorShim.Emit(OpCode, MethodInfo) Emit(OpCode, SByte) Declaration public override void Emit(OpCode opcode, sbyte arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.SByte arg Overrides ILGeneratorShim.Emit(OpCode, SByte) Emit(OpCode, Single) Declaration public override void Emit(OpCode opcode, float arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Single arg Overrides ILGeneratorShim.Emit(OpCode, Single) Emit(OpCode, String) Declaration public override void Emit(OpCode opcode, string arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.String arg Overrides ILGeneratorShim.Emit(OpCode, String) Emit(OpCode, Type) Declaration public override void Emit(OpCode opcode, Type arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Type arg Overrides ILGeneratorShim.Emit(OpCode, Type) EmitCall(OpCode, MethodInfo, Type[]) Declaration public override void EmitCall(OpCode opcode, MethodInfo methodInfo, Type[] optionalParameterTypes) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.MethodInfo methodInfo System.Type [] optionalParameterTypes Overrides ILGeneratorShim.EmitCall(OpCode, MethodInfo, Type[]) EmitCalli(OpCode, CallingConventions, Type, Type[], Type[]) Declaration public override void EmitCalli(OpCode opcode, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type[] optionalParameterTypes) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.CallingConventions callingConvention System.Type returnType System.Type [] parameterTypes System.Type [] optionalParameterTypes Overrides ILGeneratorShim.EmitCalli(OpCode, CallingConventions, Type, Type[], Type[]) EmitCalli(OpCode, CallingConvention, Type, Type[]) Declaration public override void EmitCalli(OpCode opcode, CallingConvention unmanagedCallConv, Type returnType, Type[] parameterTypes) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Runtime.InteropServices.CallingConvention unmanagedCallConv System.Type returnType System.Type [] parameterTypes Overrides ILGeneratorShim.EmitCalli(OpCode, CallingConvention, Type, Type[]) EmitWriteLine(LocalBuilder) Declaration public override void EmitWriteLine(LocalBuilder localBuilder) Parameters Type Name Description System.Reflection.Emit.LocalBuilder localBuilder Overrides ILGeneratorShim.EmitWriteLine(LocalBuilder) EmitWriteLine(FieldInfo) Declaration public override void EmitWriteLine(FieldInfo field) Parameters Type Name Description System.Reflection.FieldInfo field Overrides ILGeneratorShim.EmitWriteLine(FieldInfo) EmitWriteLine(String) Declaration public override void EmitWriteLine(string value) Parameters Type Name Description System.String value Overrides ILGeneratorShim.EmitWriteLine(String) EndExceptionBlock() Declaration public override void EndExceptionBlock() Overrides ILGeneratorShim.EndExceptionBlock() EndScope() Declaration public override void EndScope() Overrides ILGeneratorShim.EndScope() MarkLabel(Label) Declaration public override void MarkLabel(Label loc) Parameters Type Name Description System.Reflection.Emit.Label loc Overrides ILGeneratorShim.MarkLabel(Label) ThrowException(Type) Declaration public override void ThrowException(Type type) Parameters Type Name Description System.Type type Overrides ILGeneratorShim.ThrowException(Type) UsingNamespace(String) Declaration public override void UsingNamespace(string usingNamespace) Parameters Type Name Description System.String usingNamespace Overrides ILGeneratorShim.UsingNamespace(String)"
  },
  "index.html": {
    "href": "index.html",
    "title": "MonoMod",
    "keywords": "MonoMod Page under construction. Please read the MonoMod README instead."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| MonoMod",
    "keywords": "Start exploring the MonoMod API - select a class from the table on the left."
  },
  "api/MonoMod.html": {
    "href": "api/MonoMod.html",
    "title": "Namespace MonoMod | MonoMod",
    "keywords": "Namespace MonoMod Classes DebugSymbolFormat MethodBodyRewriter MethodParser MethodRewriter MissingDependencyResolver ModReadEventHandler MonoModAdded MonoMod \"added\" attribute. Will be applied by MonoMod automatically on patched types / members. MonoModConstructor MonoMod constructor attribute. Apply it onto a constructor and it will be patched by MonoMod. Or apply it onto a method and it will be handled like a constructor. MonoModCustomAttributeAttribute MonoMod \"custom attribute\" attribute. Apply it onto a custom attribute type and the supplied handler in your MonoModRules will handle it. Replaces MMIL.Rule.RegisterCustomAttribute in MonoModRules constructor. MonoModCustomMethodAttributeAttribute MonoMod \"custom method attribute\" attribute. Apply it onto a custom attribute type and the supplied handler in your MonoModRules will handle it. Replaces MMIL.Rule.RegisterCustomMethodAttribute in MonoModRules constructor. MonoModder MonoModEnumReplace MonoMod enum replace attribute. Apply it onto a enum type / class and its values will be replaced by MonoMod. MonoModForceCall MonoMod force call attribute. Apply it onto a method and all calls to it will be forcibly replaced with the call instruction. MonoModForceCallvirt MonoMod force callvirt attribute. Apply it onto a method and all calls to it will be forcibly replaced with the callvirt instruction. MonoModHook MonoMod hook attribute. Apply it onto a type / method / field and calls to the item it hooks will be relinked to the item the attribute gets applied to. MonoModIfFlag MonoMod \"if\" attribute. Apply it onto a type / method / field and it gets ignored if MonoModder.Data[key] equals false. If fallback (true by default) is false, it also gets ignored if MonoModder.Data[key] is undefined. MonoModIgnore MonoMod ignore attribute. Apply it onto a method / type and it (except its MonoMod custom attributes) will be ignored by MonoMod. MonoModLinkFrom MonoMod \"static hook\" attribute. Apply it onto a type / method / field and calls to the item it hooks will be relinked to the item the attribute gets applied to. MonoModLinkTo MonoMod linkto attribute. Apply it onto a type / method / field and calls to it by mods will be relinked to another target. MonoModNoNew MonoMod \"only patch if it exists\" attribute. Apply it onto a type or method and it gets ignored if there's no original method in the input module. MonoModOnPlatform MonoMod on platform (\"#ifdef PLATFORM\") attribute. Apply it onto a type / method / field and it gets ignored on non-matching platforms. MonoModOriginal MonoMod original method attribute. Will be applied by MonoMod automatically on original methods. Use this (or MonoModIgnore) manually to mark non-\"orig_\" originals! MonoModOriginalName MonoMod original name attribute. Apply it onto a method (not the orig_) and its orig_ method will instead be named like that. MonoModPatch MonoMod patch attribute. Apply it onto a type and it will behave as if the type was prefixed with patch_. This allows for custom compile-time names while MonoMod uses the supplied name for any relinking. MonoModPublic MonoMod ignore attribute. Apply it onto a method / field / property / type and it will be made public by MonoMod. MonoModRemove MonoMod remove attribute. Apply it onto a field / method / type and it will be removed by MonoMod. MonoModReplace MonoMod replace attribute. Apply it onto a method and no orig_ method will be generated by MonoMod. Apply it onto a field and its attributes and field type will be replaced. Apply it onto a property and it will be removed first, as if you're just adding your own. Apply it onto a type and the original type will be removed first. MonoModTargetModule MonoMod target module attribute. Apply it onto a type and it will only be patched in the target module. Important: This attribute acts as a filter. It doesn't affect any other module than the input module. For example, one can define the target assembly version using MonoModTargetModule, or use the same MonoMod mod on multiple differing input assemblies. PostProcessor RelinkMapEntry"
  },
  "api/MonoMod.Utils.html": {
    "href": "api/MonoMod.Utils.html",
    "title": "Namespace MonoMod.Utils | MonoMod",
    "keywords": "Namespace MonoMod.Utils Classes DMDCecilGenerator A DMDGenerator implementation using Mono.Cecil to build an in-memory assembly. DMDEmitDynamicMethodGenerator DMDGenerator<TSelf> A DynamicMethodDefinition \"generator\", responsible for generating a runtime MethodInfo from a DMD MethodDefinition. DynamicMethodDefinition DynamicMethodHelper DynamicMethodReference DynData<TTarget> DynDll DynDllImportAttribute Similar to DllImport, but requires you to run typeof(DeclaringType).ResolveDynDllImports(); DynDllMapping Extensions Collection of extensions used by MonoMod and other projects. LazyDisposable LazyDisposable<T> MMReflectionImporter Platform Generic platform enum. PlatformHelper ReflectionHelper Relinker The relinker callback delegate type. RelinkFailedException RelinkTargetNotFoundException WeakReferenceComparer"
  },
  "api/MonoMod.Utils.WeakReferenceComparer.html": {
    "href": "api/MonoMod.Utils.WeakReferenceComparer.html",
    "title": "Class WeakReferenceComparer | MonoMod",
    "keywords": "Class WeakReferenceComparer Inheritance System.Object WeakReferenceComparer Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class WeakReferenceComparer : EqualityComparer<WeakReference> Constructors WeakReferenceComparer() Declaration public WeakReferenceComparer() Methods Equals(WeakReference, WeakReference) Declaration public override bool Equals(WeakReference x, WeakReference y) Parameters Type Name Description System.WeakReference x System.WeakReference y Returns Type Description System.Boolean GetHashCode(WeakReference) Declaration public override int GetHashCode(WeakReference obj) Parameters Type Name Description System.WeakReference obj Returns Type Description System.Int32"
  },
  "api/MonoMod.Utils.RelinkTargetNotFoundException.html": {
    "href": "api/MonoMod.Utils.RelinkTargetNotFoundException.html",
    "title": "Class RelinkTargetNotFoundException | MonoMod",
    "keywords": "Class RelinkTargetNotFoundException Inheritance System.Object RelinkFailedException RelinkTargetNotFoundException Inherited Members RelinkFailedException.MTP RelinkFailedException.Context RelinkFailedException._Format(String, IMetadataTokenProvider, IMetadataTokenProvider) Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public class RelinkTargetNotFoundException : RelinkFailedException Constructors RelinkTargetNotFoundException(IMetadataTokenProvider, IMetadataTokenProvider) Declaration public RelinkTargetNotFoundException(IMetadataTokenProvider mtp, IMetadataTokenProvider context = null) Parameters Type Name Description Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IMetadataTokenProvider context RelinkTargetNotFoundException(String, IMetadataTokenProvider, IMetadataTokenProvider) Declaration public RelinkTargetNotFoundException(string message, IMetadataTokenProvider mtp, IMetadataTokenProvider context = null) Parameters Type Name Description System.String message Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IMetadataTokenProvider context RelinkTargetNotFoundException(String, Exception, IMetadataTokenProvider, IMetadataTokenProvider) Declaration public RelinkTargetNotFoundException(string message, Exception innerException, IMetadataTokenProvider mtp, IMetadataTokenProvider context = null) Parameters Type Name Description System.String message System.Exception innerException Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IMetadataTokenProvider context Fields DefaultMessage Declaration public const string DefaultMessage = \"MonoMod relinker failed finding\" Field Value Type Description System.String"
  },
  "api/MonoMod.Utils.RelinkFailedException.html": {
    "href": "api/MonoMod.Utils.RelinkFailedException.html",
    "title": "Class RelinkFailedException | MonoMod",
    "keywords": "Class RelinkFailedException Inheritance System.Object RelinkFailedException RelinkTargetNotFoundException Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public class RelinkFailedException : Exception Constructors RelinkFailedException(IMetadataTokenProvider, IMetadataTokenProvider) Declaration public RelinkFailedException(IMetadataTokenProvider mtp, IMetadataTokenProvider context = null) Parameters Type Name Description Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IMetadataTokenProvider context RelinkFailedException(String, IMetadataTokenProvider, IMetadataTokenProvider) Declaration public RelinkFailedException(string message, IMetadataTokenProvider mtp, IMetadataTokenProvider context = null) Parameters Type Name Description System.String message Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IMetadataTokenProvider context RelinkFailedException(String, Exception, IMetadataTokenProvider, IMetadataTokenProvider) Declaration public RelinkFailedException(string message, Exception innerException, IMetadataTokenProvider mtp, IMetadataTokenProvider context = null) Parameters Type Name Description System.String message System.Exception innerException Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IMetadataTokenProvider context Fields Context Declaration public IMetadataTokenProvider Context Field Value Type Description Mono.Cecil.IMetadataTokenProvider DefaultMessage Declaration public const string DefaultMessage = \"MonoMod failed relinking\" Field Value Type Description System.String MTP Declaration public IMetadataTokenProvider MTP Field Value Type Description Mono.Cecil.IMetadataTokenProvider Methods _Format(String, IMetadataTokenProvider, IMetadataTokenProvider) Declaration protected static string _Format(string message, IMetadataTokenProvider mtp, IMetadataTokenProvider context) Parameters Type Name Description System.String message Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IMetadataTokenProvider context Returns Type Description System.String"
  },
  "api/MonoMod.Utils.Relinker.html": {
    "href": "api/MonoMod.Utils.Relinker.html",
    "title": "Class Relinker | MonoMod",
    "keywords": "Class Relinker The relinker callback delegate type. Inheritance System.Object Relinker Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class Relinker : MulticastDelegate Constructors Relinker(Object, IntPtr) Declaration public Relinker(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(IMetadataTokenProvider, IGenericParameterProvider, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(IMetadataTokenProvider mtp, IGenericParameterProvider context, AsyncCallback callback, object object) Parameters Type Name Description Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IGenericParameterProvider context System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual IMetadataTokenProvider EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Returns Type Description Mono.Cecil.IMetadataTokenProvider Invoke(IMetadataTokenProvider, IGenericParameterProvider) Declaration public virtual IMetadataTokenProvider Invoke(IMetadataTokenProvider mtp, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.IMetadataTokenProvider mtp Mono.Cecil.IGenericParameterProvider context Returns Type Description Mono.Cecil.IMetadataTokenProvider"
  },
  "api/MonoMod.Utils.ReflectionHelper.html": {
    "href": "api/MonoMod.Utils.ReflectionHelper.html",
    "title": "Class ReflectionHelper | MonoMod",
    "keywords": "Class ReflectionHelper Inheritance System.Object ReflectionHelper Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public static class ReflectionHelper : Object Methods GetType(String) Declaration public static Type GetType(string name) Parameters Type Name Description System.String name Returns Type Description System.Type Load(ModuleDefinition) Declaration public static Assembly Load(ModuleDefinition module) Parameters Type Name Description Mono.Cecil.ModuleDefinition module Returns Type Description System.Reflection.Assembly Load(Stream) Declaration public static Assembly Load(Stream stream) Parameters Type Name Description System.IO.Stream stream Returns Type Description System.Reflection.Assembly ResolveReflection(CallSite, Module) Declaration public static SignatureHelper ResolveReflection(this CallSite csite, Module context) Parameters Type Name Description Mono.Cecil.CallSite csite System.Reflection.Module context Returns Type Description System.Reflection.Emit.SignatureHelper ResolveReflection(EventReference) Declaration public static EventInfo ResolveReflection(this EventReference mref) Parameters Type Name Description Mono.Cecil.EventReference mref Returns Type Description System.Reflection.EventInfo ResolveReflection(FieldReference) Declaration public static FieldInfo ResolveReflection(this FieldReference mref) Parameters Type Name Description Mono.Cecil.FieldReference mref Returns Type Description System.Reflection.FieldInfo ResolveReflection(MemberReference) Declaration public static MemberInfo ResolveReflection(this MemberReference mref) Parameters Type Name Description Mono.Cecil.MemberReference mref Returns Type Description System.Reflection.MemberInfo ResolveReflection(MethodReference) Declaration public static MethodBase ResolveReflection(this MethodReference mref) Parameters Type Name Description Mono.Cecil.MethodReference mref Returns Type Description System.Reflection.MethodBase ResolveReflection(PropertyReference) Declaration public static PropertyInfo ResolveReflection(this PropertyReference mref) Parameters Type Name Description Mono.Cecil.PropertyReference mref Returns Type Description System.Reflection.PropertyInfo ResolveReflection(TypeReference) Declaration public static Type ResolveReflection(this TypeReference mref) Parameters Type Name Description Mono.Cecil.TypeReference mref Returns Type Description System.Type ResolveReflectionSignature(IMethodSignature, Module) Declaration public static SignatureHelper ResolveReflectionSignature(this IMethodSignature csite, Module context) Parameters Type Name Description Mono.Cecil.IMethodSignature csite System.Reflection.Module context Returns Type Description System.Reflection.Emit.SignatureHelper"
  },
  "api/MonoMod.Utils.PlatformHelper.html": {
    "href": "api/MonoMod.Utils.PlatformHelper.html",
    "title": "Class PlatformHelper | MonoMod",
    "keywords": "Class PlatformHelper Inheritance System.Object PlatformHelper Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public static class PlatformHelper : Object Properties Current Declaration public static Platform Current { get; } Property Value Type Description Platform LibrarySuffix Declaration public static string LibrarySuffix { get; } Property Value Type Description System.String Methods Is(Platform) Declaration public static bool Is(Platform platform) Parameters Type Name Description Platform platform Returns Type Description System.Boolean"
  },
  "api/MonoMod.Utils.Extensions.html": {
    "href": "api/MonoMod.Utils.Extensions.html",
    "title": "Class Extensions | MonoMod",
    "keywords": "Class Extensions Collection of extensions used by MonoMod and other projects. Inheritance System.Object Extensions Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public static class Extensions : Object Methods AddRange(IDictionary, IDictionary) See System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0}) Declaration public static void AddRange(this IDictionary dict, IDictionary other) Parameters Type Name Description System.Collections.IDictionary dict System.Collections.IDictionary other AddRange<T>(Collection<T>, IEnumerable<T>) See System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0}) Declaration public static void AddRange<T>(this Collection<T> list, IEnumerable<T> other) Parameters Type Name Description Mono.Collections.Generic.Collection <T> list System.Collections.Generic.IEnumerable <T> other Type Parameters Name Description T AddRange<K, V>(Dictionary<K, V>, Dictionary<K, V>) See System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0}) Declaration public static void AddRange<K, V>(this Dictionary<K, V> dict, Dictionary<K, V> other) Parameters Type Name Description System.Collections.Generic.Dictionary <K, V> dict System.Collections.Generic.Dictionary <K, V> other Type Parameters Name Description K V AddRange<K, V>(IDictionary<K, V>, IDictionary<K, V>) See System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0}) Declaration public static void AddRange<K, V>(this IDictionary<K, V> dict, IDictionary<K, V> other) Parameters Type Name Description System.Collections.Generic.IDictionary <K, V> dict System.Collections.Generic.IDictionary <K, V> other Type Parameters Name Description K V CastDelegate(Delegate, Type) Cast a delegate from one type to another. Compatible with delegates holding an invocation list (combined delegates). Declaration public static Delegate CastDelegate(this Delegate source, Type type) Parameters Type Name Description System.Delegate source The input delegate. System.Type type The wanted output delegate type. Returns Type Description System.Delegate The output delegate. CastDelegate<T>(Delegate) Cast a delegate from one type to another. Compatible with delegates holding an invocation list (combined delegates). Declaration public static T CastDelegate<T>(this Delegate source) where T : class Parameters Type Name Description System.Delegate source The input delegate. Returns Type Description T The output delegate. Type Parameters Name Description T Clone(MethodBody, MethodDefinition) Clone the given method body. Declaration public static MethodBody Clone(this MethodBody bo, MethodDefinition m) Parameters Type Name Description Mono.Cecil.Cil.MethodBody bo The original method body. Mono.Cecil.MethodDefinition m The method which will own the newly cloned method body. Returns Type Description Mono.Cecil.Cil.MethodBody A clone of the original method body. Clone(CustomAttribute) Clone the given custom attribute. Declaration public static CustomAttribute Clone(this CustomAttribute attrib) Parameters Type Name Description Mono.Cecil.CustomAttribute attrib The original custom attribute. Returns Type Description Mono.Cecil.CustomAttribute A clone of the original custom attribute. Clone(GenericParameter) Clone the given generic parameter. Declaration public static GenericParameter Clone(this GenericParameter param) Parameters Type Name Description Mono.Cecil.GenericParameter param The original generic parameter. Returns Type Description Mono.Cecil.GenericParameter A clone of the original generic parameter. Clone(MethodDefinition, MethodDefinition) Clone the given method definition. Declaration public static MethodDefinition Clone(this MethodDefinition o, MethodDefinition c = null) Parameters Type Name Description Mono.Cecil.MethodDefinition o The original method. Mono.Cecil.MethodDefinition c The method definition to apply the cloning process onto, or null to create a new method. Returns Type Description Mono.Cecil.MethodDefinition A clone of the original method. Clone(ParameterDefinition) Clone the given parameter definition. Declaration public static ParameterDefinition Clone(this ParameterDefinition param) Parameters Type Name Description Mono.Cecil.ParameterDefinition param The original parameter definition. Returns Type Description Mono.Cecil.ParameterDefinition A clone of the original parameter definition. Create(ILProcessor, OpCode, Object) Declaration public static Instruction Create(this ILProcessor il, OpCode opcode, object operand) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Mono.Cecil.Cil.OpCode opcode System.Object operand Returns Type Description Mono.Cecil.Cil.Instruction Create(ILProcessor, OpCode, FieldInfo) Declaration public static Instruction Create(this ILProcessor il, OpCode opcode, FieldInfo field) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Mono.Cecil.Cil.OpCode opcode System.Reflection.FieldInfo field Returns Type Description Mono.Cecil.Cil.Instruction Create(ILProcessor, OpCode, MemberInfo) Declaration public static Instruction Create(this ILProcessor il, OpCode opcode, MemberInfo member) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Mono.Cecil.Cil.OpCode opcode System.Reflection.MemberInfo member Returns Type Description Mono.Cecil.Cil.Instruction Create(ILProcessor, OpCode, MethodBase) Declaration public static Instruction Create(this ILProcessor il, OpCode opcode, MethodBase method) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Mono.Cecil.Cil.OpCode opcode System.Reflection.MethodBase method Returns Type Description Mono.Cecil.Cil.Instruction Create(ILProcessor, OpCode, Type) Declaration public static Instruction Create(this ILProcessor il, OpCode opcode, Type type) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Mono.Cecil.Cil.OpCode opcode System.Type type Returns Type Description Mono.Cecil.Cil.Instruction CreateDelegate(MethodBase, Type) Creates a delegate of the specified type from this method. Declaration public static Delegate CreateDelegate(this MethodBase method, Type delegateType) Parameters Type Name Description System.Reflection.MethodBase method The method to create the delegate from. System.Type delegateType The type of the delegate to create. Returns Type Description System.Delegate The delegate for this method. CreateDelegate(MethodBase, Type, Object) Creates a delegate of the specified type with the specified target from this method. Declaration public static Delegate CreateDelegate(this MethodBase method, Type delegateType, object target) Parameters Type Name Description System.Reflection.MethodBase method The method to create the delegate from. System.Type delegateType The type of the delegate to create. System.Object target The object targeted by the delegate. Returns Type Description System.Delegate The delegate for this method. CreateDelegate<T>(MethodBase) Creates a delegate of the specified type from this method. Declaration public static Delegate CreateDelegate<T>(this MethodBase method) where T : class Parameters Type Name Description System.Reflection.MethodBase method The method to create the delegate from. Returns Type Description System.Delegate The delegate for this method. Type Parameters Name Description T The type of the delegate to create. CreateDelegate<T>(MethodBase, Object) Creates a delegate of the specified type with the specified target from this method. Declaration public static Delegate CreateDelegate<T>(this MethodBase method, object target) where T : class Parameters Type Name Description System.Reflection.MethodBase method The method to create the delegate from. System.Object target The object targeted by the delegate. Returns Type Description System.Delegate The delegate for this method. Type Parameters Name Description T The type of the delegate to create. Emit(ILProcessor, OpCode, Object) Declaration public static void Emit(this ILProcessor il, OpCode opcode, object operand) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Mono.Cecil.Cil.OpCode opcode System.Object operand Emit(ILProcessor, OpCode, FieldInfo) Declaration public static void Emit(this ILProcessor il, OpCode opcode, FieldInfo field) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Mono.Cecil.Cil.OpCode opcode System.Reflection.FieldInfo field Emit(ILProcessor, OpCode, MemberInfo) Declaration public static void Emit(this ILProcessor il, OpCode opcode, MemberInfo member) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Mono.Cecil.Cil.OpCode opcode System.Reflection.MemberInfo member Emit(ILProcessor, OpCode, MethodBase) Declaration public static void Emit(this ILProcessor il, OpCode opcode, MethodBase method) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Mono.Cecil.Cil.OpCode opcode System.Reflection.MethodBase method Emit(ILProcessor, OpCode, Type) Declaration public static void Emit(this ILProcessor il, OpCode opcode, Type type) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il Mono.Cecil.Cil.OpCode opcode System.Type type FindEvent(TypeDefinition, String) Find an event for a given name. Declaration public static EventDefinition FindEvent(this TypeDefinition type, string name) Parameters Type Name Description Mono.Cecil.TypeDefinition type The type to search in. System.String name The event name. Returns Type Description Mono.Cecil.EventDefinition The first matching event or null. FindEventDeep(TypeDefinition, String) Find an event for a given name recursively (including the passed type's base types). Declaration public static EventDefinition FindEventDeep(this TypeDefinition type, string name) Parameters Type Name Description Mono.Cecil.TypeDefinition type The type to search in. System.String name The event name. Returns Type Description Mono.Cecil.EventDefinition The first matching event or null. FindField(TypeDefinition, String) Find a field for a given name. Declaration public static FieldDefinition FindField(this TypeDefinition type, string name) Parameters Type Name Description Mono.Cecil.TypeDefinition type The type to search in. System.String name The field name. Returns Type Description Mono.Cecil.FieldDefinition The first matching field or null. FindFieldDeep(TypeDefinition, String) Find a field for a given name recursively (including the passed type's base types). Declaration public static FieldDefinition FindFieldDeep(this TypeDefinition type, string name) Parameters Type Name Description Mono.Cecil.TypeDefinition type The type to search in. System.String name The field name. Returns Type Description Mono.Cecil.FieldDefinition The first matching field or null. FindMethod(TypeDefinition, String, Boolean) Find a method for a given ID. Declaration public static MethodDefinition FindMethod(this TypeDefinition type, string id, bool simple = true) Parameters Type Name Description Mono.Cecil.TypeDefinition type The type to search in. System.String id The method ID. System.Boolean simple Whether to perform a simple search pass as well or not. Returns Type Description Mono.Cecil.MethodDefinition The first matching method or null. FindMethod(Type, String, Boolean) Find a method for a given ID. Declaration public static MethodInfo FindMethod(this Type type, string id, bool simple = true) Parameters Type Name Description System.Type type The type to search in. System.String id The method ID. System.Boolean simple Whether to perform a simple search pass as well or not. Returns Type Description System.Reflection.MethodInfo The first matching method or null. FindMethodDeep(TypeDefinition, String, Boolean) Find a method for a given ID recursively (including the passed type's base types). Declaration public static MethodDefinition FindMethodDeep(this TypeDefinition type, string id, bool simple = true) Parameters Type Name Description Mono.Cecil.TypeDefinition type The type to search in. System.String id The method ID. System.Boolean simple Whether to perform a simple search pass as well or not. Returns Type Description Mono.Cecil.MethodDefinition The first matching method or null. FindMethodDeep(Type, String, Boolean) Find a method for a given ID recursively (including the passed type's base types). Declaration public static MethodInfo FindMethodDeep(this Type type, string id, bool simple = true) Parameters Type Name Description System.Type type The type to search in. System.String id The method ID. System.Boolean simple Whether to perform a simple search pass as well or not. Returns Type Description System.Reflection.MethodInfo The first matching method or null. FindProperty(TypeDefinition, String) Find a property for a given name. Declaration public static PropertyDefinition FindProperty(this TypeDefinition type, string name) Parameters Type Name Description Mono.Cecil.TypeDefinition type The type to search in. System.String name The property name. Returns Type Description Mono.Cecil.PropertyDefinition The first matching property or null. FindPropertyDeep(TypeDefinition, String) Find a property for a given name recursively (including the passed type's base types). Declaration public static PropertyDefinition FindPropertyDeep(this TypeDefinition type, string name) Parameters Type Name Description Mono.Cecil.TypeDefinition type The type to search in. System.String name The property name. Returns Type Description Mono.Cecil.PropertyDefinition The first matching property or null. FixShortLongOps(MethodDefinition) Fix (and optimize) any instructions which should use the long / short form opcodes instead. Declaration public static void FixShortLongOps(this MethodDefinition method) Parameters Type Name Description Mono.Cecil.MethodDefinition method The method to apply the fixes to. GetCustomAttribute(ICustomAttributeProvider, String) Get a certain custom attribute from an attribute provider. Declaration public static CustomAttribute GetCustomAttribute(this ICustomAttributeProvider cap, string attribute) Parameters Type Name Description Mono.Cecil.ICustomAttributeProvider cap The attribute provider. System.String attribute The custom attribute name. Returns Type Description Mono.Cecil.CustomAttribute The first matching custom attribute, or null if no matching attribute has been found. GetID(CallSite) Get a reference ID that is similar to the full name, but consistent between System.Reflection and Mono.Cecil. Declaration public static string GetID(this CallSite method) Parameters Type Name Description Mono.Cecil.CallSite method The call site to get the ID for. Returns Type Description System.String The ID. GetID(MethodReference, String, String, Boolean, Boolean) Get a reference ID that is similar to the full name, but consistent between System.Reflection and Mono.Cecil. Declaration public static string GetID(this MethodReference method, string name = null, string type = null, bool withType = true, bool simple = false) Parameters Type Name Description Mono.Cecil.MethodReference method The method to get the ID for. System.String name The name to use instead of the reference's own name. System.String type The ID to use instead of the reference's declaring type ID. System.Boolean withType Whether the type ID should be included or not. System.Reflection avoids it by default. System.Boolean simple Whether the ID should be \"simple\" (name only). Returns Type Description System.String The ID. GetID(MethodBase, String, String, Boolean, Boolean, Boolean) Get a reference ID that is similar to the full name, but consistent between System.Reflection and Mono.Cecil. Declaration public static string GetID(this MethodBase method, string name = null, string type = null, bool withType = true, bool proxyMethod = false, bool simple = false) Parameters Type Name Description System.Reflection.MethodBase method The method to get the ID for. System.String name The name to use instead of the reference's own name. System.String type The ID to use instead of the reference's declaring type ID. System.Boolean withType Whether the type ID should be included or not. System.Reflection avoids it by default. System.Boolean proxyMethod Whether the method is regarded as a proxy method or not. Setting this paramater to true will skip the first parameter. System.Boolean simple Whether the ID should be \"simple\" (name only). Returns Type Description System.String The ID. GetInt(Instruction) Get the integer value pushed onto the stack with this instruction. Declaration public static int GetInt(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr The instruction to get the pushed integer value for. Returns Type Description System.Int32 The pushed integer value. GetIntOrNull(Instruction) Get the integer value pushed onto the stack with this instruction. Declaration public static Nullable<int> GetIntOrNull(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr The instruction to get the pushed integer value for. Returns Type Description System.Nullable < System.Int32 > The pushed integer value or null. GetLdftnPointer(MethodBase) Get a native function pointer for a given method. This matches an IL-level ldftn. Declaration public static IntPtr GetLdftnPointer(this MethodBase m) Parameters Type Name Description System.Reflection.MethodBase m The method to get a native function pointer for. Returns Type Description System.IntPtr The native function pointer. Remarks ldftn doesn't JIT-compile the method on mono, which thus keeps the class constructor untouched. On the other hand, its result thus doesn't always match that of MethodHandle.GetFunctionPointer(). GetManagedSize(Type) Get the managed size of a given type. This matches an IL-level sizeof(t), even if it cannot be determined normally in C#. Note that sizeof(t) != Marshal.SizeOf(t), f.e. when t is char. Declaration public static int GetManagedSize(this Type t) Parameters Type Name Description System.Type t The type to get the size from. Returns Type Description System.Int32 The managed type size. GetPatchFullName(MemberReference) Get the \"patch name\" - the name of the target to patch - for the given member. Declaration public static string GetPatchFullName(this MemberReference mr) Parameters Type Name Description Mono.Cecil.MemberReference mr The member to get the patch name for. Returns Type Description System.String The patch name. GetPatchName(MemberReference) Get the \"patch name\" - the name of the target to patch - for the given member. Declaration public static string GetPatchName(this MemberReference mr) Parameters Type Name Description Mono.Cecil.MemberReference mr The member to get the patch name for. Returns Type Description System.String The patch name. GetThisParamType(MethodBase) Get a type which matches what the method should receive via ldarg.0 Declaration public static Type GetThisParamType(this MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method The method to obtain the \"this\" parameter type from. Returns Type Description System.Type The \"this\" parameter type. HasCustomAttribute(ICustomAttributeProvider, String) Determine if an attribute provider has got a specific custom attribute. Declaration public static bool HasCustomAttribute(this ICustomAttributeProvider cap, string attribute) Parameters Type Name Description Mono.Cecil.ICustomAttributeProvider cap The attribute provider. System.String attribute The custom attribute name. Returns Type Description System.Boolean true if the attribute provider contains the given custom attribute, false otherwise. Import(ILProcessor, FieldInfo) Declaration public static FieldReference Import(this ILProcessor il, FieldInfo field) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il System.Reflection.FieldInfo field Returns Type Description Mono.Cecil.FieldReference Import(ILProcessor, MemberInfo) Declaration public static MemberReference Import(this ILProcessor il, MemberInfo member) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il System.Reflection.MemberInfo member Returns Type Description Mono.Cecil.MemberReference Import(ILProcessor, MethodBase) Declaration public static MethodReference Import(this ILProcessor il, MethodBase method) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il System.Reflection.MethodBase method Returns Type Description Mono.Cecil.MethodReference Import(ILProcessor, Type) Declaration public static TypeReference Import(this ILProcessor il, Type type) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il System.Type type Returns Type Description Mono.Cecil.TypeReference ImportReference(ModuleDefinition, IMetadataTokenProvider) Declaration public static IMetadataTokenProvider ImportReference(this ModuleDefinition mod, IMetadataTokenProvider mtp) Parameters Type Name Description Mono.Cecil.ModuleDefinition mod Mono.Cecil.IMetadataTokenProvider mtp Returns Type Description Mono.Cecil.IMetadataTokenProvider InsertRange<T>(Collection<T>, Int32, IEnumerable<T>) See System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0}) Declaration public static void InsertRange<T>(this Collection<T> list, int index, IEnumerable<T> other) Parameters Type Name Description Mono.Collections.Generic.Collection <T> list System.Int32 index System.Collections.Generic.IEnumerable <T> other Type Parameters Name Description T InvokePassing<T>(MulticastDelegate, T, Object[]) Invokes all delegates in the invocation list, passing on the result to the next. Declaration public static T InvokePassing<T>(this MulticastDelegate md, T val, params object[] args) Parameters Type Name Description System.MulticastDelegate md The multicast delegate. T val The initial value and first parameter. System.Object [] args Any other arguments that may be passed. Returns Type Description T The result of all delegates. Type Parameters Name Description T Type of the result. InvokeWhileFalse(MulticastDelegate, Object[]) Invokes all delegates in the invocation list, as long as the previously invoked delegate returns false. Declaration public static bool InvokeWhileFalse(this MulticastDelegate md, params object[] args) Parameters Type Name Description System.MulticastDelegate md System.Object [] args Returns Type Description System.Boolean InvokeWhileNull<T>(MulticastDelegate, Object[]) Invokes all delegates in the invocation list, as long as the previously invoked delegate returns null. Declaration public static T InvokeWhileNull<T>(this MulticastDelegate md, params object[] args) where T : class Parameters Type Name Description System.MulticastDelegate md System.Object [] args Returns Type Description T Type Parameters Name Description T InvokeWhileTrue(MulticastDelegate, Object[]) Invokes all delegates in the invocation list, as long as the previously invoked delegate returns true. Declaration public static bool InvokeWhileTrue(this MulticastDelegate md, params object[] args) Parameters Type Name Description System.MulticastDelegate md System.Object [] args Returns Type Description System.Boolean Is(MemberReference, MemberInfo) Check if the signatures of a given System.Reflection and Mono.Cecil member reference match. Declaration public static bool Is(this MemberReference mref, MemberInfo minfo) Parameters Type Name Description Mono.Cecil.MemberReference mref The Mono.Cecil member reference. System.Reflection.MemberInfo minfo The System.Reflection member reference. Returns Type Description System.Boolean True if both references share the same signature, false otherwise. Is(MemberReference, String) Declaration public static bool Is(this MemberReference member, string fullName) Parameters Type Name Description Mono.Cecil.MemberReference member System.String fullName Returns Type Description System.Boolean Is(MemberReference, String, String) Declaration public static bool Is(this MemberReference member, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.MemberReference member System.String typeFullName System.String name Returns Type Description System.Boolean Is(MemberReference, Type, String) Declaration public static bool Is(this MemberReference member, Type type, string name) Parameters Type Name Description Mono.Cecil.MemberReference member System.Type type System.String name Returns Type Description System.Boolean Is(MemberInfo, MemberReference) Check if the signatures of a given System.Reflection and Mono.Cecil member reference match. Declaration public static bool Is(this MemberInfo minfo, MemberReference mref) Parameters Type Name Description System.Reflection.MemberInfo minfo The System.Reflection member reference. Mono.Cecil.MemberReference mref The Mono.Cecil member reference. Returns Type Description System.Boolean True if both references share the same signature, false otherwise. IsBaseMethodCall(MethodBody, MethodReference) Determine if the method call is a base method call. Declaration public static bool IsBaseMethodCall(this MethodBody body, MethodReference called) Parameters Type Name Description Mono.Cecil.Cil.MethodBody body The caller method body. Mono.Cecil.MethodReference called The called method. Returns Type Description System.Boolean True if the called method is a base method of the caller method, false otherwise. IsCallvirt(MethodReference) Determine if the given method can be preferably called using callvirt. Declaration public static bool IsCallvirt(this MethodReference method) Parameters Type Name Description Mono.Cecil.MethodReference method The called method. Returns Type Description System.Boolean True if the called method can be called using callvirt, false otherwise. IsCompatible(Type, Type) Determine if two types are compatible with each other (f.e. object with string, or enums with their underlying integer type). Declaration public static bool IsCompatible(this Type type, Type other) Parameters Type Name Description System.Type type The first type. System.Type other The second type. Returns Type Description System.Boolean True if both types are compatible with each other, false otherwise. IsStruct(TypeReference) Determine if the given type is a struct (also known as \"value type\") or struct-alike (f.e. primitive). Declaration public static bool IsStruct(this TypeReference type) Parameters Type Name Description Mono.Cecil.TypeReference type The type to check. Returns Type Description System.Boolean True if the type is a struct, primitive or similar, false otherwise. LogDetailed(Exception, String) Print the exception to the console, including extended loading / reflection data useful for mods. Declaration public static void LogDetailed(this Exception e, string tag = null) Parameters Type Name Description System.Exception e System.String tag ReadNullTerminatedString(BinaryReader) Read the string from the BinaryReader BinaryWriter in a C-friendly format. Declaration public static string ReadNullTerminatedString(this BinaryReader stream) Parameters Type Name Description System.IO.BinaryReader stream The input which the method reads from. Returns Type Description System.String The output string. RecalculateILOffsets(MethodDefinition) Calculate updated instruction offsets. Required for certain manual fixes. Declaration public static void RecalculateILOffsets(this MethodDefinition method) Parameters Type Name Description Mono.Cecil.MethodDefinition method The method to recalculate the IL instruction offsets for. Relink(CallSite, Relinker, IGenericParameterProvider) Relink the given callsite. Declaration public static CallSite Relink(this CallSite method, Relinker relinker, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.CallSite method The reference to relink. Relinker relinker The relinker to use during the relinking process. Mono.Cecil.IGenericParameterProvider context The generic context provided to relink generic references. Returns Type Description Mono.Cecil.CallSite A relinked reference. Relink(CustomAttribute, Relinker, IGenericParameterProvider) Relink the given custom attribute. Declaration public static CustomAttribute Relink(this CustomAttribute attrib, Relinker relinker, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.CustomAttribute attrib The reference to relink. Relinker relinker The relinker to use during the relinking process. Mono.Cecil.IGenericParameterProvider context The generic context provided to relink generic references. Returns Type Description Mono.Cecil.CustomAttribute A relinked reference. Relink(FieldReference, Relinker, IGenericParameterProvider) Relink the given field reference. Declaration public static IMetadataTokenProvider Relink(this FieldReference field, Relinker relinker, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.FieldReference field The reference to relink. Relinker relinker The relinker to use during the relinking process. Mono.Cecil.IGenericParameterProvider context The generic context provided to relink generic references. Returns Type Description Mono.Cecil.IMetadataTokenProvider A relinked reference. Relink(GenericParameter, Relinker, IGenericParameterProvider) Relink the given generic parameter reference. Declaration public static GenericParameter Relink(this GenericParameter param, Relinker relinker, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.GenericParameter param The reference to relink. Relinker relinker The relinker to use during the relinking process. Mono.Cecil.IGenericParameterProvider context The generic context provided to relink generic references. Returns Type Description Mono.Cecil.GenericParameter A relinked reference. Relink(GenericParameterConstraint, Relinker, IGenericParameterProvider) Relink the given type reference. Declaration public static GenericParameterConstraint Relink(this GenericParameterConstraint constraint, Relinker relinker, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.GenericParameterConstraint constraint The reference to relink. Relinker relinker The relinker to use during the relinking process. Mono.Cecil.IGenericParameterProvider context The generic context provided to relink generic references. Returns Type Description Mono.Cecil.GenericParameterConstraint A relinked reference. Relink(IMetadataTokenProvider, Relinker, IGenericParameterProvider) Relink the given member reference (metadata token provider). Declaration public static IMetadataTokenProvider Relink(this IMetadataTokenProvider mtp, Relinker relinker, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.IMetadataTokenProvider mtp The reference to relink. Relinker relinker The relinker to use during the relinking process. Mono.Cecil.IGenericParameterProvider context The generic context provided to relink generic references. Returns Type Description Mono.Cecil.IMetadataTokenProvider A relinked reference. Relink(MethodReference, Relinker, IGenericParameterProvider) Relink the given method reference. Declaration public static IMetadataTokenProvider Relink(this MethodReference method, Relinker relinker, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.MethodReference method The reference to relink. Relinker relinker The relinker to use during the relinking process. Mono.Cecil.IGenericParameterProvider context The generic context provided to relink generic references. Returns Type Description Mono.Cecil.IMetadataTokenProvider A relinked reference. Relink(ParameterDefinition, Relinker, IGenericParameterProvider) Relink the given parameter definition. Declaration public static ParameterDefinition Relink(this ParameterDefinition param, Relinker relinker, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.ParameterDefinition param The reference to relink. Relinker relinker The relinker to use during the relinking process. Mono.Cecil.IGenericParameterProvider context The generic context provided to relink generic references. Returns Type Description Mono.Cecil.ParameterDefinition A relinked reference. Relink(TypeReference, Relinker, IGenericParameterProvider) Relink the given type reference. Declaration public static TypeReference Relink(this TypeReference type, Relinker relinker, IGenericParameterProvider context) Parameters Type Name Description Mono.Cecil.TypeReference type The reference to relink. Relinker relinker The relinker to use during the relinking process. Mono.Cecil.IGenericParameterProvider context The generic context provided to relink generic references. Returns Type Description Mono.Cecil.TypeReference A relinked reference. ReplaceOperands(ILProcessor, Object, Object) Declaration public static void ReplaceOperands(this ILProcessor il, object from, object to) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il System.Object from System.Object to ResolveGenericParameter(IGenericParameterProvider, GenericParameter) Resolve a given generic parameter in another context. Declaration public static GenericParameter ResolveGenericParameter(this IGenericParameterProvider provider, GenericParameter orig) Parameters Type Name Description Mono.Cecil.IGenericParameterProvider provider The new context. Mono.Cecil.GenericParameter orig The original generic parameter. Returns Type Description Mono.Cecil.GenericParameter A generic parameter provided by the given context which matches the original generic parameter. SafeResolve(FieldReference) Safely resolve a reference, silently discarding any exceptions. Declaration public static FieldDefinition SafeResolve(this FieldReference r) Parameters Type Name Description Mono.Cecil.FieldReference r The reference to resolve. Returns Type Description Mono.Cecil.FieldDefinition The resolved definition or null. SafeResolve(MethodReference) Safely resolve a reference, silently discarding any exceptions. Declaration public static MethodDefinition SafeResolve(this MethodReference r) Parameters Type Name Description Mono.Cecil.MethodReference r The reference to resolve. Returns Type Description Mono.Cecil.MethodDefinition The resolved definition or null. SafeResolve(PropertyReference) Safely resolve a reference, silently discarding any exceptions. Declaration public static PropertyDefinition SafeResolve(this PropertyReference r) Parameters Type Name Description Mono.Cecil.PropertyReference r The reference to resolve. Returns Type Description Mono.Cecil.PropertyDefinition The resolved definition or null. SafeResolve(TypeReference) Safely resolve a reference, silently discarding any exceptions. Declaration public static TypeDefinition SafeResolve(this TypeReference r) Parameters Type Name Description Mono.Cecil.TypeReference r The reference to resolve. Returns Type Description Mono.Cecil.TypeDefinition The resolved definition or null. SpacedPascalCase(String) Split PascalCase words to become Pascal Case instead. Declaration public static string SpacedPascalCase(this string input) Parameters Type Name Description System.String input PascalCaseString Returns Type Description System.String Pascal Case String ToHexadecimalString(Byte[]) Create a hexadecimal string for the given bytes. Declaration public static string ToHexadecimalString(this byte[] data) Parameters Type Name Description System.Byte [] data The input bytes. Returns Type Description System.String The output hexadecimal string. ToLongOp(OpCode) Get the long form opcode for any short form opcode. Declaration public static OpCode ToLongOp(this OpCode op) Parameters Type Name Description Mono.Cecil.Cil.OpCode op The short form opcode. Returns Type Description Mono.Cecil.Cil.OpCode The long form opcode. ToShortOp(OpCode) Get the short form opcode for any long form opcode. Declaration public static OpCode ToShortOp(this OpCode op) Parameters Type Name Description Mono.Cecil.Cil.OpCode op The long form opcode. Returns Type Description Mono.Cecil.Cil.OpCode The short form opcode. TryCastDelegate(Delegate, Type, out Delegate) Declaration public static bool TryCastDelegate(this Delegate source, Type type, out Delegate result) Parameters Type Name Description System.Delegate source System.Type type System.Delegate result Returns Type Description System.Boolean TryCastDelegate<T>(Delegate, out T) Declaration public static bool TryCastDelegate<T>(this Delegate source, out T result) where T : class Parameters Type Name Description System.Delegate source T result Returns Type Description System.Boolean Type Parameters Name Description T Update(GenericParameter, Int32, GenericParameterType) Force-update a generic parameter's position and type. Declaration public static GenericParameter Update(this GenericParameter param, int position, GenericParameterType type) Parameters Type Name Description Mono.Cecil.GenericParameter param The generic parameter to update. System.Int32 position The new position. Mono.Cecil.GenericParameterType type The new type. Returns Type Description Mono.Cecil.GenericParameter The updated generic parameter. WriteNullTerminatedString(BinaryWriter, String) Write the string to the BinaryWriter in a C-friendly format. Declaration public static void WriteNullTerminatedString(this BinaryWriter stream, string text) Parameters Type Name Description System.IO.BinaryWriter stream The output which the method writes to. System.String text The input string."
  },
  "api/MonoMod.Utils.DynDllMapping.html": {
    "href": "api/MonoMod.Utils.DynDllMapping.html",
    "title": "Class DynDllMapping | MonoMod",
    "keywords": "Class DynDllMapping Inheritance System.Object DynDllMapping Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class DynDllMapping : Object Constructors DynDllMapping() Declaration public DynDllMapping() Fields Flags Platform-dependant loading flags. Declaration public Nullable<int> Flags Field Value Type Description System.Nullable < System.Int32 > ResolveAs The name as which the library will be resolved as. Useful to remap libraries or to provide full paths. Declaration public string ResolveAs Field Value Type Description System.String"
  },
  "api/MonoMod.Utils.DynDllImportAttribute.html": {
    "href": "api/MonoMod.Utils.DynDllImportAttribute.html",
    "title": "Class DynDllImportAttribute | MonoMod",
    "keywords": "Class DynDllImportAttribute Similar to DllImport, but requires you to run typeof(DeclaringType).ResolveDynDllImports(); Inheritance System.Object DynDllImportAttribute Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public class DynDllImportAttribute : Attribute Constructors DynDllImportAttribute(String, String[]) Declaration public DynDllImportAttribute(string dll, params string[] entryPoints) Parameters Type Name Description System.String dll System.String [] entryPoints Fields DLL Declaration public string DLL Field Value Type Description System.String EntryPoints Declaration public string[] EntryPoints Field Value Type Description System.String [] Properties EntryPoint Declaration public string EntryPoint { set; } Property Value Type Description System.String"
  },
  "api/MonoMod.Utils.DynDll.html": {
    "href": "api/MonoMod.Utils.DynDll.html",
    "title": "Class DynDll | MonoMod",
    "keywords": "Class DynDll Inheritance System.Object DynDll Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public static class DynDll : Object Fields Mappings Allows you to remap library paths / names and specify loading flags. Useful for cross-platform compatibility. Applies only to DynDll. Declaration public static Dictionary<string, DynDllMapping> Mappings Field Value Type Description System.Collections.Generic.Dictionary < System.String , DynDllMapping > Methods _OpenLibrary(String, Boolean, Nullable<Int32>) Declaration public static IntPtr _OpenLibrary(string name, bool skipMapping, Nullable<int> flags) Parameters Type Name Description System.String name System.Boolean skipMapping System.Nullable < System.Int32 > flags Returns Type Description System.IntPtr AsDelegate<T>(IntPtr) Extension method wrapping Marshal.GetDelegateForFunctionPointer Declaration public static T AsDelegate<T>(this IntPtr s) where T : class Parameters Type Name Description System.IntPtr s Returns Type Description T Type Parameters Name Description T CloseLibrary(IntPtr) Release a library handle obtained via OpenLibrary. Don't release the result of OpenLibrary(null)! Declaration public static bool CloseLibrary(IntPtr lib) Parameters Type Name Description System.IntPtr lib The library handle. Returns Type Description System.Boolean GetFunction(IntPtr, String) Get a function pointer for a function in the given library. Declaration public static IntPtr GetFunction(this IntPtr lib, string name) Parameters Type Name Description System.IntPtr lib The library handle. System.String name The function name. Returns Type Description System.IntPtr The function pointer. OpenLibrary(String, Boolean, Nullable<Int32>) Open a given library and get its handle. Declaration public static IntPtr OpenLibrary(string name, bool skipMapping = false, Nullable<int> flags = null) Parameters Type Name Description System.String name The library name. System.Boolean skipMapping Whether to skip using the mapping or not. System.Nullable < System.Int32 > flags Any optional platform-specific flags. Returns Type Description System.IntPtr The library handle. ResolveDynDllImports(Object, Dictionary<String, DynDllMapping>) Fill all instance delegate fields with the DynDllImport attribute. Call this early on in the constructor. Declaration public static void ResolveDynDllImports(object instance, Dictionary<string, DynDllMapping> mappings = null) Parameters Type Name Description System.Object instance An instance of a type containing the DynDllImport delegate fields. System.Collections.Generic.Dictionary < System.String , DynDllMapping > mappings Any optional mappings similar to the static mappings. ResolveDynDllImports(Type, Dictionary<String, DynDllMapping>) Fill all static delegate fields with the DynDllImport attribute. Call this early on in the static constructor. Declaration public static void ResolveDynDllImports(this Type type, Dictionary<string, DynDllMapping> mappings = null) Parameters Type Name Description System.Type type The type containing the DynDllImport delegate fields. System.Collections.Generic.Dictionary < System.String , DynDllMapping > mappings Any optional mappings similar to the static mappings. TryGetFunction(IntPtr, String, out IntPtr) Get a function pointer for a function in the given library. Declaration public static bool TryGetFunction(this IntPtr lib, string name, out IntPtr ptr) Parameters Type Name Description System.IntPtr lib The library handle. System.String name The function name. System.IntPtr ptr The function pointer, or null if it wasn't found. Returns Type Description System.Boolean True if the function pointer was obtained, false otherwise. TryOpenLibrary(String, out IntPtr, Boolean, Nullable<Int32>) Try to open a given library and get its handle. Declaration public static bool TryOpenLibrary(string name, out IntPtr lib, bool skipMapping = false, Nullable<int> flags = null) Parameters Type Name Description System.String name The library name. System.IntPtr lib The library handle, or null if it failed loading. System.Boolean skipMapping Whether to skip using the mapping or not. System.Nullable < System.Int32 > flags Any optional platform-specific flags. Returns Type Description System.Boolean True if the handle was obtained, false otherwise."
  },
  "api/MonoMod.Utils.DMDGenerator-1.html": {
    "href": "api/MonoMod.Utils.DMDGenerator-1.html",
    "title": "Class DMDGenerator<TSelf> | MonoMod",
    "keywords": "Class DMDGenerator<TSelf> A DynamicMethodDefinition \"generator\", responsible for generating a runtime MethodInfo from a DMD MethodDefinition. Inheritance System.Object DMDGenerator<TSelf> DMDCecilGenerator DMDEmitDynamicMethodGenerator Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public abstract class DMDGenerator<TSelf> : Object, _IDMDGenerator where TSelf : DMDGenerator<TSelf>, new() Type Parameters Name Description TSelf Constructors DMDGenerator() Declaration protected DMDGenerator() Methods _Generate(DynamicMethodDefinition, Object) Declaration protected abstract MethodInfo _Generate(DynamicMethodDefinition dmd, object context) Parameters Type Name Description DynamicMethodDefinition dmd System.Object context Returns Type Description System.Reflection.MethodInfo Generate(DynamicMethodDefinition, Object) Declaration public static MethodInfo Generate(DynamicMethodDefinition dmd, object context = null) Parameters Type Name Description DynamicMethodDefinition dmd System.Object context Returns Type Description System.Reflection.MethodInfo"
  },
  "api/MonoMod.InlineRT.html": {
    "href": "api/MonoMod.InlineRT.html",
    "title": "Namespace MonoMod.InlineRT | MonoMod",
    "keywords": "Namespace MonoMod.InlineRT Classes MonoModRule MonoModRule.Data MonoModRule.Flag MonoModRulesManager"
  },
  "api/MonoMod.InlineRT.MonoModRule.Flag.html": {
    "href": "api/MonoMod.InlineRT.MonoModRule.Flag.html",
    "title": "Class MonoModRule.Flag | MonoMod",
    "keywords": "Class MonoModRule.Flag Inheritance System.Object MonoModRule.Flag Namespace : MonoMod.InlineRT Assembly : MonoMod.dll Syntax public static class Flag : Object Methods Get(String) Declaration public static bool Get(string k) Parameters Type Name Description System.String k Returns Type Description System.Boolean Set(String, Boolean) Declaration public static void Set(string k, bool v) Parameters Type Name Description System.String k System.Boolean v"
  },
  "api/MonoMod.InlineRT.MonoModRule.Data.html": {
    "href": "api/MonoMod.InlineRT.MonoModRule.Data.html",
    "title": "Class MonoModRule.Data | MonoMod",
    "keywords": "Class MonoModRule.Data Inheritance System.Object MonoModRule.Data Namespace : MonoMod.InlineRT Assembly : MonoMod.dll Syntax public static class Data : Object Methods Get(String) Declaration public static object Get(string k) Parameters Type Name Description System.String k Returns Type Description System.Object Set(String, Object) Declaration public static void Set(string k, object v) Parameters Type Name Description System.String k System.Object v"
  },
  "api/MonoMod.DebugIL.html": {
    "href": "api/MonoMod.DebugIL.html",
    "title": "Namespace MonoMod.DebugIL | MonoMod",
    "keywords": "Namespace MonoMod.DebugIL Classes DebugILGenerator DebugILGeneratorExt"
  },
  "api/MonoMod.DebugIL.DebugILGenerator.html": {
    "href": "api/MonoMod.DebugIL.DebugILGenerator.html",
    "title": "Class DebugILGenerator | MonoMod",
    "keywords": "Class DebugILGenerator Inheritance System.Object DebugILGenerator Namespace : MonoMod.DebugIL Assembly : MonoMod.DebugIL.dll Syntax public class DebugILGenerator : Object Constructors DebugILGenerator(MonoModder) Declaration public DebugILGenerator(MonoModder modder) Parameters Type Name Description MonoModder modder Fields CurrentPath Declaration public Stack<string> CurrentPath Field Value Type Description System.Collections.Generic.Stack < System.String > Line Declaration public int Line Field Value Type Description System.Int32 m_DebuggableAttribute_ctor Declaration public static readonly ConstructorInfo m_DebuggableAttribute_ctor Field Value Type Description System.Reflection.ConstructorInfo Modder Declaration public MonoModder Modder Field Value Type Description MonoModder OutputPath Declaration public string OutputPath Field Value Type Description System.String PathVerifyRegex Declaration public static readonly Regex PathVerifyRegex Field Value Type Description System.Text.RegularExpressions.Regex Relative Declaration public bool Relative Field Value Type Description System.Boolean SkipMaxStack Declaration public bool SkipMaxStack Field Value Type Description System.Boolean Properties FullPath Declaration public string FullPath { get; } Property Value Type Description System.String Methods DeleteRecursive(String) Declaration public static void DeleteRecursive(string path) Parameters Type Name Description System.String path Generate() Declaration public void Generate() Generate(MonoModder) Declaration public static void Generate(MonoModder modder) Parameters Type Name Description MonoModder modder GenerateFor(MethodDefinition) Declaration public void GenerateFor(MethodDefinition method) Parameters Type Name Description Mono.Cecil.MethodDefinition method GenerateFor(TypeDefinition) Declaration public void GenerateFor(TypeDefinition type) Parameters Type Name Description Mono.Cecil.TypeDefinition type GenerateMetadata() Declaration public void GenerateMetadata()"
  },
  "api/MonoMod.Cil.SearchTarget.html": {
    "href": "api/MonoMod.Cil.SearchTarget.html",
    "title": "Class SearchTarget | MonoMod",
    "keywords": "Class SearchTarget Indicates whether the position of a ILCursor is the result of a search function and if the next search should ignore the instruction preceeding or following this cursor. SearchTarget.Next is the result of searching with MoveType.Before, and SearchTarget.Prev from MoveType.After Inheritance System.Object SearchTarget Namespace : MonoMod.Cil Assembly : MonoMod.Utils.dll Syntax public sealed class SearchTarget : Enum Fields Next A foward searching function cannot match the Next instruction and must move the cursor forward Declaration public const SearchTarget Next Field Value Type Description SearchTarget None Declaration public const SearchTarget None Field Value Type Description SearchTarget Prev A reverse searching function cannot match the Next instruction and must move the cursor backward Declaration public const SearchTarget Prev Field Value Type Description SearchTarget value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/MonoMod.Cil.NopILReferenceBag.html": {
    "href": "api/MonoMod.Cil.NopILReferenceBag.html",
    "title": "Class NopILReferenceBag | MonoMod",
    "keywords": "Class NopILReferenceBag The default IL reference bag. Throws NotSupportedException for every operation. Inheritance System.Object NopILReferenceBag Implements IILReferenceBag Namespace : MonoMod.Cil Assembly : MonoMod.Utils.dll Syntax public sealed class NopILReferenceBag : Object, IILReferenceBag Constructors NopILReferenceBag() Declaration public NopILReferenceBag() Fields Instance Declaration public static readonly NopILReferenceBag Instance Field Value Type Description NopILReferenceBag Methods Clear<T>(Int32) Declaration public void Clear<T>(int id) Parameters Type Name Description System.Int32 id Type Parameters Name Description T Get<T>(Int32) Declaration public T Get<T>(int id) Parameters Type Name Description System.Int32 id Returns Type Description T Type Parameters Name Description T GetDelegateInvoker<T>() Declaration public MethodInfo GetDelegateInvoker<T>() where T : Delegate Returns Type Description System.Reflection.MethodInfo Type Parameters Name Description T GetGetter<T>() Declaration public MethodInfo GetGetter<T>() Returns Type Description System.Reflection.MethodInfo Type Parameters Name Description T Store<T>(T) Declaration public int Store<T>(T t) Parameters Type Name Description T t Returns Type Description System.Int32 Type Parameters Name Description T Implements IILReferenceBag"
  },
  "api/MonoMod.Cil.ILPatternMatchingExt.html": {
    "href": "api/MonoMod.Cil.ILPatternMatchingExt.html",
    "title": "Class ILPatternMatchingExt | MonoMod",
    "keywords": "Class ILPatternMatchingExt Inheritance System.Object ILPatternMatchingExt Namespace : MonoMod.Cil Assembly : MonoMod.Utils.dll Syntax public static class ILPatternMatchingExt : Object Methods Match(Instruction, OpCode) Declaration public static bool Match(this Instruction instr, OpCode opcode) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.Cil.OpCode opcode Returns Type Description System.Boolean Match<T>(Instruction, OpCode, T) Declaration public static bool Match<T>(this Instruction instr, OpCode opcode, T value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.Cil.OpCode opcode T value Returns Type Description System.Boolean Type Parameters Name Description T Match<T>(Instruction, OpCode, out T) Declaration public static bool Match<T>(this Instruction instr, OpCode opcode, out T value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.Cil.OpCode opcode T value Returns Type Description System.Boolean Type Parameters Name Description T MatchAdd(Instruction) Declaration public static bool MatchAdd(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchAdd_OvfUn(Instruction) Declaration public static bool MatchAdd_OvfUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchAddOvf(Instruction) Declaration public static bool MatchAddOvf(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchAnd(Instruction) Declaration public static bool MatchAnd(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchArglist(Instruction) Declaration public static bool MatchArglist(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchBeq(Instruction, ILLabel) Declaration public static bool MatchBeq(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBeq(Instruction, out ILLabel) Declaration public static bool MatchBeq(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBge(Instruction, ILLabel) Declaration public static bool MatchBge(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBge(Instruction, out ILLabel) Declaration public static bool MatchBge(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBgeUn(Instruction, ILLabel) Declaration public static bool MatchBgeUn(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBgeUn(Instruction, out ILLabel) Declaration public static bool MatchBgeUn(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBgt(Instruction, ILLabel) Declaration public static bool MatchBgt(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBgt(Instruction, out ILLabel) Declaration public static bool MatchBgt(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBgtUn(Instruction, ILLabel) Declaration public static bool MatchBgtUn(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBgtUn(Instruction, out ILLabel) Declaration public static bool MatchBgtUn(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBle(Instruction, ILLabel) Declaration public static bool MatchBle(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBle(Instruction, out ILLabel) Declaration public static bool MatchBle(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBleUn(Instruction, ILLabel) Declaration public static bool MatchBleUn(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBleUn(Instruction, out ILLabel) Declaration public static bool MatchBleUn(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBlt(Instruction, ILLabel) Declaration public static bool MatchBlt(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBlt(Instruction, out ILLabel) Declaration public static bool MatchBlt(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBltUn(Instruction, ILLabel) Declaration public static bool MatchBltUn(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBltUn(Instruction, out ILLabel) Declaration public static bool MatchBltUn(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBneUn(Instruction, ILLabel) Declaration public static bool MatchBneUn(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBneUn(Instruction, out ILLabel) Declaration public static bool MatchBneUn(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBox(Instruction, TypeReference) Declaration public static bool MatchBox(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchBox(Instruction, out TypeReference) Declaration public static bool MatchBox(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchBox(Instruction, String) Declaration public static bool MatchBox(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchBox(Instruction, Type) Declaration public static bool MatchBox(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchBox<T>(Instruction) Declaration public static bool MatchBox<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchBr(Instruction, ILLabel) Declaration public static bool MatchBr(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBr(Instruction, out ILLabel) Declaration public static bool MatchBr(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBreak(Instruction) Declaration public static bool MatchBreak(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchBrfalse(Instruction, ILLabel) Declaration public static bool MatchBrfalse(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBrfalse(Instruction, out ILLabel) Declaration public static bool MatchBrfalse(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBrtrue(Instruction, ILLabel) Declaration public static bool MatchBrtrue(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchBrtrue(Instruction, out ILLabel) Declaration public static bool MatchBrtrue(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchCall(Instruction, MethodReference) Declaration public static bool MatchCall(this Instruction instr, MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchCall(Instruction, out MethodReference) Declaration public static bool MatchCall(this Instruction instr, out MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchCall(Instruction, MethodBase) Declaration public static bool MatchCall(this Instruction instr, MethodBase value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.MethodBase value Returns Type Description System.Boolean MatchCall(Instruction, String, String) Declaration public static bool MatchCall(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchCall(Instruction, Type, String) Declaration public static bool MatchCall(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchCall<T>(Instruction, String) Declaration public static bool MatchCall<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchCalli(Instruction, IMethodSignature) Declaration public static bool MatchCalli(this Instruction instr, IMethodSignature value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.IMethodSignature value Returns Type Description System.Boolean MatchCalli(Instruction, out IMethodSignature) Declaration public static bool MatchCalli(this Instruction instr, out IMethodSignature value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.IMethodSignature value Returns Type Description System.Boolean MatchCallOrCallvirt(Instruction, MethodReference) Declaration public static bool MatchCallOrCallvirt(this Instruction instr, MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchCallOrCallvirt(Instruction, out MethodReference) Declaration public static bool MatchCallOrCallvirt(this Instruction instr, out MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchCallOrCallvirt(Instruction, MethodBase) Declaration public static bool MatchCallOrCallvirt(this Instruction instr, MethodBase value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.MethodBase value Returns Type Description System.Boolean MatchCallOrCallvirt(Instruction, String, String) Declaration public static bool MatchCallOrCallvirt(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchCallOrCallvirt(Instruction, Type, String) Declaration public static bool MatchCallOrCallvirt(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchCallOrCallvirt<T>(Instruction, String) Declaration public static bool MatchCallOrCallvirt<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchCallvirt(Instruction, MethodReference) Declaration public static bool MatchCallvirt(this Instruction instr, MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchCallvirt(Instruction, out MethodReference) Declaration public static bool MatchCallvirt(this Instruction instr, out MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchCallvirt(Instruction, MethodBase) Declaration public static bool MatchCallvirt(this Instruction instr, MethodBase value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.MethodBase value Returns Type Description System.Boolean MatchCallvirt(Instruction, String, String) Declaration public static bool MatchCallvirt(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchCallvirt(Instruction, Type, String) Declaration public static bool MatchCallvirt(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchCallvirt<T>(Instruction, String) Declaration public static bool MatchCallvirt<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchCastclass(Instruction, TypeReference) Declaration public static bool MatchCastclass(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchCastclass(Instruction, out TypeReference) Declaration public static bool MatchCastclass(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchCastclass(Instruction, String) Declaration public static bool MatchCastclass(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchCastclass(Instruction, Type) Declaration public static bool MatchCastclass(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchCastclass<T>(Instruction) Declaration public static bool MatchCastclass<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchCeq(Instruction) Declaration public static bool MatchCeq(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchCgt(Instruction) Declaration public static bool MatchCgt(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchCgtUn(Instruction) Declaration public static bool MatchCgtUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchCkfinite(Instruction) Declaration public static bool MatchCkfinite(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchClt(Instruction) Declaration public static bool MatchClt(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchCltUn(Instruction) Declaration public static bool MatchCltUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConstrained(Instruction, TypeReference) Declaration public static bool MatchConstrained(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchConstrained(Instruction, out TypeReference) Declaration public static bool MatchConstrained(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchConstrained(Instruction, String) Declaration public static bool MatchConstrained(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchConstrained(Instruction, Type) Declaration public static bool MatchConstrained(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchConstrained<T>(Instruction) Declaration public static bool MatchConstrained<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchConv_OvfI(Instruction) Declaration public static bool MatchConv_OvfI(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConv_OvfU(Instruction) Declaration public static bool MatchConv_OvfU(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvI(Instruction) Declaration public static bool MatchConvI(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvI1(Instruction) Declaration public static bool MatchConvI1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvI2(Instruction) Declaration public static bool MatchConvI2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvI4(Instruction) Declaration public static bool MatchConvI4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvI8(Instruction) Declaration public static bool MatchConvI8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfI1(Instruction) Declaration public static bool MatchConvOvfI1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfI1Un(Instruction) Declaration public static bool MatchConvOvfI1Un(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfI2(Instruction) Declaration public static bool MatchConvOvfI2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfI2Un(Instruction) Declaration public static bool MatchConvOvfI2Un(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfI4(Instruction) Declaration public static bool MatchConvOvfI4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfI4Un(Instruction) Declaration public static bool MatchConvOvfI4Un(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfI8(Instruction) Declaration public static bool MatchConvOvfI8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfI8Un(Instruction) Declaration public static bool MatchConvOvfI8Un(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfIUn(Instruction) Declaration public static bool MatchConvOvfIUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfU1(Instruction) Declaration public static bool MatchConvOvfU1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfU1Un(Instruction) Declaration public static bool MatchConvOvfU1Un(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfU2(Instruction) Declaration public static bool MatchConvOvfU2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfU2Un(Instruction) Declaration public static bool MatchConvOvfU2Un(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfU4(Instruction) Declaration public static bool MatchConvOvfU4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfU4Un(Instruction) Declaration public static bool MatchConvOvfU4Un(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfU8(Instruction) Declaration public static bool MatchConvOvfU8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfU8Un(Instruction) Declaration public static bool MatchConvOvfU8Un(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvOvfUUn(Instruction) Declaration public static bool MatchConvOvfUUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvR4(Instruction) Declaration public static bool MatchConvR4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvR8(Instruction) Declaration public static bool MatchConvR8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvRUn(Instruction) Declaration public static bool MatchConvRUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvU(Instruction) Declaration public static bool MatchConvU(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvU1(Instruction) Declaration public static bool MatchConvU1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvU2(Instruction) Declaration public static bool MatchConvU2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvU4(Instruction) Declaration public static bool MatchConvU4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchConvU8(Instruction) Declaration public static bool MatchConvU8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchCpblk(Instruction) Declaration public static bool MatchCpblk(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchCpobj(Instruction, TypeReference) Declaration public static bool MatchCpobj(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchCpobj(Instruction, out TypeReference) Declaration public static bool MatchCpobj(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchCpobj(Instruction, String) Declaration public static bool MatchCpobj(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchCpobj(Instruction, Type) Declaration public static bool MatchCpobj(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchCpobj<T>(Instruction) Declaration public static bool MatchCpobj<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchDiv(Instruction) Declaration public static bool MatchDiv(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchDivUn(Instruction) Declaration public static bool MatchDivUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchDup(Instruction) Declaration public static bool MatchDup(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchEndfilter(Instruction) Declaration public static bool MatchEndfilter(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchEndfinally(Instruction) Declaration public static bool MatchEndfinally(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchInitblk(Instruction) Declaration public static bool MatchInitblk(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchInitobj(Instruction, TypeReference) Declaration public static bool MatchInitobj(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchInitobj(Instruction, out TypeReference) Declaration public static bool MatchInitobj(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchInitobj(Instruction, String) Declaration public static bool MatchInitobj(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchInitobj(Instruction, Type) Declaration public static bool MatchInitobj(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchInitobj<T>(Instruction) Declaration public static bool MatchInitobj<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchIsinst(Instruction, TypeReference) Declaration public static bool MatchIsinst(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchIsinst(Instruction, out TypeReference) Declaration public static bool MatchIsinst(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchIsinst(Instruction, String) Declaration public static bool MatchIsinst(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchIsinst(Instruction, Type) Declaration public static bool MatchIsinst(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchIsinst<T>(Instruction) Declaration public static bool MatchIsinst<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchJmp(Instruction, MethodReference) Declaration public static bool MatchJmp(this Instruction instr, MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchJmp(Instruction, out MethodReference) Declaration public static bool MatchJmp(this Instruction instr, out MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchJmp(Instruction, MethodBase) Declaration public static bool MatchJmp(this Instruction instr, MethodBase value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.MethodBase value Returns Type Description System.Boolean MatchJmp(Instruction, String, String) Declaration public static bool MatchJmp(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchJmp(Instruction, Type, String) Declaration public static bool MatchJmp(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchJmp<T>(Instruction, String) Declaration public static bool MatchJmp<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchLdarg(Instruction, Int32) Declaration public static bool MatchLdarg(this Instruction instr, int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchLdarg(Instruction, out Int32) Declaration public static bool MatchLdarg(this Instruction instr, out int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchLdarg0(Instruction) Declaration public static bool MatchLdarg0(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdarg1(Instruction) Declaration public static bool MatchLdarg1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdarg2(Instruction) Declaration public static bool MatchLdarg2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdarg3(Instruction) Declaration public static bool MatchLdarg3(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdarga(Instruction, Int32) Declaration public static bool MatchLdarga(this Instruction instr, int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchLdarga(Instruction, out Int32) Declaration public static bool MatchLdarga(this Instruction instr, out int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchLdcI4(Instruction, Int32) Declaration public static bool MatchLdcI4(this Instruction instr, int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchLdcI4(Instruction, out Int32) Declaration public static bool MatchLdcI4(this Instruction instr, out int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchLdcI8(Instruction, Int64) Declaration public static bool MatchLdcI8(this Instruction instr, long value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int64 value Returns Type Description System.Boolean MatchLdcI8(Instruction, out Int64) Declaration public static bool MatchLdcI8(this Instruction instr, out long value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int64 value Returns Type Description System.Boolean MatchLdcR4(Instruction, Single) Declaration public static bool MatchLdcR4(this Instruction instr, float value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Single value Returns Type Description System.Boolean MatchLdcR4(Instruction, out Single) Declaration public static bool MatchLdcR4(this Instruction instr, out float value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Single value Returns Type Description System.Boolean MatchLdcR8(Instruction, Double) Declaration public static bool MatchLdcR8(this Instruction instr, double value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Double value Returns Type Description System.Boolean MatchLdcR8(Instruction, out Double) Declaration public static bool MatchLdcR8(this Instruction instr, out double value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Double value Returns Type Description System.Boolean MatchLdelema(Instruction, TypeReference) Declaration public static bool MatchLdelema(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchLdelema(Instruction, out TypeReference) Declaration public static bool MatchLdelema(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchLdelema(Instruction, String) Declaration public static bool MatchLdelema(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchLdelema(Instruction, Type) Declaration public static bool MatchLdelema(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchLdelema<T>(Instruction) Declaration public static bool MatchLdelema<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchLdelemAny(Instruction, TypeReference) Declaration public static bool MatchLdelemAny(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchLdelemAny(Instruction, out TypeReference) Declaration public static bool MatchLdelemAny(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchLdelemAny(Instruction, String) Declaration public static bool MatchLdelemAny(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchLdelemAny(Instruction, Type) Declaration public static bool MatchLdelemAny(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchLdelemAny<T>(Instruction) Declaration public static bool MatchLdelemAny<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchLdelemI(Instruction) Declaration public static bool MatchLdelemI(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdelemI1(Instruction) Declaration public static bool MatchLdelemI1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdelemI2(Instruction) Declaration public static bool MatchLdelemI2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdelemI4(Instruction) Declaration public static bool MatchLdelemI4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdelemI8(Instruction) Declaration public static bool MatchLdelemI8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdelemR4(Instruction) Declaration public static bool MatchLdelemR4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdelemR8(Instruction) Declaration public static bool MatchLdelemR8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdelemRef(Instruction) Declaration public static bool MatchLdelemRef(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdelemU1(Instruction) Declaration public static bool MatchLdelemU1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdelemU2(Instruction) Declaration public static bool MatchLdelemU2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdelemU4(Instruction) Declaration public static bool MatchLdelemU4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdfld(Instruction, FieldReference) Declaration public static bool MatchLdfld(this Instruction instr, FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchLdfld(Instruction, out FieldReference) Declaration public static bool MatchLdfld(this Instruction instr, out FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchLdfld(Instruction, FieldInfo) Declaration public static bool MatchLdfld(this Instruction instr, FieldInfo value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.FieldInfo value Returns Type Description System.Boolean MatchLdfld(Instruction, String, String) Declaration public static bool MatchLdfld(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchLdfld(Instruction, Type, String) Declaration public static bool MatchLdfld(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchLdfld<T>(Instruction, String) Declaration public static bool MatchLdfld<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchLdflda(Instruction, FieldReference) Declaration public static bool MatchLdflda(this Instruction instr, FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchLdflda(Instruction, out FieldReference) Declaration public static bool MatchLdflda(this Instruction instr, out FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchLdflda(Instruction, FieldInfo) Declaration public static bool MatchLdflda(this Instruction instr, FieldInfo value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.FieldInfo value Returns Type Description System.Boolean MatchLdflda(Instruction, String, String) Declaration public static bool MatchLdflda(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchLdflda(Instruction, Type, String) Declaration public static bool MatchLdflda(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchLdflda<T>(Instruction, String) Declaration public static bool MatchLdflda<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchLdftn(Instruction, MethodReference) Declaration public static bool MatchLdftn(this Instruction instr, MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchLdftn(Instruction, out MethodReference) Declaration public static bool MatchLdftn(this Instruction instr, out MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchLdftn(Instruction, MethodBase) Declaration public static bool MatchLdftn(this Instruction instr, MethodBase value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.MethodBase value Returns Type Description System.Boolean MatchLdftn(Instruction, String, String) Declaration public static bool MatchLdftn(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchLdftn(Instruction, Type, String) Declaration public static bool MatchLdftn(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchLdftn<T>(Instruction, String) Declaration public static bool MatchLdftn<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchLdindI(Instruction) Declaration public static bool MatchLdindI(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdindI1(Instruction) Declaration public static bool MatchLdindI1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdindI2(Instruction) Declaration public static bool MatchLdindI2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdindI4(Instruction) Declaration public static bool MatchLdindI4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdindI8(Instruction) Declaration public static bool MatchLdindI8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdindR4(Instruction) Declaration public static bool MatchLdindR4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdindR8(Instruction) Declaration public static bool MatchLdindR8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdindRef(Instruction) Declaration public static bool MatchLdindRef(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdindU1(Instruction) Declaration public static bool MatchLdindU1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdindU2(Instruction) Declaration public static bool MatchLdindU2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdindU4(Instruction) Declaration public static bool MatchLdindU4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdlen(Instruction) Declaration public static bool MatchLdlen(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdloc(Instruction, Int32) Declaration public static bool MatchLdloc(this Instruction instr, int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchLdloc(Instruction, out Int32) Declaration public static bool MatchLdloc(this Instruction instr, out int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchLdloc0(Instruction) Declaration public static bool MatchLdloc0(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdloc1(Instruction) Declaration public static bool MatchLdloc1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdloc2(Instruction) Declaration public static bool MatchLdloc2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdloc3(Instruction) Declaration public static bool MatchLdloc3(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdloca(Instruction, Int32) Declaration public static bool MatchLdloca(this Instruction instr, int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchLdloca(Instruction, out Int32) Declaration public static bool MatchLdloca(this Instruction instr, out int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchLdnull(Instruction) Declaration public static bool MatchLdnull(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchLdobj(Instruction, TypeReference) Declaration public static bool MatchLdobj(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchLdobj(Instruction, out TypeReference) Declaration public static bool MatchLdobj(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchLdobj(Instruction, String) Declaration public static bool MatchLdobj(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchLdobj(Instruction, Type) Declaration public static bool MatchLdobj(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchLdobj<T>(Instruction) Declaration public static bool MatchLdobj<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchLdsfld(Instruction, FieldReference) Declaration public static bool MatchLdsfld(this Instruction instr, FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchLdsfld(Instruction, out FieldReference) Declaration public static bool MatchLdsfld(this Instruction instr, out FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchLdsfld(Instruction, FieldInfo) Declaration public static bool MatchLdsfld(this Instruction instr, FieldInfo value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.FieldInfo value Returns Type Description System.Boolean MatchLdsfld(Instruction, String, String) Declaration public static bool MatchLdsfld(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchLdsfld(Instruction, Type, String) Declaration public static bool MatchLdsfld(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchLdsfld<T>(Instruction, String) Declaration public static bool MatchLdsfld<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchLdsflda(Instruction, FieldReference) Declaration public static bool MatchLdsflda(this Instruction instr, FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchLdsflda(Instruction, out FieldReference) Declaration public static bool MatchLdsflda(this Instruction instr, out FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchLdsflda(Instruction, FieldInfo) Declaration public static bool MatchLdsflda(this Instruction instr, FieldInfo value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.FieldInfo value Returns Type Description System.Boolean MatchLdsflda(Instruction, String, String) Declaration public static bool MatchLdsflda(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchLdsflda(Instruction, Type, String) Declaration public static bool MatchLdsflda(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchLdsflda<T>(Instruction, String) Declaration public static bool MatchLdsflda<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchLdstr(Instruction, String) Declaration public static bool MatchLdstr(this Instruction instr, string value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String value Returns Type Description System.Boolean MatchLdstr(Instruction, out String) Declaration public static bool MatchLdstr(this Instruction instr, out string value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String value Returns Type Description System.Boolean MatchLdtoken(Instruction, IMetadataTokenProvider) Declaration public static bool MatchLdtoken(this Instruction instr, IMetadataTokenProvider value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.IMetadataTokenProvider value Returns Type Description System.Boolean MatchLdtoken(Instruction, out IMetadataTokenProvider) Declaration public static bool MatchLdtoken(this Instruction instr, out IMetadataTokenProvider value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.IMetadataTokenProvider value Returns Type Description System.Boolean MatchLdvirtftn(Instruction, MethodReference) Declaration public static bool MatchLdvirtftn(this Instruction instr, MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchLdvirtftn(Instruction, out MethodReference) Declaration public static bool MatchLdvirtftn(this Instruction instr, out MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchLdvirtftn(Instruction, MethodBase) Declaration public static bool MatchLdvirtftn(this Instruction instr, MethodBase value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.MethodBase value Returns Type Description System.Boolean MatchLdvirtftn(Instruction, String, String) Declaration public static bool MatchLdvirtftn(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchLdvirtftn(Instruction, Type, String) Declaration public static bool MatchLdvirtftn(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchLdvirtftn<T>(Instruction, String) Declaration public static bool MatchLdvirtftn<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchLeave(Instruction, ILLabel) Declaration public static bool MatchLeave(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchLeave(Instruction, out ILLabel) Declaration public static bool MatchLeave(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchLeaveS(Instruction, ILLabel) Declaration public static bool MatchLeaveS(this Instruction instr, ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchLeaveS(Instruction, out ILLabel) Declaration public static bool MatchLeaveS(this Instruction instr, out ILLabel value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel value Returns Type Description System.Boolean MatchLocalloc(Instruction) Declaration public static bool MatchLocalloc(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchMkrefany(Instruction, TypeReference) Declaration public static bool MatchMkrefany(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchMkrefany(Instruction, out TypeReference) Declaration public static bool MatchMkrefany(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchMkrefany(Instruction, String) Declaration public static bool MatchMkrefany(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchMkrefany(Instruction, Type) Declaration public static bool MatchMkrefany(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchMkrefany<T>(Instruction) Declaration public static bool MatchMkrefany<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchMul(Instruction) Declaration public static bool MatchMul(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchMulOvf(Instruction) Declaration public static bool MatchMulOvf(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchMulOvfUn(Instruction) Declaration public static bool MatchMulOvfUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchNeg(Instruction) Declaration public static bool MatchNeg(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchNewarr(Instruction, TypeReference) Declaration public static bool MatchNewarr(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchNewarr(Instruction, out TypeReference) Declaration public static bool MatchNewarr(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchNewarr(Instruction, String) Declaration public static bool MatchNewarr(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchNewarr(Instruction, Type) Declaration public static bool MatchNewarr(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchNewarr<T>(Instruction) Declaration public static bool MatchNewarr<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchNewobj(Instruction, MethodReference) Declaration public static bool MatchNewobj(this Instruction instr, MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchNewobj(Instruction, out MethodReference) Declaration public static bool MatchNewobj(this Instruction instr, out MethodReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.MethodReference value Returns Type Description System.Boolean MatchNewobj(Instruction, MethodBase) Declaration public static bool MatchNewobj(this Instruction instr, MethodBase value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.MethodBase value Returns Type Description System.Boolean MatchNewobj(Instruction, String) Declaration public static bool MatchNewobj(this Instruction instr, string typeFullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName Returns Type Description System.Boolean MatchNewobj(Instruction, Type) Declaration public static bool MatchNewobj(this Instruction instr, Type type) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type Returns Type Description System.Boolean MatchNewobj<T>(Instruction) Declaration public static bool MatchNewobj<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchNo(Instruction, SByte) Declaration public static bool MatchNo(this Instruction instr, sbyte value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.SByte value Returns Type Description System.Boolean MatchNo(Instruction, out SByte) Declaration public static bool MatchNo(this Instruction instr, out sbyte value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.SByte value Returns Type Description System.Boolean MatchNop(Instruction) Declaration public static bool MatchNop(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchNot(Instruction) Declaration public static bool MatchNot(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchOr(Instruction) Declaration public static bool MatchOr(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchPop(Instruction) Declaration public static bool MatchPop(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchReadonly(Instruction) Declaration public static bool MatchReadonly(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchRefanytype(Instruction) Declaration public static bool MatchRefanytype(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchRefanyval(Instruction, TypeReference) Declaration public static bool MatchRefanyval(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchRefanyval(Instruction, out TypeReference) Declaration public static bool MatchRefanyval(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchRefanyval(Instruction, String) Declaration public static bool MatchRefanyval(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchRefanyval(Instruction, Type) Declaration public static bool MatchRefanyval(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchRefanyval<T>(Instruction) Declaration public static bool MatchRefanyval<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchRem(Instruction) Declaration public static bool MatchRem(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchRemUn(Instruction) Declaration public static bool MatchRemUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchRet(Instruction) Declaration public static bool MatchRet(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchRethrow(Instruction) Declaration public static bool MatchRethrow(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchShl(Instruction) Declaration public static bool MatchShl(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchShr(Instruction) Declaration public static bool MatchShr(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchShrUn(Instruction) Declaration public static bool MatchShrUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchSizeof(Instruction, TypeReference) Declaration public static bool MatchSizeof(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchSizeof(Instruction, out TypeReference) Declaration public static bool MatchSizeof(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchSizeof(Instruction, String) Declaration public static bool MatchSizeof(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchSizeof(Instruction, Type) Declaration public static bool MatchSizeof(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchSizeof<T>(Instruction) Declaration public static bool MatchSizeof<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchStarg(Instruction, Int32) Declaration public static bool MatchStarg(this Instruction instr, int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchStarg(Instruction, out Int32) Declaration public static bool MatchStarg(this Instruction instr, out int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchStelemAny(Instruction, TypeReference) Declaration public static bool MatchStelemAny(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchStelemAny(Instruction, out TypeReference) Declaration public static bool MatchStelemAny(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchStelemAny(Instruction, String) Declaration public static bool MatchStelemAny(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchStelemAny(Instruction, Type) Declaration public static bool MatchStelemAny(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchStelemAny<T>(Instruction) Declaration public static bool MatchStelemAny<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchStelemI(Instruction) Declaration public static bool MatchStelemI(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStelemI1(Instruction) Declaration public static bool MatchStelemI1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStelemI2(Instruction) Declaration public static bool MatchStelemI2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStelemI4(Instruction) Declaration public static bool MatchStelemI4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStelemI8(Instruction) Declaration public static bool MatchStelemI8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStelemR4(Instruction) Declaration public static bool MatchStelemR4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStelemR8(Instruction) Declaration public static bool MatchStelemR8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStelemRef(Instruction) Declaration public static bool MatchStelemRef(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStfld(Instruction, FieldReference) Declaration public static bool MatchStfld(this Instruction instr, FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchStfld(Instruction, out FieldReference) Declaration public static bool MatchStfld(this Instruction instr, out FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchStfld(Instruction, FieldInfo) Declaration public static bool MatchStfld(this Instruction instr, FieldInfo value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.FieldInfo value Returns Type Description System.Boolean MatchStfld(Instruction, String, String) Declaration public static bool MatchStfld(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchStfld(Instruction, Type, String) Declaration public static bool MatchStfld(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchStfld<T>(Instruction, String) Declaration public static bool MatchStfld<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchStindI(Instruction) Declaration public static bool MatchStindI(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStindI1(Instruction) Declaration public static bool MatchStindI1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStindI2(Instruction) Declaration public static bool MatchStindI2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStindI4(Instruction) Declaration public static bool MatchStindI4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStindI8(Instruction) Declaration public static bool MatchStindI8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStindR4(Instruction) Declaration public static bool MatchStindR4(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStindR8(Instruction) Declaration public static bool MatchStindR8(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStindRef(Instruction) Declaration public static bool MatchStindRef(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStloc(Instruction, Int32) Declaration public static bool MatchStloc(this Instruction instr, int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchStloc(Instruction, out Int32) Declaration public static bool MatchStloc(this Instruction instr, out int value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Int32 value Returns Type Description System.Boolean MatchStloc0(Instruction) Declaration public static bool MatchStloc0(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStloc1(Instruction) Declaration public static bool MatchStloc1(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStloc2(Instruction) Declaration public static bool MatchStloc2(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStloc3(Instruction) Declaration public static bool MatchStloc3(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchStobj(Instruction, TypeReference) Declaration public static bool MatchStobj(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchStobj(Instruction, out TypeReference) Declaration public static bool MatchStobj(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchStobj(Instruction, String) Declaration public static bool MatchStobj(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchStobj(Instruction, Type) Declaration public static bool MatchStobj(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchStobj<T>(Instruction) Declaration public static bool MatchStobj<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchStsfld(Instruction, FieldReference) Declaration public static bool MatchStsfld(this Instruction instr, FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchStsfld(Instruction, out FieldReference) Declaration public static bool MatchStsfld(this Instruction instr, out FieldReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.FieldReference value Returns Type Description System.Boolean MatchStsfld(Instruction, FieldInfo) Declaration public static bool MatchStsfld(this Instruction instr, FieldInfo value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Reflection.FieldInfo value Returns Type Description System.Boolean MatchStsfld(Instruction, String, String) Declaration public static bool MatchStsfld(this Instruction instr, string typeFullName, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String typeFullName System.String name Returns Type Description System.Boolean MatchStsfld(Instruction, Type, String) Declaration public static bool MatchStsfld(this Instruction instr, Type type, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type type System.String name Returns Type Description System.Boolean MatchStsfld<T>(Instruction, String) Declaration public static bool MatchStsfld<T>(this Instruction instr, string name) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String name Returns Type Description System.Boolean Type Parameters Name Description T MatchSub(Instruction) Declaration public static bool MatchSub(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchSubOvf(Instruction) Declaration public static bool MatchSubOvf(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchSubOvfUn(Instruction) Declaration public static bool MatchSubOvfUn(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchSwitch(Instruction, ILLabel[]) Declaration public static bool MatchSwitch(this Instruction instr, ILLabel[] value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel [] value Returns Type Description System.Boolean MatchSwitch(Instruction, out ILLabel[]) Declaration public static bool MatchSwitch(this Instruction instr, out ILLabel[] value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr ILLabel [] value Returns Type Description System.Boolean MatchTail(Instruction) Declaration public static bool MatchTail(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchThrow(Instruction) Declaration public static bool MatchThrow(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchUnaligned(Instruction, SByte) Declaration public static bool MatchUnaligned(this Instruction instr, sbyte value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.SByte value Returns Type Description System.Boolean MatchUnaligned(Instruction, out SByte) Declaration public static bool MatchUnaligned(this Instruction instr, out sbyte value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.SByte value Returns Type Description System.Boolean MatchUnbox(Instruction, TypeReference) Declaration public static bool MatchUnbox(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchUnbox(Instruction, out TypeReference) Declaration public static bool MatchUnbox(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchUnbox(Instruction, String) Declaration public static bool MatchUnbox(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchUnbox(Instruction, Type) Declaration public static bool MatchUnbox(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchUnbox<T>(Instruction) Declaration public static bool MatchUnbox<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchUnboxAny(Instruction, TypeReference) Declaration public static bool MatchUnboxAny(this Instruction instr, TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchUnboxAny(Instruction, out TypeReference) Declaration public static bool MatchUnboxAny(this Instruction instr, out TypeReference value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Mono.Cecil.TypeReference value Returns Type Description System.Boolean MatchUnboxAny(Instruction, String) Declaration public static bool MatchUnboxAny(this Instruction instr, string fullName) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.String fullName Returns Type Description System.Boolean MatchUnboxAny(Instruction, Type) Declaration public static bool MatchUnboxAny(this Instruction instr, Type value) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr System.Type value Returns Type Description System.Boolean MatchUnboxAny<T>(Instruction) Declaration public static bool MatchUnboxAny<T>(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean Type Parameters Name Description T MatchVolatile(Instruction) Declaration public static bool MatchVolatile(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean MatchXor(Instruction) Declaration public static bool MatchXor(this Instruction instr) Parameters Type Name Description Mono.Cecil.Cil.Instruction instr Returns Type Description System.Boolean"
  },
  "api/MonoMod.Utils.MMReflectionImporter.html": {
    "href": "api/MonoMod.Utils.MMReflectionImporter.html",
    "title": "Class MMReflectionImporter | MonoMod",
    "keywords": "Class MMReflectionImporter Inheritance System.Object MMReflectionImporter Implements Mono.Cecil.IReflectionImporter Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class MMReflectionImporter : Object, IReflectionImporter Constructors MMReflectionImporter(ModuleDefinition) Declaration public MMReflectionImporter(ModuleDefinition module) Parameters Type Name Description Mono.Cecil.ModuleDefinition module Fields Provider Declaration public static readonly IReflectionImporterProvider Provider Field Value Type Description Mono.Cecil.IReflectionImporterProvider ProviderNoDefault Declaration public static readonly IReflectionImporterProvider ProviderNoDefault Field Value Type Description Mono.Cecil.IReflectionImporterProvider UseDefault Declaration public bool UseDefault Field Value Type Description System.Boolean Methods ImportModuleType(Module, IGenericParameterProvider) Declaration public TypeReference ImportModuleType(Module module, IGenericParameterProvider context) Parameters Type Name Description System.Reflection.Module module Mono.Cecil.IGenericParameterProvider context Returns Type Description Mono.Cecil.TypeReference ImportReference(AssemblyName) Declaration public AssemblyNameReference ImportReference(AssemblyName asm) Parameters Type Name Description System.Reflection.AssemblyName asm Returns Type Description Mono.Cecil.AssemblyNameReference ImportReference(FieldInfo, IGenericParameterProvider) Declaration public FieldReference ImportReference(FieldInfo field, IGenericParameterProvider context) Parameters Type Name Description System.Reflection.FieldInfo field Mono.Cecil.IGenericParameterProvider context Returns Type Description Mono.Cecil.FieldReference ImportReference(MethodBase, IGenericParameterProvider) Declaration public MethodReference ImportReference(MethodBase method, IGenericParameterProvider context) Parameters Type Name Description System.Reflection.MethodBase method Mono.Cecil.IGenericParameterProvider context Returns Type Description Mono.Cecil.MethodReference ImportReference(Type, IGenericParameterProvider) Declaration public TypeReference ImportReference(Type type, IGenericParameterProvider context) Parameters Type Name Description System.Type type Mono.Cecil.IGenericParameterProvider context Returns Type Description Mono.Cecil.TypeReference Implements Mono.Cecil.IReflectionImporter"
  },
  "api/MonoMod.Utils.LazyDisposable.html": {
    "href": "api/MonoMod.Utils.LazyDisposable.html",
    "title": "Class LazyDisposable | MonoMod",
    "keywords": "Class LazyDisposable Inheritance System.Object LazyDisposable Implements System.IDisposable Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class LazyDisposable : Object, IDisposable Constructors LazyDisposable() Declaration public LazyDisposable() LazyDisposable(Action) Declaration public LazyDisposable(Action a) Parameters Type Name Description System.Action a Methods Dispose() Declaration public void Dispose() Events OnDispose Declaration public event Action OnDispose Event Type Type Description System.Action Implements System.IDisposable"
  },
  "api/MonoMod.Utils.LazyDisposable-1.html": {
    "href": "api/MonoMod.Utils.LazyDisposable-1.html",
    "title": "Class LazyDisposable<T> | MonoMod",
    "keywords": "Class LazyDisposable<T> Inheritance System.Object LazyDisposable<T> Implements System.IDisposable Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class LazyDisposable<T> : Object, IDisposable Type Parameters Name Description T Constructors LazyDisposable(T) Declaration public LazyDisposable(T instance) Parameters Type Name Description T instance LazyDisposable(T, Action<T>) Declaration public LazyDisposable(T instance, Action<T> a) Parameters Type Name Description T instance System.Action <T> a Methods Dispose() Declaration public void Dispose() Events OnDispose Declaration public event Action<T> OnDispose Event Type Type Description System.Action <T> Implements System.IDisposable"
  },
  "api/MonoMod.Utils.DynData-1.html": {
    "href": "api/MonoMod.Utils.DynData-1.html",
    "title": "Class DynData<TTarget> | MonoMod",
    "keywords": "Class DynData<TTarget> Inheritance System.Object DynData<TTarget> Implements System.IDisposable Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class DynData<TTarget> : Object, IDisposable where TTarget : class Type Parameters Name Description TTarget Constructors DynData(TTarget) Declaration public DynData(TTarget obj) Parameters Type Name Description TTarget obj Fields Disposable Declaration public static readonly HashSet<string> Disposable Field Value Type Description System.Collections.Generic.HashSet < System.String > Properties Data Declaration public Dictionary<string, object> Data { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > Getters Declaration public Dictionary<string, Func<TTarget, object>> Getters { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Func <TTarget, System.Object >> IsAlive Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean Item[String] Declaration public object this[string name] { get; set; } Parameters Type Name Description System.String name Property Value Type Description System.Object Setters Declaration public Dictionary<string, Action<TTarget, object>> Setters { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Action <TTarget, System.Object >> Target Declaration public TTarget Target { get; } Property Value Type Description TTarget Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected override void Finalize() Get<T>(String) Declaration public T Get<T>(string name) Parameters Type Name Description System.String name Returns Type Description T Type Parameters Name Description T RegisterProperty(String, Func<TTarget, Object>, Action<TTarget, Object>) Declaration public void RegisterProperty(string name, Func<TTarget, object> getter, Action<TTarget, object> setter) Parameters Type Name Description System.String name System.Func <TTarget, System.Object > getter System.Action <TTarget, System.Object > setter Set<T>(String, T) Declaration public void Set<T>(string name, T value) Parameters Type Name Description System.String name T value Type Parameters Name Description T UnregisterProperty(String) Declaration public void UnregisterProperty(string name) Parameters Type Name Description System.String name Events OnInitialize Declaration public static event Action<DynData<TTarget>, TTarget> OnInitialize Event Type Type Description System.Action < DynData <TTarget>, TTarget> Implements System.IDisposable"
  },
  "api/MonoMod.Utils.DynamicMethodReference.html": {
    "href": "api/MonoMod.Utils.DynamicMethodReference.html",
    "title": "Class DynamicMethodReference | MonoMod",
    "keywords": "Class DynamicMethodReference Inheritance System.Object DynamicMethodReference Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public class DynamicMethodReference : MethodReference Constructors DynamicMethodReference(ModuleDefinition, DynamicMethod) Declaration public DynamicMethodReference(ModuleDefinition module, DynamicMethod dm) Parameters Type Name Description Mono.Cecil.ModuleDefinition module System.Reflection.Emit.DynamicMethod dm Fields DynamicMethod Declaration public DynamicMethod DynamicMethod Field Value Type Description System.Reflection.Emit.DynamicMethod"
  },
  "api/MonoMod.Utils.DynamicMethodHelper.html": {
    "href": "api/MonoMod.Utils.DynamicMethodHelper.html",
    "title": "Class DynamicMethodHelper | MonoMod",
    "keywords": "Class DynamicMethodHelper Inheritance System.Object DynamicMethodHelper Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public static class DynamicMethodHelper : Object Methods EmitGetReference<T>(ILProcessor, Int32) Emit a reference to an arbitrary object. Note that the references \"leak.\" Declaration public static int EmitGetReference<T>(this ILProcessor il, int id) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il System.Int32 id Returns Type Description System.Int32 Type Parameters Name Description T EmitGetReference<T>(ILGenerator, Int32) Emit a reference to an arbitrary object. Note that the references \"leak.\" Declaration public static int EmitGetReference<T>(this ILGenerator il, int id) Parameters Type Name Description System.Reflection.Emit.ILGenerator il System.Int32 id Returns Type Description System.Int32 Type Parameters Name Description T EmitReference<T>(ILProcessor, T) Emit a reference to an arbitrary object. Note that the references \"leak.\" Declaration public static int EmitReference<T>(this ILProcessor il, T obj) Parameters Type Name Description Mono.Cecil.Cil.ILProcessor il T obj Returns Type Description System.Int32 Type Parameters Name Description T EmitReference<T>(ILGenerator, T) Emit a reference to an arbitrary object. Note that the references \"leak.\" Declaration public static int EmitReference<T>(this ILGenerator il, T obj) Parameters Type Name Description System.Reflection.Emit.ILGenerator il T obj Returns Type Description System.Int32 Type Parameters Name Description T FreeReference(Int32) Declaration public static void FreeReference(int id) Parameters Type Name Description System.Int32 id GetReference(Int32) Declaration public static object GetReference(int id) Parameters Type Name Description System.Int32 id Returns Type Description System.Object SetReference(Int32, Object) Declaration public static void SetReference(int id, object obj) Parameters Type Name Description System.Int32 id System.Object obj Stub(DynamicMethodDefinition) Fill the DynamicMethod with a stub. Declaration public static DynamicMethodDefinition Stub(this DynamicMethodDefinition dmd) Parameters Type Name Description DynamicMethodDefinition dmd Returns Type Description DynamicMethodDefinition Stub(DynamicMethod) Fill the DynamicMethod with a stub. Declaration public static DynamicMethod Stub(this DynamicMethod dm) Parameters Type Name Description System.Reflection.Emit.DynamicMethod dm Returns Type Description System.Reflection.Emit.DynamicMethod"
  },
  "api/MonoMod.Utils.DynamicMethodDefinition.html": {
    "href": "api/MonoMod.Utils.DynamicMethodDefinition.html",
    "title": "Class DynamicMethodDefinition | MonoMod",
    "keywords": "Class DynamicMethodDefinition Inheritance System.Object DynamicMethodDefinition Implements System.IDisposable Namespace : MonoMod.Utils Assembly : MonoMod.Utils.dll Syntax public sealed class DynamicMethodDefinition : Object, IDisposable Constructors DynamicMethodDefinition(MethodBase) Declaration public DynamicMethodDefinition(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method DynamicMethodDefinition(String, Type, Type[]) Declaration public DynamicMethodDefinition(string name, Type returnType, Type[] parameterTypes) Parameters Type Name Description System.String name System.Type returnType System.Type [] parameterTypes Fields Debug Declaration public bool Debug Field Value Type Description System.Boolean Properties Definition Declaration public MethodDefinition Definition { get; } Property Value Type Description Mono.Cecil.MethodDefinition Method Declaration public MethodBase Method { get; } Property Value Type Description System.Reflection.MethodBase Module Declaration public ModuleDefinition Module { get; } Property Value Type Description Mono.Cecil.ModuleDefinition OriginalMethod Declaration public MethodBase OriginalMethod { get; } Property Value Type Description System.Reflection.MethodBase Methods Dispose() Declaration public void Dispose() Generate() Declaration public MethodInfo Generate() Returns Type Description System.Reflection.MethodInfo Generate(Object) Declaration public MethodInfo Generate(object context) Parameters Type Name Description System.Object context Returns Type Description System.Reflection.MethodInfo GetDumpName(String) Declaration public string GetDumpName(string type) Parameters Type Name Description System.String type Returns Type Description System.String GetILGenerator() Declaration public ILGenerator GetILGenerator() Returns Type Description System.Reflection.Emit.ILGenerator GetILProcessor() Declaration public ILProcessor GetILProcessor() Returns Type Description Mono.Cecil.Cil.ILProcessor Reload() Declaration public void Reload() Implements System.IDisposable Extension Methods DetourHelper.StubCriticalDetour(DynamicMethodDefinition) DynamicMethodHelper.Stub(DynamicMethodDefinition)"
  },
  "api/MonoMod.Utils.Cil.ILGeneratorShim.html": {
    "href": "api/MonoMod.Utils.Cil.ILGeneratorShim.html",
    "title": "Class ILGeneratorShim | MonoMod",
    "keywords": "Class ILGeneratorShim Abstract version of System.Reflection.Emit.ILGenerator. See System.Reflection.Emit.ILGenerator for proper documentation. Inheritance System.Object ILGeneratorShim CecilILGenerator Namespace : MonoMod.Utils.Cil Assembly : MonoMod.Utils.dll Syntax public abstract class ILGeneratorShim : Object Constructors ILGeneratorShim() Declaration protected ILGeneratorShim() Properties ILOffset Declaration public abstract int ILOffset { get; } Property Value Type Description System.Int32 ProxyType Get the non-generic proxy type implementing ILGenerator. Declaration public static Type ProxyType { get; } Property Value Type Description System.Type The \"real\" ILGenerator type, non-generic. Methods BeginCatchBlock(Type) Declaration public abstract void BeginCatchBlock(Type exceptionType) Parameters Type Name Description System.Type exceptionType BeginExceptFilterBlock() Declaration public abstract void BeginExceptFilterBlock() BeginExceptionBlock() Declaration public abstract Label BeginExceptionBlock() Returns Type Description System.Reflection.Emit.Label BeginFaultBlock() Declaration public abstract void BeginFaultBlock() BeginFinallyBlock() Declaration public abstract void BeginFinallyBlock() BeginScope() Declaration public abstract void BeginScope() DeclareLocal(Type) Declaration public abstract LocalBuilder DeclareLocal(Type localType) Parameters Type Name Description System.Type localType Returns Type Description System.Reflection.Emit.LocalBuilder DeclareLocal(Type, Boolean) Declaration public abstract LocalBuilder DeclareLocal(Type localType, bool pinned) Parameters Type Name Description System.Type localType System.Boolean pinned Returns Type Description System.Reflection.Emit.LocalBuilder DefineLabel() Declaration public abstract Label DefineLabel() Returns Type Description System.Reflection.Emit.Label Emit(OpCode) Declaration public abstract void Emit(OpCode opcode) Parameters Type Name Description System.Reflection.Emit.OpCode opcode Emit(OpCode, Byte) Declaration public abstract void Emit(OpCode opcode, byte arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Byte arg Emit(OpCode, Double) Declaration public abstract void Emit(OpCode opcode, double arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Double arg Emit(OpCode, Int16) Declaration public abstract void Emit(OpCode opcode, short arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Int16 arg Emit(OpCode, Int32) Declaration public abstract void Emit(OpCode opcode, int arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Int32 arg Emit(OpCode, Int64) Declaration public abstract void Emit(OpCode opcode, long arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Int64 arg Emit(OpCode, ConstructorInfo) Declaration public abstract void Emit(OpCode opcode, ConstructorInfo con) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.ConstructorInfo con Emit(OpCode, Label) Declaration public abstract void Emit(OpCode opcode, Label label) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.Emit.Label label Emit(OpCode, Label[]) Declaration public abstract void Emit(OpCode opcode, Label[] labels) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.Emit.Label [] labels Emit(OpCode, LocalBuilder) Declaration public abstract void Emit(OpCode opcode, LocalBuilder local) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.Emit.LocalBuilder local Emit(OpCode, SignatureHelper) Declaration public abstract void Emit(OpCode opcode, SignatureHelper signature) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.Emit.SignatureHelper signature Emit(OpCode, FieldInfo) Declaration public abstract void Emit(OpCode opcode, FieldInfo field) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.FieldInfo field Emit(OpCode, MethodInfo) Declaration public abstract void Emit(OpCode opcode, MethodInfo meth) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.MethodInfo meth Emit(OpCode, SByte) Declaration public abstract void Emit(OpCode opcode, sbyte arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.SByte arg Emit(OpCode, Single) Declaration public abstract void Emit(OpCode opcode, float arg) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Single arg Emit(OpCode, String) Declaration public abstract void Emit(OpCode opcode, string str) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.String str Emit(OpCode, Type) Declaration public abstract void Emit(OpCode opcode, Type cls) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Type cls EmitCall(OpCode, MethodInfo, Type[]) Declaration public abstract void EmitCall(OpCode opcode, MethodInfo methodInfo, Type[] optionalParameterTypes) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.MethodInfo methodInfo System.Type [] optionalParameterTypes EmitCalli(OpCode, CallingConventions, Type, Type[], Type[]) Declaration public abstract void EmitCalli(OpCode opcode, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type[] optionalParameterTypes) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Reflection.CallingConventions callingConvention System.Type returnType System.Type [] parameterTypes System.Type [] optionalParameterTypes EmitCalli(OpCode, CallingConvention, Type, Type[]) Declaration public abstract void EmitCalli(OpCode opcode, CallingConvention unmanagedCallConv, Type returnType, Type[] parameterTypes) Parameters Type Name Description System.Reflection.Emit.OpCode opcode System.Runtime.InteropServices.CallingConvention unmanagedCallConv System.Type returnType System.Type [] parameterTypes EmitWriteLine(LocalBuilder) Declaration public abstract void EmitWriteLine(LocalBuilder localBuilder) Parameters Type Name Description System.Reflection.Emit.LocalBuilder localBuilder EmitWriteLine(FieldInfo) Declaration public abstract void EmitWriteLine(FieldInfo fld) Parameters Type Name Description System.Reflection.FieldInfo fld EmitWriteLine(String) Declaration public abstract void EmitWriteLine(string value) Parameters Type Name Description System.String value EndExceptionBlock() Declaration public abstract void EndExceptionBlock() EndScope() Declaration public abstract void EndScope() GetProxy() Get a \"real\" ILGenerator for this ILGeneratorShim. Declaration public ILGenerator GetProxy() Returns Type Description System.Reflection.Emit.ILGenerator A \"real\" ILGenerator. GetProxyType(Type) Get the proxy type for a given ILGeneratorShim type. The proxy type implements ILGenerator. Declaration public static Type GetProxyType(Type tShim) Parameters Type Name Description System.Type tShim The ILGeneratorShim type. Returns Type Description System.Type The \"real\" ILGenerator type. GetProxyType<TShim>() Get the proxy type for a given ILGeneratorShim type. The proxy type implements ILGenerator. Declaration public static Type GetProxyType<TShim>() where TShim : ILGeneratorShim Returns Type Description System.Type The \"real\" ILGenerator type. Type Parameters Name Description TShim The ILGeneratorShim type. MarkLabel(Label) Declaration public abstract void MarkLabel(Label loc) Parameters Type Name Description System.Reflection.Emit.Label loc ThrowException(Type) Declaration public abstract void ThrowException(Type excType) Parameters Type Name Description System.Type excType UsingNamespace(String) Declaration public abstract void UsingNamespace(string usingNamespace) Parameters Type Name Description System.String usingNamespace"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourNativeX86Platform.DetourType.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourNativeX86Platform.DetourType.html",
    "title": "Class DetourNativeX86Platform.DetourType | MonoMod",
    "keywords": "Class DetourNativeX86Platform.DetourType Inheritance System.Object DetourNativeX86Platform.DetourType Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourType : Enum Fields Abs32 Declaration public const DetourNativeX86Platform.DetourType Abs32 Field Value Type Description DetourNativeX86Platform.DetourType Abs64 Declaration public const DetourNativeX86Platform.DetourType Abs64 Field Value Type Description DetourNativeX86Platform.DetourType Rel32 Declaration public const DetourNativeX86Platform.DetourType Rel32 Field Value Type Description DetourNativeX86Platform.DetourType value__ Declaration public byte value__ Field Value Type Description System.Byte"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourNativeWindowsPlatform.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourNativeWindowsPlatform.html",
    "title": "Class DetourNativeWindowsPlatform | MonoMod",
    "keywords": "Class DetourNativeWindowsPlatform Inheritance System.Object DetourNativeWindowsPlatform Implements IDetourNativePlatform Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourNativeWindowsPlatform : Object, IDetourNativePlatform Constructors DetourNativeWindowsPlatform(IDetourNativePlatform) Declaration public DetourNativeWindowsPlatform(IDetourNativePlatform inner) Parameters Type Name Description IDetourNativePlatform inner Methods Apply(NativeDetourData) Declaration public void Apply(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour Copy(IntPtr, IntPtr, Byte) Declaration public void Copy(IntPtr src, IntPtr dst, byte type) Parameters Type Name Description System.IntPtr src System.IntPtr dst System.Byte type Create(IntPtr, IntPtr, Nullable<Byte>) Declaration public NativeDetourData Create(IntPtr from, IntPtr to, Nullable<byte> type) Parameters Type Name Description System.IntPtr from System.IntPtr to System.Nullable < System.Byte > type Returns Type Description NativeDetourData FlushICache(IntPtr, UInt32) Declaration public void FlushICache(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size Free(NativeDetourData) Declaration public void Free(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour GetCurrentProcess() Declaration public static IntPtr GetCurrentProcess() Returns Type Description System.IntPtr MakeExecutable(IntPtr, UInt32) Declaration public void MakeExecutable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MakeWritable(IntPtr, UInt32) Declaration public void MakeWritable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MemAlloc(UInt32) Declaration public IntPtr MemAlloc(uint size) Parameters Type Name Description System.UInt32 size Returns Type Description System.IntPtr MemFree(IntPtr) Declaration public void MemFree(IntPtr ptr) Parameters Type Name Description System.IntPtr ptr Implements IDetourNativePlatform"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourNativeMonoPosixPlatform.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourNativeMonoPosixPlatform.html",
    "title": "Class DetourNativeMonoPosixPlatform | MonoMod",
    "keywords": "Class DetourNativeMonoPosixPlatform Inheritance System.Object DetourNativeMonoPosixPlatform Implements IDetourNativePlatform Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourNativeMonoPosixPlatform : Object, IDetourNativePlatform Constructors DetourNativeMonoPosixPlatform(IDetourNativePlatform) Declaration public DetourNativeMonoPosixPlatform(IDetourNativePlatform inner) Parameters Type Name Description IDetourNativePlatform inner Methods Apply(NativeDetourData) Declaration public void Apply(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour Copy(IntPtr, IntPtr, Byte) Declaration public void Copy(IntPtr src, IntPtr dst, byte type) Parameters Type Name Description System.IntPtr src System.IntPtr dst System.Byte type Create(IntPtr, IntPtr, Nullable<Byte>) Declaration public NativeDetourData Create(IntPtr from, IntPtr to, Nullable<byte> type) Parameters Type Name Description System.IntPtr from System.IntPtr to System.Nullable < System.Byte > type Returns Type Description NativeDetourData FlushICache(IntPtr, UInt32) Declaration public void FlushICache(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size Free(NativeDetourData) Declaration public void Free(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour MakeExecutable(IntPtr, UInt32) Declaration public void MakeExecutable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MakeWritable(IntPtr, UInt32) Declaration public void MakeWritable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MemAlloc(UInt32) Declaration public IntPtr MemAlloc(uint size) Parameters Type Name Description System.UInt32 size Returns Type Description System.IntPtr MemFree(IntPtr) Declaration public void MemFree(IntPtr ptr) Parameters Type Name Description System.IntPtr ptr sysconf(DetourNativeMonoPosixPlatform.SysconfName, DetourNativeMonoPosixPlatform.Errno) Declaration public static long sysconf(DetourNativeMonoPosixPlatform.SysconfName name, DetourNativeMonoPosixPlatform.Errno defaultError) Parameters Type Name Description DetourNativeMonoPosixPlatform.SysconfName name DetourNativeMonoPosixPlatform.Errno defaultError Returns Type Description System.Int64 Implements IDetourNativePlatform"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourNativeARMPlatform.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourNativeARMPlatform.html",
    "title": "Class DetourNativeARMPlatform | MonoMod",
    "keywords": "Class DetourNativeARMPlatform Inheritance System.Object DetourNativeARMPlatform Implements IDetourNativePlatform Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourNativeARMPlatform : Object, IDetourNativePlatform Constructors DetourNativeARMPlatform() Declaration public DetourNativeARMPlatform() Fields ShouldFlushICache Declaration public bool ShouldFlushICache Field Value Type Description System.Boolean Methods Apply(NativeDetourData) Declaration public void Apply(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour Copy(IntPtr, IntPtr, Byte) Declaration public void Copy(IntPtr src, IntPtr dst, byte type) Parameters Type Name Description System.IntPtr src System.IntPtr dst System.Byte type Create(IntPtr, IntPtr, Nullable<Byte>) Declaration public NativeDetourData Create(IntPtr from, IntPtr to, Nullable<byte> type) Parameters Type Name Description System.IntPtr from System.IntPtr to System.Nullable < System.Byte > type Returns Type Description NativeDetourData FlushICache(IntPtr, UInt32) Declaration public void FlushICache(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size Free(NativeDetourData) Declaration public void Free(NativeDetourData detour) Parameters Type Name Description NativeDetourData detour MakeExecutable(IntPtr, UInt32) Declaration public void MakeExecutable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MakeWritable(IntPtr, UInt32) Declaration public void MakeWritable(IntPtr src, uint size) Parameters Type Name Description System.IntPtr src System.UInt32 size MemAlloc(UInt32) Declaration public IntPtr MemAlloc(uint size) Parameters Type Name Description System.UInt32 size Returns Type Description System.IntPtr MemFree(IntPtr) Declaration public void MemFree(IntPtr ptr) Parameters Type Name Description System.IntPtr ptr Implements IDetourNativePlatform"
  },
  "api/MonoMod.RuntimeDetour.Platforms.DetourNativeARMPlatform.DetourType.html": {
    "href": "api/MonoMod.RuntimeDetour.Platforms.DetourNativeARMPlatform.DetourType.html",
    "title": "Class DetourNativeARMPlatform.DetourType | MonoMod",
    "keywords": "Class DetourNativeARMPlatform.DetourType Inheritance System.Object DetourNativeARMPlatform.DetourType Namespace : MonoMod.RuntimeDetour.Platforms Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class DetourType : Enum Fields AArch32 Declaration public const DetourNativeARMPlatform.DetourType AArch32 Field Value Type Description DetourNativeARMPlatform.DetourType AArch32BX Declaration public const DetourNativeARMPlatform.DetourType AArch32BX Field Value Type Description DetourNativeARMPlatform.DetourType AArch64 Declaration public const DetourNativeARMPlatform.DetourType AArch64 Field Value Type Description DetourNativeARMPlatform.DetourType Thumb Declaration public const DetourNativeARMPlatform.DetourType Thumb Field Value Type Description DetourNativeARMPlatform.DetourType ThumbBX Declaration public const DetourNativeARMPlatform.DetourType ThumbBX Field Value Type Description DetourNativeARMPlatform.DetourType value__ Declaration public byte value__ Field Value Type Description System.Byte"
  },
  "api/MonoMod.RuntimeDetour.NativeDetourData.html": {
    "href": "api/MonoMod.RuntimeDetour.NativeDetourData.html",
    "title": "Class NativeDetourData | MonoMod",
    "keywords": "Class NativeDetourData The data forming a \"raw\" native detour, created and consumed by DetourManager.Native. Inheritance System.Object NativeDetourData Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class NativeDetourData : ValueType Fields Extra DetourManager.Native-specific data. Declaration public IntPtr Extra Field Value Type Description System.IntPtr Method The method to detour from. Set when the structure is created by the IDetourNativePlatform. Declaration public IntPtr Method Field Value Type Description System.IntPtr Size The size of the detour. Calculated when the structure is created by the IDetourNativePlatform. Declaration public uint Size Field Value Type Description System.UInt32 Target The target method to be called instead. Set when the structure is created by the IDetourNativePlatform. Declaration public IntPtr Target Field Value Type Description System.IntPtr Type The type of the detour. Determined when the structure is created by the IDetourNativePlatform. Declaration public byte Type Field Value Type Description System.Byte"
  },
  "api/MonoMod.RuntimeDetour.NativeDetourConfig.html": {
    "href": "api/MonoMod.RuntimeDetour.NativeDetourConfig.html",
    "title": "Class NativeDetourConfig | MonoMod",
    "keywords": "Class NativeDetourConfig Inheritance System.Object NativeDetourConfig Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class NativeDetourConfig : ValueType Fields ManualApply Declaration public bool ManualApply Field Value Type Description System.Boolean SkipILCopy Declaration public bool SkipILCopy Field Value Type Description System.Boolean"
  },
  "api/MonoMod.RuntimeDetour.IDetourRuntimePlatform.html": {
    "href": "api/MonoMod.RuntimeDetour.IDetourRuntimePlatform.html",
    "title": "Interface IDetourRuntimePlatform | MonoMod",
    "keywords": "Interface IDetourRuntimePlatform Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public interface IDetourRuntimePlatform Methods CreateCopy(MethodBase) Declaration MethodInfo CreateCopy(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Returns Type Description System.Reflection.MethodInfo GetDetourTarget(MethodBase, MethodBase) Declaration MethodBase GetDetourTarget(MethodBase from, MethodBase to) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodBase to Returns Type Description System.Reflection.MethodBase GetNativeStart(MethodBase) Declaration IntPtr GetNativeStart(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method Returns Type Description System.IntPtr Pin(MethodBase) Declaration void Pin(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method TryCreateCopy(MethodBase, out MethodInfo) Declaration bool TryCreateCopy(MethodBase method, out MethodInfo dm) Parameters Type Name Description System.Reflection.MethodBase method System.Reflection.MethodInfo dm Returns Type Description System.Boolean Unpin(MethodBase) Declaration void Unpin(MethodBase method) Parameters Type Name Description System.Reflection.MethodBase method"
  },
  "api/MonoMod.RuntimeDetour.Hook-1.html": {
    "href": "api/MonoMod.RuntimeDetour.Hook-1.html",
    "title": "Class Hook<T> | MonoMod",
    "keywords": "Class Hook<T> Inheritance System.Object Hook Hook<T> Implements IDetour System.IDisposable Inherited Members Hook.OnDetour Hook.OnUndo Hook.OnGenerateTrampoline Hook.Method Hook.Target Hook.TargetReal Hook.DelegateTarget Hook.Apply() Hook.Undo() Hook.Free() Hook.Dispose() Hook.GenerateTrampoline(MethodBase) Hook.GenerateTrampoline<T>() Hook.IsValid Hook.IsApplied Hook.Detour Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public class Hook<T> : Hook, IDetour, IDisposable Type Parameters Name Description T Constructors Hook(T, T) Declaration public Hook(T from, T to) Parameters Type Name Description T from T to Hook(T, T, HookConfig) Declaration public Hook(T from, T to, HookConfig config) Parameters Type Name Description T from T to HookConfig config Hook(T, T, ref HookConfig) Declaration public Hook(T from, T to, ref HookConfig config) Parameters Type Name Description T from T to HookConfig config Hook(T, IntPtr) Declaration public Hook(T from, IntPtr to) Parameters Type Name Description T from System.IntPtr to Hook(T, IntPtr, HookConfig) Declaration public Hook(T from, IntPtr to, HookConfig config) Parameters Type Name Description T from System.IntPtr to HookConfig config Hook(T, IntPtr, ref HookConfig) Declaration public Hook(T from, IntPtr to, ref HookConfig config) Parameters Type Name Description T from System.IntPtr to HookConfig config Hook(Expression<Action>, T) Declaration public Hook(Expression<Action> from, T to) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from T to Hook(Expression<Action>, T, HookConfig) Declaration public Hook(Expression<Action> from, T to, HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from T to HookConfig config Hook(Expression<Action>, T, ref HookConfig) Declaration public Hook(Expression<Action> from, T to, ref HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from T to HookConfig config Hook(Expression<Func<T>>, Delegate) Declaration public Hook(Expression<Func<T>> from, Delegate to) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> from System.Delegate to Hook(Expression<Func<T>>, Delegate, HookConfig) Declaration public Hook(Expression<Func<T>> from, Delegate to, HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> from System.Delegate to HookConfig config Hook(Expression<Func<T>>, Delegate, ref HookConfig) Declaration public Hook(Expression<Func<T>> from, Delegate to, ref HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> from System.Delegate to HookConfig config Hook(Expression<Func<T>>, IntPtr) Declaration public Hook(Expression<Func<T>> from, IntPtr to) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> from System.IntPtr to Hook(Expression<Func<T>>, IntPtr, HookConfig) Declaration public Hook(Expression<Func<T>> from, IntPtr to, HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> from System.IntPtr to HookConfig config Hook(Expression<Func<T>>, IntPtr, ref HookConfig) Declaration public Hook(Expression<Func<T>> from, IntPtr to, ref HookConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> from System.IntPtr to HookConfig config Implements IDetour System.IDisposable"
  },
  "api/MonoMod.RuntimeDetour.HarmonyDetourBridge.html": {
    "href": "api/MonoMod.RuntimeDetour.HarmonyDetourBridge.html",
    "title": "Class HarmonyDetourBridge | MonoMod",
    "keywords": "Class HarmonyDetourBridge Inheritance System.Object HarmonyDetourBridge Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public static class HarmonyDetourBridge : Object Properties Initialized Declaration public static bool Initialized { get; } Property Value Type Description System.Boolean Methods Init(Boolean, HarmonyDetourBridge.Type) Declaration public static bool Init(bool forceLoad = true, HarmonyDetourBridge.Type type) Parameters Type Name Description System.Boolean forceLoad HarmonyDetourBridge.Type type Returns Type Description System.Boolean Reset() Declaration public static void Reset()"
  },
  "api/MonoMod.RuntimeDetour.HarmonyDetourBridge.Type.html": {
    "href": "api/MonoMod.RuntimeDetour.HarmonyDetourBridge.Type.html",
    "title": "Class HarmonyDetourBridge.Type | MonoMod",
    "keywords": "Class HarmonyDetourBridge.Type Inheritance System.Object HarmonyDetourBridge.Type Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public sealed class Type : Enum Fields AsOriginal Declaration public const HarmonyDetourBridge.Type AsOriginal Field Value Type Description HarmonyDetourBridge.Type Auto Declaration public const HarmonyDetourBridge.Type Auto Field Value Type Description HarmonyDetourBridge.Type Basic Declaration public const HarmonyDetourBridge.Type Basic Field Value Type Description HarmonyDetourBridge.Type Override Declaration public const HarmonyDetourBridge.Type Override Field Value Type Description HarmonyDetourBridge.Type value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/MonoMod.RuntimeDetour.Detour.html": {
    "href": "api/MonoMod.RuntimeDetour.Detour.html",
    "title": "Class Detour | MonoMod",
    "keywords": "Class Detour A fully managed detour. Multiple Detours for a method to detour from can exist at any given time. Detours can be layered. If you're writing your own detour manager or need to detour native functions, it's better to create instances of NativeDetour instead. Inheritance System.Object Detour Detour<T> Implements ISortableDetour IDetour System.IDisposable Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public class Detour : Object, ISortableDetour, IDetour, IDisposable Constructors Detour(Delegate, Delegate) Declaration public Detour(Delegate from, Delegate to) Parameters Type Name Description System.Delegate from System.Delegate to Detour(Delegate, Delegate, DetourConfig) Declaration public Detour(Delegate from, Delegate to, DetourConfig config) Parameters Type Name Description System.Delegate from System.Delegate to DetourConfig config Detour(Delegate, Delegate, ref DetourConfig) Declaration public Detour(Delegate from, Delegate to, ref DetourConfig config) Parameters Type Name Description System.Delegate from System.Delegate to DetourConfig config Detour(Delegate, IntPtr) Declaration public Detour(Delegate from, IntPtr to) Parameters Type Name Description System.Delegate from System.IntPtr to Detour(Delegate, IntPtr, DetourConfig) Declaration public Detour(Delegate from, IntPtr to, DetourConfig config) Parameters Type Name Description System.Delegate from System.IntPtr to DetourConfig config Detour(Delegate, IntPtr, ref DetourConfig) Declaration public Detour(Delegate from, IntPtr to, ref DetourConfig config) Parameters Type Name Description System.Delegate from System.IntPtr to DetourConfig config Detour(Expression, IntPtr) Declaration public Detour(Expression from, IntPtr to) Parameters Type Name Description System.Linq.Expressions.Expression from System.IntPtr to Detour(Expression, IntPtr, DetourConfig) Declaration public Detour(Expression from, IntPtr to, DetourConfig config) Parameters Type Name Description System.Linq.Expressions.Expression from System.IntPtr to DetourConfig config Detour(Expression, IntPtr, ref DetourConfig) Declaration public Detour(Expression from, IntPtr to, ref DetourConfig config) Parameters Type Name Description System.Linq.Expressions.Expression from System.IntPtr to DetourConfig config Detour(Expression, Expression) Declaration public Detour(Expression from, Expression to) Parameters Type Name Description System.Linq.Expressions.Expression from System.Linq.Expressions.Expression to Detour(Expression, Expression, DetourConfig) Declaration public Detour(Expression from, Expression to, DetourConfig config) Parameters Type Name Description System.Linq.Expressions.Expression from System.Linq.Expressions.Expression to DetourConfig config Detour(Expression, Expression, ref DetourConfig) Declaration public Detour(Expression from, Expression to, ref DetourConfig config) Parameters Type Name Description System.Linq.Expressions.Expression from System.Linq.Expressions.Expression to DetourConfig config Detour(Expression<Action>, IntPtr) Declaration public Detour(Expression<Action> from, IntPtr to) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.IntPtr to Detour(Expression<Action>, IntPtr, DetourConfig) Declaration public Detour(Expression<Action> from, IntPtr to, DetourConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.IntPtr to DetourConfig config Detour(Expression<Action>, IntPtr, ref DetourConfig) Declaration public Detour(Expression<Action> from, IntPtr to, ref DetourConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.IntPtr to DetourConfig config Detour(Expression<Action>, Expression<Action>) Declaration public Detour(Expression<Action> from, Expression<Action> to) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.Linq.Expressions.Expression < System.Action > to Detour(Expression<Action>, Expression<Action>, DetourConfig) Declaration public Detour(Expression<Action> from, Expression<Action> to, DetourConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.Linq.Expressions.Expression < System.Action > to DetourConfig config Detour(Expression<Action>, Expression<Action>, ref DetourConfig) Declaration public Detour(Expression<Action> from, Expression<Action> to, ref DetourConfig config) Parameters Type Name Description System.Linq.Expressions.Expression < System.Action > from System.Linq.Expressions.Expression < System.Action > to DetourConfig config Detour(MethodBase, IntPtr) Declaration public Detour(MethodBase method, IntPtr to) Parameters Type Name Description System.Reflection.MethodBase method System.IntPtr to Detour(MethodBase, IntPtr, DetourConfig) Declaration public Detour(MethodBase method, IntPtr to, DetourConfig config) Parameters Type Name Description System.Reflection.MethodBase method System.IntPtr to DetourConfig config Detour(MethodBase, IntPtr, ref DetourConfig) Declaration public Detour(MethodBase method, IntPtr to, ref DetourConfig config) Parameters Type Name Description System.Reflection.MethodBase method System.IntPtr to DetourConfig config Detour(MethodBase, MethodBase) Declaration public Detour(MethodBase from, MethodBase to) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodBase to Detour(MethodBase, MethodBase, DetourConfig) Declaration public Detour(MethodBase from, MethodBase to, DetourConfig config) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodBase to DetourConfig config Detour(MethodBase, MethodBase, ref DetourConfig) Declaration public Detour(MethodBase from, MethodBase to, ref DetourConfig config) Parameters Type Name Description System.Reflection.MethodBase from System.Reflection.MethodBase to DetourConfig config Fields Method Declaration public readonly MethodBase Method Field Value Type Description System.Reflection.MethodBase OnDetour Declaration public static Func<Detour, MethodBase, MethodBase, bool> OnDetour Field Value Type Description System.Func < Detour , System.Reflection.MethodBase , System.Reflection.MethodBase , System.Boolean > OnGenerateTrampoline Declaration public static Func<Detour, MethodBase, MethodBase> OnGenerateTrampoline Field Value Type Description System.Func < Detour , System.Reflection.MethodBase , System.Reflection.MethodBase > OnUndo Declaration public static Func<Detour, bool> OnUndo Field Value Type Description System.Func < Detour , System.Boolean > Target Declaration public readonly MethodBase Target Field Value Type Description System.Reflection.MethodBase TargetReal Declaration public readonly MethodBase TargetReal Field Value Type Description System.Reflection.MethodBase Properties After Declaration public IEnumerable<string> After { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Before Declaration public IEnumerable<string> Before { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > GlobalIndex Declaration public uint GlobalIndex { get; } Property Value Type Description System.UInt32 ID Declaration public string ID { get; set; } Property Value Type Description System.String Index Declaration public int Index { get; } Property Value Type Description System.Int32 IsApplied Declaration public bool IsApplied { get; } Property Value Type Description System.Boolean IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean MaxIndex Declaration public int MaxIndex { get; } Property Value Type Description System.Int32 Priority Declaration public int Priority { get; set; } Property Value Type Description System.Int32 Methods Apply() Mark the detour as applied in the detour chain. This can be done automatically when creating an instance. Declaration public void Apply() Dispose() Undo and free this temporary detour. Declaration public void Dispose() Free() Free the detour, while also permanently undoing it. This makes any further operations on this detour invalid. Declaration public void Free() GenerateTrampoline(MethodBase) Generate a new DynamicMethod with which you can invoke the previous state. Declaration public MethodBase GenerateTrampoline(MethodBase signature = null) Parameters Type Name Description System.Reflection.MethodBase signature Returns Type Description System.Reflection.MethodBase GenerateTrampoline<T>() Generate a new DynamicMethod with which you can invoke the previous state. Declaration public T GenerateTrampoline<T>() where T : Delegate Returns Type Description T Type Parameters Name Description T Undo() Undo the detour without freeing it, allowing you to reapply it later. Declaration public void Undo() Implements ISortableDetour IDetour System.IDisposable"
  },
  "api/MonoMod.RuntimeDetour.Detour-1.html": {
    "href": "api/MonoMod.RuntimeDetour.Detour-1.html",
    "title": "Class Detour<T> | MonoMod",
    "keywords": "Class Detour<T> Inheritance System.Object Detour Detour<T> Implements ISortableDetour IDetour System.IDisposable Inherited Members Detour.OnDetour Detour.OnUndo Detour.OnGenerateTrampoline Detour.Method Detour.Target Detour.TargetReal Detour.Apply() Detour.Undo() Detour.Free() Detour.Dispose() Detour.GenerateTrampoline(MethodBase) Detour.GenerateTrampoline<T>() Detour.IsValid Detour.IsApplied Detour.Index Detour.MaxIndex Detour.GlobalIndex Detour.Priority Detour.ID Detour.Before Detour.After Namespace : MonoMod.RuntimeDetour Assembly : MonoMod.RuntimeDetour.dll Syntax public class Detour<T> : Detour, ISortableDetour, IDetour, IDisposable where T : Delegate Type Parameters Name Description T Constructors Detour(T, T) Declaration public Detour(T from, T to) Parameters Type Name Description T from T to Detour(T, T, DetourConfig) Declaration public Detour(T from, T to, DetourConfig config) Parameters Type Name Description T from T to DetourConfig config Detour(T, T, ref DetourConfig) Declaration public Detour(T from, T to, ref DetourConfig config) Parameters Type Name Description T from T to DetourConfig config Detour(T, IntPtr) Declaration public Detour(T from, IntPtr to) Parameters Type Name Description T from System.IntPtr to Detour(T, IntPtr, DetourConfig) Declaration public Detour(T from, IntPtr to, DetourConfig config) Parameters Type Name Description T from System.IntPtr to DetourConfig config Detour(T, IntPtr, ref DetourConfig) Declaration public Detour(T from, IntPtr to, ref DetourConfig config) Parameters Type Name Description T from System.IntPtr to DetourConfig config Implements ISortableDetour IDetour System.IDisposable"
  },
  "api/MonoMod.RelinkMapEntry.html": {
    "href": "api/MonoMod.RelinkMapEntry.html",
    "title": "Class RelinkMapEntry | MonoMod",
    "keywords": "Class RelinkMapEntry Inheritance System.Object RelinkMapEntry Namespace : MonoMod Assembly : MonoMod.dll Syntax public class RelinkMapEntry : Object Constructors RelinkMapEntry() Declaration public RelinkMapEntry() RelinkMapEntry(String, String) Declaration public RelinkMapEntry(string type, string findableID) Parameters Type Name Description System.String type System.String findableID Fields FindableID Declaration public string FindableID Field Value Type Description System.String Type Declaration public string Type Field Value Type Description System.String"
  },
  "api/MonoMod.PostProcessor.html": {
    "href": "api/MonoMod.PostProcessor.html",
    "title": "Class PostProcessor | MonoMod",
    "keywords": "Class PostProcessor Inheritance System.Object PostProcessor Namespace : MonoMod Assembly : MonoMod.dll Syntax public sealed class PostProcessor : MulticastDelegate Constructors PostProcessor(Object, IntPtr) Declaration public PostProcessor(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(MonoModder, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(MonoModder modder, AsyncCallback callback, object object) Parameters Type Name Description MonoModder modder System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(MonoModder) Declaration public virtual void Invoke(MonoModder modder) Parameters Type Name Description MonoModder modder"
  },
  "api/MonoMod.MonoModPatch.html": {
    "href": "api/MonoMod.MonoModPatch.html",
    "title": "Class MonoModPatch | MonoMod",
    "keywords": "Class MonoModPatch MonoMod patch attribute. Apply it onto a type and it will behave as if the type was prefixed with patch_. This allows for custom compile-time names while MonoMod uses the supplied name for any relinking. Inheritance System.Object MonoModPatch Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModPatch : Attribute Constructors MonoModPatch(String) Declaration public MonoModPatch(string name) Parameters Type Name Description System.String name"
  },
  "api/MonoMod.MonoModOriginalName.html": {
    "href": "api/MonoMod.MonoModOriginalName.html",
    "title": "Class MonoModOriginalName | MonoMod",
    "keywords": "Class MonoModOriginalName MonoMod original name attribute. Apply it onto a method (not the orig_) and its orig_ method will instead be named like that. Inheritance System.Object MonoModOriginalName Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModOriginalName : Attribute Constructors MonoModOriginalName(String) Declaration public MonoModOriginalName(string n) Parameters Type Name Description System.String n"
  },
  "api/MonoMod.MonoModNoNew.html": {
    "href": "api/MonoMod.MonoModNoNew.html",
    "title": "Class MonoModNoNew | MonoMod",
    "keywords": "Class MonoModNoNew MonoMod \"only patch if it exists\" attribute. Apply it onto a type or method and it gets ignored if there's no original method in the input module. Inheritance System.Object MonoModNoNew Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModNoNew : Attribute Constructors MonoModNoNew() Declaration public MonoModNoNew()"
  },
  "api/MonoMod.MonoModLinkTo.html": {
    "href": "api/MonoMod.MonoModLinkTo.html",
    "title": "Class MonoModLinkTo | MonoMod",
    "keywords": "Class MonoModLinkTo MonoMod linkto attribute. Apply it onto a type / method / field and calls to it by mods will be relinked to another target. Inheritance System.Object MonoModLinkTo Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModLinkTo : Attribute Constructors MonoModLinkTo(String) Declaration public MonoModLinkTo(string t) Parameters Type Name Description System.String t MonoModLinkTo(String, String) Declaration public MonoModLinkTo(string t, string n) Parameters Type Name Description System.String t System.String n MonoModLinkTo(Type) Declaration public MonoModLinkTo(Type t) Parameters Type Name Description System.Type t MonoModLinkTo(Type, String) Declaration public MonoModLinkTo(Type t, string n) Parameters Type Name Description System.Type t System.String n"
  },
  "api/MonoMod.MonoModIfFlag.html": {
    "href": "api/MonoMod.MonoModIfFlag.html",
    "title": "Class MonoModIfFlag | MonoMod",
    "keywords": "Class MonoModIfFlag MonoMod \"if\" attribute. Apply it onto a type / method / field and it gets ignored if MonoModder.Data[key] equals false. If fallback (true by default) is false, it also gets ignored if MonoModder.Data[key] is undefined. Inheritance System.Object MonoModIfFlag Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModIfFlag : Attribute Constructors MonoModIfFlag(String) Declaration public MonoModIfFlag(string key) Parameters Type Name Description System.String key MonoModIfFlag(String, Boolean) Declaration public MonoModIfFlag(string key, bool fallback) Parameters Type Name Description System.String key System.Boolean fallback"
  },
  "api/MonoMod.MonoModHook.html": {
    "href": "api/MonoMod.MonoModHook.html",
    "title": "Class MonoModHook | MonoMod",
    "keywords": "Class MonoModHook MonoMod hook attribute. Apply it onto a type / method / field and calls to the item it hooks will be relinked to the item the attribute gets applied to. Inheritance System.Object MonoModHook Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModHook : Attribute Constructors MonoModHook(String) Declaration public MonoModHook(string findableID) Parameters Type Name Description System.String findableID MonoModHook(Type) Declaration public MonoModHook(Type type) Parameters Type Name Description System.Type type Fields FindableID Declaration public string FindableID Field Value Type Description System.String Type Declaration public Type Type Field Value Type Description System.Type"
  },
  "api/MonoMod.MonoModEnumReplace.html": {
    "href": "api/MonoMod.MonoModEnumReplace.html",
    "title": "Class MonoModEnumReplace | MonoMod",
    "keywords": "Class MonoModEnumReplace MonoMod enum replace attribute. Apply it onto a enum type / class and its values will be replaced by MonoMod. Inheritance System.Object MonoModEnumReplace Namespace : MonoMod Assembly : MonoMod.dll Syntax public class MonoModEnumReplace : Attribute Constructors MonoModEnumReplace() Declaration public MonoModEnumReplace()"
  },
  "api/MonoMod.MissingDependencyResolver.html": {
    "href": "api/MonoMod.MissingDependencyResolver.html",
    "title": "Class MissingDependencyResolver | MonoMod",
    "keywords": "Class MissingDependencyResolver Inheritance System.Object MissingDependencyResolver Namespace : MonoMod Assembly : MonoMod.dll Syntax public sealed class MissingDependencyResolver : MulticastDelegate Constructors MissingDependencyResolver(Object, IntPtr) Declaration public MissingDependencyResolver(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(MonoModder, ModuleDefinition, String, String, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(MonoModder modder, ModuleDefinition main, string name, string fullName, AsyncCallback callback, object object) Parameters Type Name Description MonoModder modder Mono.Cecil.ModuleDefinition main System.String name System.String fullName System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual ModuleDefinition EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Returns Type Description Mono.Cecil.ModuleDefinition Invoke(MonoModder, ModuleDefinition, String, String) Declaration public virtual ModuleDefinition Invoke(MonoModder modder, ModuleDefinition main, string name, string fullName) Parameters Type Name Description MonoModder modder Mono.Cecil.ModuleDefinition main System.String name System.String fullName Returns Type Description Mono.Cecil.ModuleDefinition"
  },
  "api/MonoMod.MethodRewriter.html": {
    "href": "api/MonoMod.MethodRewriter.html",
    "title": "Class MethodRewriter | MonoMod",
    "keywords": "Class MethodRewriter Inheritance System.Object MethodRewriter Namespace : MonoMod Assembly : MonoMod.dll Syntax public sealed class MethodRewriter : MulticastDelegate Constructors MethodRewriter(Object, IntPtr) Declaration public MethodRewriter(object object, IntPtr method) Parameters Type Name Description System.Object object System.IntPtr method Methods BeginInvoke(MonoModder, MethodDefinition, AsyncCallback, Object) Declaration public virtual IAsyncResult BeginInvoke(MonoModder modder, MethodDefinition method, AsyncCallback callback, object object) Parameters Type Name Description MonoModder modder Mono.Cecil.MethodDefinition method System.AsyncCallback callback System.Object object Returns Type Description System.IAsyncResult EndInvoke(IAsyncResult) Declaration public virtual void EndInvoke(IAsyncResult result) Parameters Type Name Description System.IAsyncResult result Invoke(MonoModder, MethodDefinition) Declaration public virtual void Invoke(MonoModder modder, MethodDefinition method) Parameters Type Name Description MonoModder modder Mono.Cecil.MethodDefinition method"
  },
  "api/MonoMod.InlineRT.MonoModRule.html": {
    "href": "api/MonoMod.InlineRT.MonoModRule.html",
    "title": "Class MonoModRule | MonoMod",
    "keywords": "Class MonoModRule Inheritance System.Object MonoModRule Namespace : MonoMod.InlineRT Assembly : MonoMod.dll Syntax public static class MonoModRule : Object Properties Modder Declaration public static MonoModder Modder { get; } Property Value Type Description MonoModder Methods Patch(String, Boolean) Declaration public static void Patch(string id, bool patch) Parameters Type Name Description System.String id System.Boolean patch RegisterCustomAttribute(String, String) Declaration public static void RegisterCustomAttribute(string attribName, string handlerName) Parameters Type Name Description System.String attribName System.String handlerName RegisterCustomMethodAttribute(String, String) Declaration public static void RegisterCustomMethodAttribute(string attribName, string handlerName) Parameters Type Name Description System.String attribName System.String handlerName RelinkMember(String, String, String) Declaration public static void RelinkMember(string from, string toType, string toMember) Parameters Type Name Description System.String from System.String toType System.String toMember RelinkModule(String, String) Declaration public static void RelinkModule(string from, string toName) Parameters Type Name Description System.String from System.String toName RelinkType(String, String) Declaration public static void RelinkType(string from, string to) Parameters Type Name Description System.String from System.String to"
  },
  "api/MonoMod.DebugSymbolFormat.html": {
    "href": "api/MonoMod.DebugSymbolFormat.html",
    "title": "Class DebugSymbolFormat | MonoMod",
    "keywords": "Class DebugSymbolFormat Inheritance System.Object DebugSymbolFormat Namespace : MonoMod Assembly : MonoMod.dll Syntax public sealed class DebugSymbolFormat : Enum Fields Auto Declaration public const DebugSymbolFormat Auto Field Value Type Description DebugSymbolFormat MDB Declaration public const DebugSymbolFormat MDB Field Value Type Description DebugSymbolFormat PDB Declaration public const DebugSymbolFormat PDB Field Value Type Description DebugSymbolFormat value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/MonoMod.Cil.RuntimeILReferenceBag.html": {
    "href": "api/MonoMod.Cil.RuntimeILReferenceBag.html",
    "title": "Class RuntimeILReferenceBag | MonoMod",
    "keywords": "Class RuntimeILReferenceBag An IL reference bag implementation to be used for runtime-generated methods. Inheritance System.Object RuntimeILReferenceBag Implements IILReferenceBag Namespace : MonoMod.Cil Assembly : MonoMod.Utils.dll Syntax public sealed class RuntimeILReferenceBag : Object, IILReferenceBag Constructors RuntimeILReferenceBag() Declaration public RuntimeILReferenceBag() Fields Instance Declaration public static readonly RuntimeILReferenceBag Instance Field Value Type Description RuntimeILReferenceBag Methods Clear<T>(Int32) Declaration public void Clear<T>(int id) Parameters Type Name Description System.Int32 id Type Parameters Name Description T Get<T>(Int32) Declaration public T Get<T>(int id) Parameters Type Name Description System.Int32 id Returns Type Description T Type Parameters Name Description T GetDelegateInvoker<T>() Declaration public MethodInfo GetDelegateInvoker<T>() where T : Delegate Returns Type Description System.Reflection.MethodInfo Type Parameters Name Description T GetGetter<T>() Declaration public MethodInfo GetGetter<T>() Returns Type Description System.Reflection.MethodInfo Type Parameters Name Description T Store<T>(T) Declaration public int Store<T>(T t) Parameters Type Name Description T t Returns Type Description System.Int32 Type Parameters Name Description T Implements IILReferenceBag"
  }
}